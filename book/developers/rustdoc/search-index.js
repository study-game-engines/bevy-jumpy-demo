var searchIndex = JSON.parse('{\
"core":{"doc":"This binary isn’t actually used in the game, but can be …","t":[3,3,7,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11],"n":["BevyBones","CoreMetaHandle","GLOBAL","Session","Snapshot","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","component_ids","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_components","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load","main","play_sounds","setup","snapshot_restore","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update_game","update_input","vzip","vzip","vzip","vzip","world"],"q":["core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Marker component for entities that are rendered for bones.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Wait for game meta to load, and then start the game …","","","Setup the game, loading the metadata and starting the game …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the game simulation.","Update the game session input.","","","","",""],"i":[0,0,0,0,0,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,30,5,6,6,30,18,5,6,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,30,6,30,18,5,6,30,18,5,5,5,30,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,0,0,0,0,0,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,6,30,18,5,0,0,6,30,18,5,6],"f":[0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4]],[[],5],[6],[7],[7],[7],[7],[7],[6],[7],[7],[7],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[9],[[]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[15,[17,[[16,[6]]]],[17,[[19,[18]]]],[16,[[21,[20]]]],[19,[[21,[22]]]]]],[[]],[[[19,[23]],[17,[[19,[6]]]]]],[[15,[19,[24]]]],[[[16,[5]],[19,[[26,[25]]]],[17,[[16,[6]]]]]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],28],[[],28],[[],28],[[],28],[[],17],[[],17],[[],17],[[],17],[8],[[[17,[[16,[6]]]],[19,[[26,[25]]]],[16,[29]]]],[[]],[[]],[[]],[[]],[6,9]],"p":[[8,"Any"],[3,"RenderAssets"],[3,"Components"],[3,"Storages"],[3,"Snapshot"],[3,"Session"],[15,"usize"],[3,"World"],[3,"World"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"bool"],[3,"Commands"],[3,"ResMut"],[4,"Option"],[3,"CoreMetaHandle"],[3,"Res"],[3,"CoreMeta"],[3,"Assets"],[3,"MapMeta"],[6,"Audio"],[3,"AssetServer"],[4,"KeyCode"],[3,"Input"],[4,"Result"],[3,"TypeId"],[3,"Windows"],[3,"BevyBones"]]},\
"jumpy":{"doc":"Jumpy is a pixel-style, tactical 2D shooter with a fishy …","tn":["EngineState","First","GLOBAL","GameEditorState","Hidden","InGame","InGameState","Input","Last","LoadingGameData","LoadingPlatformStorage","MainMenu","Paused","Playing","PostUpdate","PreUpdate","RollbackStage","Update","Visible","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_str","assets","audio","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","config","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","init","init","init","init","input","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","loading","localization","main","metadata","networking","platform","prelude","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","serialize","serialize","serialize","session","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ui","upcast","upcast","upcast","upcast","utils","vzip","vzip","vzip","vzip","AssetHandle","EguiFont","EguiFontLoader","JumpyAssetPlugin","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","asset_handle","asset_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","extensions","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","init","init","init","inner","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","load","raw_clone","raw_drop","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","vzip","vzip","vzip","AssetHandle","as_any","as_any_mut","as_bind_group_shader_type","asset_path","borrow","borrow_mut","clone","clone_into","clone_type_data","clone_weak","component_ids","default","deref","deref","deref_mut","deserialize","downcast","drop","erased_serialize","fmt","from","from_components","from_sample_","from_subset","from_world","from_world","get_components","get_normalized_relative_path","init","inner","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","load","new","raw_clone","raw_drop","serialize","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","CharacterSelect","Credits","EffectsChannel","Fight","JumpyAudioPlugin","MUSIC_FADE_DURATION","MainMenu","MusicChannel","MusicState","None","ShuffledPlaylist","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","current_instance","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","music_system","raw_clone","raw_clone","raw_drop","raw_drop","setup_audio_defaults","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","idx","instance","MenuCamera","apply","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow_mut","clone_dynamic","clone_value","component_ids","default","deref","deref_mut","downcast","drop","field","field_at","field_at_mut","field_len","field_mut","from","from_components","from_sample_","from_subset","from_world","from_world","get_components","get_field","get_field_mut","get_type_info","get_type_registration","init","into","into_any","into_any","into_any_arc","into_any_rc","into_reflect","into_sample","is_in_subset","iter_fields","name_at","path","path_mut","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","set","spawn_menu_camera","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_info","type_name","upcast","vzip","ASSET_DIR_ENV_VAR","DEFAULT_LOG_LEVEL","ENGINE_CONFIG","EngineConfig","SERVER_MODE_ENV_VAR","as_any","as_any_mut","as_bind_group_shader_type","asset_dir","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","clone_type_data","command","command_for_update","deref","deref_mut","downcast","drop","fmt","from","from_arg_matches","from_arg_matches_mut","from_sample_","from_subset","game_asset","group_id","hot_reload","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","log_level","raw_clone","raw_drop","sync_test_check_distance","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip","JumpyDebugPlugin","WorldInspectorEnabled","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","world_inspector","CurrentEditorInput","Grab","Jump","JumpyPlayerInputPlugin","Move","PlayerAction","Shoot","Slide","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","get_at","get_hash","hash","index","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","raw_clone","raw_drop","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","GameLoader","JumpyLoadingPlugin","PlayerInputCollector","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","commands","component_ids","core_assets","core_assets_loaded","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","egui_ctx","events","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","game_assets","game_handle","get_components","hot_reload_game","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","load","load_game","menu_input_map","player_assets","setup","should_skip_run","skip_next_asset_update_event","storage","texture_atlas_assets","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","JumpyLocalizationPlugin","LocalizationExt","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","get","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","load_locales","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","BorderImageMeta","ButtonBordersMeta","ButtonStylesMeta","ButtonThemeMeta","ColorMetaExt","FontFamily","FontMeta","FontStylesMeta","GameMeta","GameMetaHandle","HudThemeMeta","ImageMeta","MainMenuMeta","MarginMeta","MusicMeta","PanelThemeMeta","PlayerControlMethods","PlayerControls","ProgressBarMeta","Settings","TranslationsMeta","UIThemeMeta","UiThemeColors","UiThemeEditor","UiThemeEditorIcons","UiThemeWidgets","WidgetStyle","active","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","background_image","background_image","bg_fill","bg_stroke","bigger","border","border_radius","border_size","borders","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button_styles","character_screen","clicked","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collisions","color","colors","core","credits","debug_window_fill","default","default","default","default_locale","default_settings","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","detected_locale","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","editor","egui_texture","egui_texture_id","elements","erased_serialize","expansion","family","fight","fmt","fmt","fmt","fmt","fmt","focused","font","font","font_color","font_families","font_styles","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","gamemeta_derive_bevy_asset","gamepad","grab","heading","height","hovered","hud","icons","image","image","image_size","image_size","init","init","init","init","init","install_asset","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_egui","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jump","keyboard1","keyboard2","left","lifebar","load","load","load","locales","localization","main_menu","matchmaking_server","menu","menu_width","movement","music","noninteractive","normal","normal","padding","padding","panel","player_controls","player_hud_width","portrait_frame","positive","progress_image","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","results_screen","right","scale","scale","select","serialize","settings","shoot","size","slide","small","smaller","subtitle_font","text","tiles","title_font","title_screen","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","top","translations","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_uuid","ui","ui_theme","ulid","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","widgets","AssetLoader","RequiredBounds","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","extensions","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","load","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","TranslationsMeta","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default_locale","deref","deref_mut","deserialize","detected_locale","downcast","drop","fmt","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","load","locales","raw_clone","raw_drop","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","PlayerControlMethods","PlayerControls","STORAGE_KEY","Settings","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","gamepad","get_input_map","get_stored_or_default","grab","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","jump","keyboard1","keyboard2","matchmaking_server","movement","player_controls","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","serialize","serialize","serialize","shoot","slide","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","BorderImageMeta","ButtonBordersMeta","ButtonStylesMeta","ButtonThemeMeta","FontFamily","FontMeta","FontStylesMeta","HudThemeMeta","MarginMeta","PanelThemeMeta","ProgressBarMeta","UIThemeMeta","UiThemeColors","UiThemeEditor","UiThemeEditorIcons","UiThemeWidgets","WidgetStyle","active","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_list","as_mut_list","background_image","bg_fill","bg_stroke","bigger","border","border_radius","border_size","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button_styles","clicked","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collisions","color","colored","colors","debug_window_fill","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","editor","egui_texture","elements","expansion","f32_one","family","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","font","font","font_color","font_families","font_id","font_styles","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_egui_widget_style","get_egui_widget_visuals","heading","height","hovered","hud","icons","image","image_size","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","left","lifebar","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","menu","noninteractive","normal","normal","padding","padding","panel","player_hud_width","portrait_frame","positive","progress_image","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","right","scale","scale","select","size","small","smaller","text","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widgets","GameStarting","GgrsConfig","JoinServer","LAN_MATCHMAKER","LanMatchmaker","LanMatchmakerRequest","LanMatchmakerResponse","LanSessionInfo","LanSessionRunner","LanSocket","NETWORK_ENDPOINT","NETWORK_FRAME_RATE_FACTOR","NetworkingPlugin","PlayerCount","ServerStarted","StartServer","StopJoin","StopServer","accumulator","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","certs","connections","core","delta","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","lan","last_player_input","message_channel","player_count","player_is_local","player_is_local","proto","session","socket","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","ip","player_count","port","lan_socket","player_idx","SkipServerVerification","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","generate_self_signed_cert","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","new","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","verify_server_cert","vzip","GameStarting","JoinServer","LAN_MATCHMAKER","LanMatchmaker","LanMatchmakerRequest","LanMatchmakerResponse","LanSessionInfo","LanSessionRunner","LanSocket","NETWORK_FRAME_RATE_FACTOR","PlayerCount","ServerStarted","StartServer","StopJoin","StopServer","accumulator","advance","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","connections","core","core_session","delta","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_dense_input","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lan_matchmaker","last_player_input","message_channel","network_player_idx","new","new","player_count","player_is_local","player_is_local","receive_all_messages","restart","run_criteria","send_to","session","set_player_input","socket","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","ip","player_count","port","lan_socket","player_idx","DenseMoveDirection","DensePlayerControl","MoveDirQuant","apply","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","bit","bit_range","borrow","borrow","borrow_mut","borrow_mut","clone","clone_dynamic","clone_into","clone_type_data","clone_value","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","eq","equals","equivalent","field","field_len","field_mut","fmt","fmt","from","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","from_world","from_world","get_field","get_field_mut","get_type_info","get_type_registration","grab_pressed","init","init","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","is_in_subset","is_in_subset","is_valid_bit_pattern","iter_fields","jump_pressed","move_direction","path","path_mut","raw_clone","raw_drop","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","set","set_bit","set_bit_range","set_grab_pressed","set_jump_pressed","set_move_direction","set_shoot_pressed","set_slide_pressed","shoot_pressed","slide_pressed","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_name","upcast","upcast","vzip","vzip","BackendLost","JumpyPlatformPlugin","Load","NotLoaded","Save","SaveTask","SerializationError","Storage","StorageData","StorageError","StorageRequest","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_fail","backend_sender","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_pending_data_load","data","data_receiver","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","get","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_complete","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_loaded","load","load_storage","native","provide","save","set","source","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_load","try_save","try_set","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","data","result_sender","result_sender","init_storage","A","ALICE_BLUE","ANTIQUE_WHITE","AQUAMARINE","ATTRIBUTE_COLOR","ATTRIBUTE_JOINT_INDEX","ATTRIBUTE_JOINT_WEIGHT","ATTRIBUTE_NORMAL","ATTRIBUTE_POSITION","ATTRIBUTE_TANGENT","ATTRIBUTE_UV_0","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AZURE","AbntC1","AbntC2","ActionState","ActionStateDriver","Actionlike","Actionlike","AddAsset","AddChild","AddConditionalToSet","Added","Alias","AllScroll","Alt","AncestorIter","AnimatedDecoration","AnyOf","Apostrophe","App","AppLooplessFixedTimestepExt","AppLooplessStateExt","AppTypeRegistry","Apps","Arc","Arrow","AssetEvent","AssetPlugin","AssetServer","Assets","Asterisk","At","At","Audio","AudioApp","AudioChannel","AudioCommandError","AudioControl","AudioEasing","AudioInstance","AudioInstanceAssetsExt","AudioPlugin","AudioSettings","AudioSource","AudioThreadError","AudioTween","Automatic","Ax","Axis","AxisChanged","B","BEIGE","BISQUE","BLACK","BLUE","BVec2","BVec3","BVec4","Back","BackgroundMeta","Backslash","BodyAnimationsMeta","BonesBevyAsset","BonesBevyAsset","BonesBevyAsset","BonesBevyAsset","BonesBevyAssetLoad","BonesBevyAssetLoad","BonesBevyAssetLoad","BonesBevyAssetLoad","BorderlessFullscreen","BuildChildren","BuildWorldChildren","BuiltinElementKind","BulletMeta","Bundle","Bundle","ButtonChanged","C","C","CRIMSON","CYAN","Calculator","Camera","Camera2d","Camera2dBundle","Camera3d","Camera3dBundle","CameraMeta","Capital","Caret","Cell","Centered","ChangeTrackers","Changed","ChildBuilder","Children","Chord","ClashStrategy","ClearColor","ColResize","Colon","Color","ColorMaterial","ColorMesh2dBundle","ColorMeta","Comma","CommandQueueFull","Commands","Component","Component","Compose","ComputedVisibility","ConditionHelpers","ConditionSet","Connected","ContextMenu","Control","Convert","Copy","Copy","CoreConfigMeta","CoreMeta","CoreMetaArc","CorePlugin","CoreSession","CoreSessionInfo","CoreStage","Crab","Crate","CreateLayer","Created","Crosshair","Current","CurrentState","CursorEntered","CursorIcon","CursorLeft","CursorMoved","Cut","D","DARK_GRAY","DARK_GREEN","DEFAULT_DEADZONE","DISABLED","DPadDown","DPadLeft","DPadRight","DPadUp","Default","DefaultPlugins","Delete","DeleteEntity","DeleteLayer","Deref","Deref","DerefMut","DescendantIter","Deserialize","Deserialize","Deserialize","Deserialize","DespawnChildrenRecursive","DespawnRecursive","DespawnRecursiveExt","DetectChanges","Disconnected","Down","Down","DroppedFile","DualAxis","DynamicAudioChannel","DynamicAudioChannels","DynamicPlugin","E","ENABLED","EResize","East","EditorInput","ElementEditorMeta","ElementMeta","ElementSpawn","End","Entity","Equals","Escape","EulerRot","EventReader","EventWriter","Events","EwResize","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FALSE","FALSE","FALSE","FUCHSIA","FadeIn","FadeOut","Fetch","Fetch","FileDragAndDrop","First","FishSchool","FixedTimestep","FixedTimestepStage","FixedTimesteps","FromReflect","FromReflect","FromWorld","Fullscreen","G","GOLD","GRAY","GREEN","GameSessionPlayerInfo","Gamepad","GamepadAxis","GamepadAxisType","GamepadButton","GamepadButtonType","GamepadEvent","GamepadEventType","Gamepads","GetField","GetTupleStructField","GilrsPlugin","GlobalTransform","Grab","Grabbing","Grave","Grenade","H","Hand","Handle","HandleUntyped","HashMap","HashSet","Help","HierarchyPlugin","HierarchyQueryExt","Home","HoveredFile","HoveredFileCancelled","Hsla","I","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INDIGO","INVISIBLE","INVISIBLE","INVISIBLE_IDENTITY","IVec2","IVec3","IVec4","Image","ImagePlugin","In","In","Index","Inner","Input","InputManagerBundle","InputManagerPlugin","InputMap","Insert","InsertChildren","IntoConditionalSystem","IntoPipeSystem","IntoSystem","IntoSystemDescriptor","J","JumpyCoreAssetsPlugin","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KickBomb","L","LAlt","LBracket","LControl","LIME_GREEN","LShift","LWin","Last","Lazy","Left","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","Local","M","MAROON","MAX","MAX_PLAYERS","MIDNIGHT_BLUE","MIN","Mail","MainTrack","MapLayerMeta","MapMeta","MapTileMeta","Mat2","Mat3","Mat4","MediaSelect","MediaStop","Mesh","Middle","Mine","MinimalPlugins","Minus","MockInput","Mode","Modified","Modifier","MonitorSelection","MouseButton","MouseWheelAxisType","MouseWheelDirection","Move","MoveEntity","MoveLayer","Msaa","Musket","Mut","Mute","MyComputer","N","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAVY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NONE","NResize","N_VARIANTS","Name","NavigateBackward","NavigateForward","NeResize","NeswResize","NextState","NextTrack","NoConvert","NoDrop","NonSend","NonSendMut","None","North","NotAllowed","NsResize","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","NwResize","NwseResize","O","OLIVE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ORANGE","ORANGE_RED","Oem102","Once","Or","Orthographic","OrthographicProjection","Other","Other","Other","Out","P","PINK","PURPLE","PageDown","PageUp","ParallaxLayerMeta","ParallelCommands","ParamSet","Parent","Paste","Pause","Paused","Pausing","Period","Perspective","PerspectiveProjection","PhantomData","PhysicsMeta","PlayAudioCommand","PlayPause","PlaybackState","PlayerBodyLayerMeta","PlayerLayerMeta","PlayerLayersMeta","PlayerMeta","PlayerSoundsMeta","PlayerSpawner","PlayerStatsMeta","Playing","Plugin","PluginGroup","Plus","PostStartup","PostUpdate","Power","PreStartup","PreUpdate","PressAll","PrevTrack","Primary","PrioritizeLongest","Progress","Projection","PushChildren","Q","Quat","Query","QueryState","Queued","R","RAlt","RBracket","RControl","RED","RShift","RWin","Ray","ReceivedCharacter","Rect","Reflect","Reflect","ReflectComponent","ReflectDefault","ReflectDeserialize","ReflectResource","ReflectSerialize","RemoveChildren","RemoveParent","Removed","RemovedComponents","RenameLayer","RenameMap","RenderLayers","Repeating","Res","ResMut","Resource","Resource","Return","Rgba","RgbaLinear","Right","Right","Right","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","RowResize","RunCriteria","RunCriteriaDescriptorCoercion","RunCriteriaLabel","RunCriteriaLabel","S","SALMON","SEA_GREEN","SILVER","SResize","ScanCode","Schedule","ScheduleLooplessFixedTimestepExt","ScheduleLooplessStateExt","Scroll","SeResize","Select","Semicolon","Serialize","Serialize","Serialize","Serialize","SetTile","SetTilemap","Shader","Shift","Single","SingleAxis","SizedFullscreen","Slash","Sleep","Slippery","SlipperySeaweed","Snail","Snapshot","South","Space","SpatialBundle","SpawnElement","Sprite","SpriteBundle","SpriteSheetBundle","Sproinger","Stage","StageLabel","StageLabel","Start","Startup","StartupSchedule","StartupStage","State","StateTransitionStage","StompBoots","Stop","Stopped","Stopping","Storage","Struct","SwResize","Sword","Sysrq","System","System","SystemLabel","SystemLabel","SystemParam","SystemParam","SystemParam","SystemParam","SystemParamFunction","SystemSet","SystemStage","T","TEAL","TOMATO","TOTAL_LAYERS","TRUE","TRUE","TRUE","TURQUOISE","Tab","Target","TaskPoolOptions","Text","TextureAtlas","TextureAtlasBuilder","TextureAtlasSprite","Time","Timer","TimerMode","ToggleActions","TouchInput","Touches","Transform","TransformBundle","TransformPlugin","TupleStruct","TweenCommand","TypeUlid","TypeUlid","TypeUlid","TypeUlid","U","ULID","ULID","UVec2","UVec3","UVec4","Underline","Unlabeled","Up","Up","Update","Urchin","UseActionOrder","UserInput","V","VIOLET","VISIBLE","VISIBLE_IDENTITY","ValidParentCheckPlugin","Vec2","Vec3","Vec4","VerticalText","VirtualAxis","VirtualDPad","VirtualDPad","Visibility","VisibilityBundle","VolumeDown","VolumeUp","W","W","W","W","WHITE","WResize","Wait","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","West","Win","Window","WindowDescriptor","WindowMode","WindowMoved","WindowPlugin","WindowPosition","Windowed","Windows","With","Without","World","WorldChildBuilder","X","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YELLOW","YELLOW_GREEN","YXZ","YZX","Yen","Z","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","ZoomIn","ZoomOut","_marker","_marker","_phantom","_phantom","a","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","accel_air_speed","accel_walk_speed","accumulator","action","action_data","action_data","action_data_mut","action_state","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_asset","add_asset","add_asset_loader","add_asset_loader","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_audio_channel","add_audio_channel","add_bones_asset","add_child","add_children","add_command","add_debug_asset","add_debug_asset","add_default_stages","add_enter_system","add_enter_system","add_enter_system","add_enter_system","add_enter_system","add_enter_system_set","add_enter_system_set","add_enter_system_set","add_enter_system_set","add_enter_system_set","add_event","add_exit_system","add_exit_system","add_exit_system","add_exit_system","add_exit_system","add_exit_system_set","add_exit_system_set","add_exit_system_set","add_exit_system_set","add_exit_system_set","add_fixed_timestep","add_fixed_timestep","add_fixed_timestep_after_stage","add_fixed_timestep_after_stage","add_fixed_timestep_after_stage","add_fixed_timestep_after_stage","add_fixed_timestep_before_stage","add_fixed_timestep_before_stage","add_fixed_timestep_before_stage","add_fixed_timestep_before_stage","add_fixed_timestep_child_stage","add_fixed_timestep_child_stage","add_fixed_timestep_child_stage","add_fixed_timestep_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_system","add_fixed_timestep_system","add_fixed_timestep_system","add_fixed_timestep_system","add_fixed_timestep_system_set","add_fixed_timestep_system_set","add_fixed_timestep_system_set","add_fixed_timestep_system_set","add_loader","add_loopless_state","add_loopless_state","add_loopless_state_after_stage","add_loopless_state_after_stage","add_loopless_state_after_stage","add_loopless_state_after_stage","add_loopless_state_before_stage","add_loopless_state_before_stage","add_loopless_state_before_stage","add_loopless_state_before_stage","add_mat2","add_mat3","add_mat4","add_plugin","add_plugins","add_primary_window","add_render_command","add_stage","add_stage","add_stage","add_stage_after","add_stage_after","add_stage_before","add_stage_before","add_startup_stage","add_startup_stage_after","add_startup_stage_before","add_startup_system","add_startup_system_set","add_startup_system_set_to_stage","add_startup_system_to_stage","add_state","add_state_to_stage","add_sub_app","add_system","add_system","add_system_run_criteria","add_system_set","add_system_set","add_system_set_to_stage","add_system_set_to_stage","add_system_to_stage","add_system_to_stage","add_texture","add_texture","add_to_set","advance","affine","after","after","after","after","after","after","air_speed","all","all","all","all","alpha_mode","alpha_mode","alpha_mode","ambiguous_with","anchor","anchor","angle_between","angle_between","angle_between","animations","animations","any","any","any","any_just_cancelled","any_just_pressed","any_just_pressed","any_just_released","any_just_released","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","any_pressed","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_buffers","apply_buffers","apply_buffers","apply_buffers","apply_or_insert","apply_or_insert","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","archetype_generation","archetypes","archetypes","arrow_keys","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat2","as_dmat3","as_dmat4","as_dvec2","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f64","as_fail","as_fail","as_fd","as_filelike","as_filelike_view","as_hsla","as_hsla_f32","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_label","as_label","as_label","as_linear_rgba_f32","as_linear_rgba_u32","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_nop","as_ptr","as_raw_fd","as_raw_filelike","as_raw_socketlike","as_readonly","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_rgba","as_rgba_f32","as_rgba_linear","as_rgba_u32","as_socketlike","as_socketlike_view","as_str","as_str","as_str","as_str","as_str","as_str","as_str","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec4","as_vec4","aspect_2d","aspect_ratio","asset_event_system","asset_folder","asset_io","assets","associated_gamepad","assume_init","assume_init","async_compute","at_end","at_start","atlas","atlas","atlas","attribute","attribute_mut","attributes","attributes","attributes_mut","auto_format_conversion","auto_format_conversion","axis_data","axis_pair","axis_type","axis_type","b","back","back","backend_scale_factor","backend_scale_factor","background","background_color","before","before","before","before","before","before","before_commands","bevy_main","bind_group_layout","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","body","body_diameter","body_offsets","body_size","bones","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","builtin","bundles","bundles","button_type","bypass_change_detection","bypass_change_detection","bypass_change_detection","bypass_change_detection","calculate_size_for","callsite_enabled","camera","camera","camera","camera_2d","camera_3d","camera_render_graph","camera_render_graph","canvas","canvas","canvas","cast_weak","category","cause","ceil","ceil","ceil","cell","cell","center","center_window","change_tick","change_tick","change_tick","change_tick","change_tick","change_tick","change_tick","channel","channels","char","check_change_tick","check_change_tick","check_change_ticks","child","child","children","children","children","children_query","chord","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamped_axis_pair","clamped_value","clear","clear","clear","clear","clear_action","clear_color","clear_color","clear_entities","clear_gamepad","clear_just_pressed","clear_just_released","clear_schedule","clear_trackers","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_span","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_untyped","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_weak","clone_weak","clone_weak_untyped","close","close_when_requested","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col_mut","col_mut","col_mut","collision","color","color","color","command_capacity","command_queue","command_scope","commands","commands","commands","component_access","component_access","component_access","component_id","component_id","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ticks","components","components","compute","compute_aabb","compute_affine","compute_flat_normals","compute_matrix","compute_matrix","compute_transform","computed","computed","computed","computed_visibility","computed_visibility","conditions","config","conjugate","consume","contains","contains","contains","contains","contains_attribute","contains_resource","convert","copy","copy","count_vertices","create_channel","create_default_pools","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_platform_default_asset_io","cross","cross","cross","current","current","current","current_duration","current_entity","current_mut","current_span","cursor_grab_mode","cursor_grab_mode","cursor_grab_mode","cursor_icon","cursor_icon","cursor_position","cursor_visible","cursor_visible","cursor_visible","custom_size","custom_size","data","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug_span","decorations","decorations","decorations","decrement_strong_count","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_height","default_labels","default_linear","default_nearest","default_sampler","delta","delta","delta_seconds","delta_seconds","delta_seconds_f64","delta_seconds_f64","depth","depth_load_op","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","despawn","despawn_descendants","despawn_recursive","despawn_with_children_recursive","determinant","determinant","determinant","direction","distance","distance","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","down","down","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_mut","downcast_raw","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downcast_unchecked","downgrade","dpad","drain","drain_commands","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_span","drop_volume","duplicate_vertices","duration","duration","duration","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","easing","editor","egui","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds","elapsed_seconds_f64","elapsed_seconds_f64","elapsed_seconds_wrapped","elapsed_seconds_wrapped","elapsed_seconds_wrapped_f64","elapsed_seconds_wrapped_f64","elapsed_secs","elapsed_wrapped","elapsed_wrapped","element","elements","empty","enabled","enabled","enabled","enabled","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","end_next_loop","enter","enter_stages","entities","entities","entities","entities","entities_mut","entity","entity","entity","entity","entity","entity_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","error_span","event","event_count","event_enabled","event_type","events","events","events","events_a","events_b","exclusive_at_end","exclusive_at_end_systems","exclusive_at_start","exclusive_at_start_systems","exclusive_before_commands","exclusive_before_commands_systems","executor","executor_modified","exit","exit_on_all_closed","exit_stages","exp","exp","exp","experimental_maps","explosion_atlas","explosion_fps","explosion_frames","explosion_lifetime","explosion_sound","explosion_volume","export_map","extend","extend","extend","extend","extend","extend","extend","extract_asset","extract_asset","extract_component","extract_component","extract_component","extract_resource","extract_resource","face","fade_in","fade_in","fade_out","far","far","far","far","far","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch_state","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_state","fin","finish","finished","finished","first_pressed_position","first_update","first_update","fit_canvas_to_parent","fit_canvas_to_parent","fit_canvas_to_parent","flip_x","flip_x","flip_y","flip_y","floor","floor","floor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","for_each","for_each","for_each_mut","for_each_mut","for_each_unchecked","force","force","force_mut","force_read_only_component_access","format","format","forward","forward","fov","fract","fract","fract","fragment_shader","frames","free_unused_assets","friction_lerp","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_bits","from_buffer","from_center_half_size","from_center_size","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_corners","from_diagonal","from_diagonal","from_diagonal","from_dynamic","from_euler","from_euler","from_euler","from_fd","from_filelike","from_glsl","from_grid","from_into_filelike","from_into_socketlike","from_iter","from_iter","from_iter","from_layers","from_mat2","from_mat3","from_mat3","from_mat3","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_matrix","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_raw","from_raw","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_rotation_translation","from_scaled_axis","from_seconds","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_socketlike","from_spirv","from_stage","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_transform","from_transform","from_translation","from_translation","from_translation","from_type","from_type","from_type","from_type","from_type","from_value","from_value","from_vec4","from_wgsl","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyz","from_xyzw","frustum","frustum","func","g","gamepad","gamepad","gamepad","gamepad","gamepad_face_buttons","gamepads","ge","generate_tangents","generation","generation","get","get","get","get","get","get","get","get","get","get","get_added_plugins","get_at","get_by_id","get_channel","get_component","get_component_mut","get_component_unchecked_mut","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_current","get_current_mut","get_driver","get_entity","get_entity","get_entity_mut","get_executor","get_executor_mut","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage_mut","get_fixed_timestep_child_substage_mut","get_fixed_timestep_child_substage_mut","get_fixed_timestep_child_substage_mut","get_fixed_timestep_stage","get_fixed_timestep_stage","get_fixed_timestep_stage","get_fixed_timestep_stage","get_fixed_timestep_stage_mut","get_fixed_timestep_stage_mut","get_fixed_timestep_stage_mut","get_fixed_timestep_stage_mut","get_group_load_state","get_handle","get_handle","get_handle_path","get_handle_untyped","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_index_buffer_bytes","get_inner","get_just_pressed","get_just_pressed","get_just_released","get_just_released","get_last_change_tick","get_last_change_tick","get_load_state","get_manual","get_many","get_many","get_many_mut","get_many_mut","get_mesh_vertex_buffer_layout","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut_by_id","get_mut_unchecked","get_non_send_resource","get_non_send_resource_mut","get_non_send_resource_unchecked_mut","get_or_insert_with","get_or_spawn","get_or_spawn","get_param","get_param","get_pressed","get_pressed","get_pressed","get_primary","get_primary_mut","get_projection_matrix","get_projection_matrix","get_projection_matrix","get_reader","get_reader_current","get_released","get_released","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","get_resource_or_insert_with","get_resource_unchecked_mut","get_serializable","get_serializable","get_single","get_single","get_single","get_single_mut","get_single_mut","get_single_mut","get_single_unchecked","get_single_unchecked_manual","get_sparse_set_index","get_stage","get_stage_mut","get_sub_app","get_sub_app_mut","get_texture_index","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_unchecked","get_unchecked","get_vertex_buffer_data","global","global_transform","global_transform","global_transform","global_transform","global_transform","grab","grab_offset","grab_size","grab_volume","gravity","gravity","grid_size","gt","half_size","handle","handle","handle","handle_clashes","handle_type","handle_type","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr","height","height","height","hex","hsl","hsla","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","ids","idx","ignore_all_ambiguities","image","import_path","import_path","imports","imports","inactives","increment_change_tick","increment_strong_count","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","indices","indices","indices_mut","info","info","info","info_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_asset_loader","init_asset_loader","init_component","init_component_with_descriptor","init_debug_asset_loader","init_debug_asset_loader","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_non_send_resource","init_non_send_resource","init_resource","init_resource","init_resource","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","initial_size","initial_size","initialize","initialize","input_map","insert","insert","insert","insert_at","insert_attribute","insert_children","insert_children","insert_children","insert_chord","insert_modified","insert_multiple","insert_non_send_resource","insert_non_send_resource","insert_or_spawn_batch","insert_or_spawn_batch","insert_resource","insert_resource","insert_resource","insert_resource_by_id","inset","inspect_entity","install_asset","install_asset","install_asset","install_asset","install_asset","install_asset","install_asset","instance_handle","instant_started","internal_system","intersect","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_conditional","into_descriptor","into_egui","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_raw","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_resettable","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system","into_system","into_value","inverse","inverse","inverse","inverse","io","is","is","is","is_active","is_added","is_added","is_added","is_added","is_added","is_added","is_added","is_ai","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_channel","is_compressed","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_exclusive","is_exclusive","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_focused","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_out_of_bounds","is_paused","is_playing_sound","is_playing_sound","is_playing_sound","is_plugin_added","is_resource_added","is_resource_changed","is_send","is_send","is_strong","is_strong","is_terminal","is_unique","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_visible","is_visible","is_visible_in_hierarchy","is_visible_in_hierarchy","is_visible_in_view","is_visible_in_view","is_weak","is_weak","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_ancestors","iter_ancestors","iter_combinations","iter_combinations","iter_combinations_mut","iter_combinations_mut","iter_combinations_unchecked","iter_combinations_unsafe","iter_current_update_events","iter_descendants","iter_descendants","iter_entities","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_inner","iter_inputs","iter_just_cancelled","iter_just_pressed","iter_just_released","iter_manual","iter_many","iter_many","iter_many_mut","iter_many_mut","iter_many_unsafe","iter_mut","iter_mut","iter_mut","iter_mut","iter_stages","iter_unchecked","iter_unsafe","iter_with_id","jump","jump_speed","jump_volume","just_cancelled","just_cancelled","just_finished","just_pressed","just_pressed","just_pressed","just_pressed","just_pressed","just_released","just_released","just_released","just_released","just_released","key_codes","kind","label","label","label","label","label","label","label","label_discard_if_duplicate","label_discard_if_duplicate","labellers","labels","land","land_volume","last_change_tick","last_change_tick","last_change_tick","last_change_tick","last_change_tick","last_change_tick","last_changed","last_changed","last_changed","last_changed","last_tick_check","last_update","last_update","layer","layers","layers","layers","le","left","left","left","left","left_stick","len","len","len","len","len","len","len","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lifetime","linear","linear_fade_in","linear_fade_in","linear_fade_out","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load_folder","load_glob","load_untyped","local","local_x","local_y","local_z","lock_accum","log","logical_target_size","logical_viewport_rect","logical_viewport_size","look_at","look_at_lh","look_at_rh","look_to_lh","look_to_rh","looking_at","loop_from","looped","lt","machine","main_thread_validator","make_mut","make_strong","make_writer","many","many_mut","map","map_elements","map_entities","map_entities","map_meta","map_tilesets","map_unchanged","map_unchanged","map_unchanged","mark_unused_assets","marker","marker","marker","marker","marker","matched_archetype_ids","matched_archetypes","matched_table_ids","matched_tables","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","max","max","max","max","max","max","max","max","max","max","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_level_hint","max_level_hint","max_size","max_size","max_total_threads","merge","meta","min","min","min","min","min","min","min","min","min","min","min_camera_size","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_total_threads","mode","mode","mode","mode","mode","modified","monitor","mouse_motion","mouse_motion","mouse_motion_x","mouse_motion_y","mouse_wheel","mouse_wheel","mouse_wheel_x","mouse_wheel_y","move_lerp_factor","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_transform","mul_transform","mul_vec2","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec4","must_read_resource","mutate","n_matching","name","name","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","ndc_to_world","ne","near","near","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","negative_low","negative_only","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_archetype","new_archetype","new_cyclic","new_empty","new_fill","new_from_entities","new_span","new_uninit","new_uninit_slice","new_with_far","new_zeroed","new_zeroed_slice","next","next","next","non_send_resource","non_send_resource_mut","none","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","not","not","not","not","not","not","not","not","not","offset","offset","oldest_event_count","on_enter","on_enter","on_enter_set","on_exit","on_exit","on_exit_set","on_in_stack_update","on_in_stack_update","on_inactive_update","on_inactive_update","on_inactive_update_set","on_pause","on_pause","on_pause_set","on_resume","on_resume","on_resume_set","on_update","on_update","on_update_set","options_from_derive","options_from_derive","origin","orthographic_lh","orthographic_rh","orthographic_rh_gl","overwrite_pop","overwrite_push","overwrite_replace","overwrite_restart","overwrite_set","p0","p0","p0","p0","p0","p0","p0","p0","p1","p1","p1","p1","p1","p1","p1","p2","p2","p2","p2","p2","p2","p3","p3","p3","p3","p3","p4","p4","p4","p4","p5","p5","p5","p6","p6","p7","par_for_each","par_for_each","par_for_each_mut","par_for_each_mut","par_for_each_unchecked","parallel","parallel","parallel_systems","param_states","parent","parent","parent","parent","parent_entities","parent_entity","parent_entity","parent_query","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","pause","pause","pause","pause","pause","pause","paused","paused","paused","paused","percent","percent_left","perp","perp","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","phantom","phantom","phase","physical_cursor_position","physical_cursor_position","physical_height","physical_height","physical_target_size","physical_viewport_rect","physical_viewport_size","physical_width","physical_width","physics","pin","pipe","pipe","pipe","play","play","play","player_camera_box_size","player_info","players","plugin_name_added","plugin_registry","pop","pos","pos","position","position","position","position","position","position","position","positive_low","positive_only","powf","powf","powf","prepare_asset","prepare_asset","present_mode","present_mode","present_mode","press","press","pressed","pressed","pressed","pressed","pressed","pressed","pressed","pressed","pressed_for_gamepad","pressed_for_gamepad","pressed_for_gamepad","previous_duration","primary","primary_mut","primitive_topology","primitive_topology","priority","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","projection","projection","projection_matrix","provide","provide","provide","ptr","ptr_eq","push","push_children","push_children","push_children","push_children","que","que","query","query_filtered","queue","r","radius_vec3a","rate_lock","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_delta","raw_delta","raw_delta_seconds","raw_delta_seconds","raw_delta_seconds_f64","raw_delta_seconds_f64","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_elapsed","raw_elapsed","raw_elapsed_seconds","raw_elapsed_seconds","raw_elapsed_seconds_f64","raw_elapsed_seconds_f64","raw_elapsed_seconds_wrapped","raw_elapsed_seconds_wrapped","raw_elapsed_seconds_wrapped_f64","raw_elapsed_seconds_wrapped_f64","raw_elapsed_wrapped","raw_elapsed_wrapped","raw_handle","raw_handle","raw_inputs","read","read_change_tick","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","reader","recip","recip","recip","record","record_follows_from","rect","rects_to_place","ref_change_sender","reflect","reflect","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_trait","reflect_unchecked_mut","reflect_unchecked_mut","register_asset_reflect","register_asset_reflect","register_callsite","register_type","register_type_data","reinterpret_size","reinterpret_stacked_2d_as_array","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","relative_speed","relative_speed","relative_speed_f64","release","release","release_all","release_all","release_input","release_input","release_input","release_input_as_gamepad","release_input_as_gamepad","release_input_as_gamepad","released","reload_asset","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","remaining","remaining_secs","remove","remove","remove","remove","remove","remove","remove_at","remove_attribute","remove_channel","remove_children","remove_children","remove_children","remove_non_send_resource","remove_parent","remove_resource","remove_resource","remove_resource_by_id","remove_resource_unchecked","removed","removed_components","removed_with_id","replace","report_ambiguities","represents","requested_height","requested_height","requested_width","requested_width","reserve","reset","reset","reset_all","reset_inputs","reset_inputs","reset_inputs","resizable","resizable","resizable","resize","resize_constraints","resize_constraints","resize_constraints","resource","resource_mut","resource_scope","respawn_invincibility_time","restart","restart","restore","resume","resume","resume","resume","reverse","rgb","rgb_linear","rgb_u8","rgba","rgba_linear","rgba_u8","right","right","right","right","right_stick","rotate","rotate","rotate","rotate_around","rotate_axis","rotate_local","rotate_local_axis","rotate_local_x","rotate_local_y","rotate_local_z","rotate_x","rotate_y","rotate_z","rotation","round","round","round","row","row","row","run","run","run","run","run","run","run","run","run_criteria","run_criteria","run_criteria","run_if","run_if","run_if","run_if_not","run_if_not","run_if_not","run_if_resource_added","run_if_resource_added","run_if_resource_added","run_if_resource_equals","run_if_resource_equals","run_if_resource_equals","run_if_resource_exists","run_if_resource_exists","run_if_resource_exists","run_if_resource_removed","run_if_resource_removed","run_if_resource_removed","run_in_bevy_state","run_in_bevy_state","run_in_bevy_state","run_in_state","run_in_state","run_in_state","run_not_in_bevy_state","run_not_in_bevy_state","run_not_in_bevy_state","run_not_in_state","run_not_in_state","run_not_in_state","run_on_event","run_on_event","run_on_event","run_once","run_unless_resource_equals","run_unless_resource_equals","run_unless_resource_equals","run_unless_resource_exists","run_unless_resource_exists","run_unless_resource_exists","run_unsafe","run_unsafe","runner","sampler_descriptor","samples","scale","scale","scale","scale_factor","scale_factor","scale_factor_override","scale_factor_override","scale_factor_override","scaling_mode","schedule","scheduled","scratch_world","seek_by","seek_to","select","select","select","select","select","select","select","select","select","send","send","send_batch","send_default","send_default","send_event","send_event_batch","send_event_default","send_input","send_input","send_input","send_input_as_gamepad","send_input_as_gamepad","send_input_as_gamepad","serializable","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","server","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_a","set_action_data","set_apply_buffers","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_b","set_changed","set_changed","set_changed","set_changed","set_cursor_grab_mode","set_cursor_icon","set_cursor_position","set_cursor_visibility","set_decorations","set_duration","set_elapsed","set_enter_stage","set_enter_stage","set_enter_stage","set_enter_stage","set_enter_stage","set_executor","set_exit_stage","set_exit_stage","set_exit_stage","set_exit_stage","set_exit_stage","set_g","set_gamepad","set_import_path","set_indices","set_last_change_tick","set_last_change_tick","set_last_changed","set_last_changed","set_last_changed","set_last_changed","set_maximized","set_metadata","set_minimized","set_mode","set_mode","set_must_read_resource","set_panning","set_panning","set_panning","set_panning","set_parent","set_playback_rate","set_playback_rate","set_playback_rate","set_playback_rate","set_position","set_present_mode","set_r","set_rate_lock","set_relative_speed","set_relative_speed_f64","set_resizable","set_resize_constraints","set_resolution","set_run_criteria","set_run_criteria","set_runner","set_scale_factor_override","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_title","set_untracked","set_visible_in_view","set_volume","set_volume","set_volume","set_volume","set_wrap_period","settings","shape","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","show_name","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink_to_fit","signum","signum","signum","signum","signum","signum","single","single","single","single","single_mut","single_mut","single_mut","single_threaded","size","size","size","size","size","slerp","slide_body_size","slow_fall_speed","slowdown","snapshot","sound","sound_capacity","sounds","source","source","source","sparse_set_index","spawn","spawn","spawn","spawn","spawn_batch","spawn_batch","spawn_bundle","spawn_bundle","spawn_bundle","spawn_empty","spawn_empty","spawn_empty","spawn_empty","speed","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","sprite","sprite","stable_maps","stack","stage","stage","stage_order","stage_run_criteria","stages","stages","stages","start_from","startup","startup","state","state","state","state","state","state","state","state","state","states","states","stats","step","step","steps_per_second","stop","stop","stop","stop","stop_threshold","stopwatch","storages","storages","strong_count","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_app","sub_app_mut","sub_apps","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swap","symmetric","symmetric","system_adapter","system_meta","systems","systems_modified","take","target","task_pool_options","terminal_velocity","texture","texture","texture","texture_atlas","texture_descriptor","texture_handles","texture_view_descriptor","textures","tick","tick","ticks","ticks","ticks","ticks","ticks","tile_size","tilemap","tiles","time_step","times_finished_this_tick","times_finished_this_tick","title","title","title","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_bits","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_readonly","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","tonemapping","tonemapping","top","trace","trace_span","transform","transform","transform","transform","transform","transform_point","transform_point","transform_point2","transform_point3","transform_point3a","transform_vector2","transform_vector3","transform_vector3a","transition","translate_around","translation","translation","translation_mut","translation_vec3a","transparent","transpose","transpose","transpose","truncate","truncate","truncate","truncate","truncate","truncate","try_close","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_dynamic","try_new","try_new_uninit","try_new_zeroed","try_normalize","try_normalize","try_normalize","try_pin","try_unwrap","tween","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","typed","typed_weak","ulid","ulid","ulid","ulid","ulid","ulid","ulid","uninitialized_at_end","uninitialized_at_start","uninitialized_before_commands","uninitialized_parallel","uninitialized_run_criteria","union","union_point","unpause","unpause","unwrap_or_clone","up","up","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update","update","update","update","update","update_actual_position_from_backend","update_actual_size_from_backend","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_cursor_physical_position_from_backend","update_focused_status_from_backend","update_input","update_scale_factor_from_backend","update_system","update_with_instant","validate_world","value","value","value","value","value","value","value","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variants","vec_system_container_debug","vecdeque","velocity","viewport","viewport_to_world","visibility","visibility","visibility","visibility","visible_entities","visible_entities","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w_axis","walk_speed","warn","warn_span","wasd","watch_for_changes","weak","weak","weak_count","weak_from_u64","which_pressed","width","width","width","window","window_origin","windows","with","with_boxed_io","with_children","with_children","with_children","with_deadzone","with_deadzone","with_easing","with_enter_stage","with_enter_system","with_enter_system_set","with_exit_stage","with_exit_system","with_exit_system_set","with_import_path","with_label","with_num_threads","with_panning","with_playback_rate","with_rate_lock","with_rotation","with_run_criteria","with_run_criteria","with_run_criteria","with_run_criteria","with_scale","with_stage","with_stage","with_stage_after","with_stage_before","with_system","with_system","with_system","with_system_in_stage","with_system_run_criteria","with_system_set","with_translation","with_volume","without","world","world","world","world","world","world","world_id","world_id","world_to_ndc","world_to_viewport","wrap_period","wrap_period","write","write","write","write","write","write","write","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","www","www","www","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wx","wx","wx","wxw","wxw","wxw","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wy","wy","wy","wyw","wyw","wyw","wyww","wyww","wyww","wywx","wywx","wywx","wywy","wywy","wywy","wywz","wywz","wywz","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wz","wz","wz","wzw","wzw","wzw","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","xw","xw","xw","xww","xww","xww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyww","xyww","xyww","xywx","xywx","xywx","xywy","xywy","xywy","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","yw","yw","yw","yww","yww","yww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyww","yyww","yyww","yywx","yywx","yywx","yywy","yywy","yywy","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z_axis","z_axis","zoom_in_lerp_factor","zoom_out_lerp_factor","zw","zw","zw","zww","zww","zww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyww","zyww","zyww","zywx","zywx","zywx","zywy","zywy","zywy","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","handle","handle","handle","angular_velocity","angular_velocity","angular_velocity","angular_velocity","arm_delay","arm_delay","arm_sound","arm_sound_volume","armed_fps","armed_frames","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","base_count","body_diameter","body_diameter","body_diameter","body_diameter","body_friction","body_size","body_size","body_size","body_size","body_size","body_size","body_size","body_size","body_size","bounce_sound","bounce_sound_volume","bounciness","bounciness","bounciness","bounciness","bounciness","bounciness","bounciness","bounciness","break_sound","break_sound_volume","break_timeout","breaking_anim_fps","breaking_anim_frames","breaking_atlas","bullet_meta","can_rotate","can_rotate","can_rotate","can_rotate","comfortable_scared_distance","comfortable_spawn_distance","cooldown","cooldown_frames","count_variation","crate_break_state_1","crate_break_state_2","crawl_frames","damage_region_lifetime","damage_region_lifetime","damage_region_lifetime","damage_region_size","damage_region_size","damage_region_size","empty_shoot_sound","empty_shoot_sound_volume","end_frame","end_frame","explosion_atlas","explosion_atlas","explosion_atlas","explosion_fps","explosion_fps","explosion_fps","explosion_frames","explosion_frames","explosion_frames","explosion_lifetime","explosion_lifetime","explosion_lifetime","explosion_sound","explosion_sound","explosion_sound","explosion_volume","explosion_volume","explosion_volume","fin_anim","fin_anim","fin_anim","fin_anim","fin_anim","fin_anim","flee_range","fps","fps","fps","fps","fuse_sound","fuse_sound","fuse_sound_volume","fuse_sound_volume","fuse_time","fuse_time","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","gravity","gravity","hide_frames","hide_time","hit_speed","hit_speed","image","kick_velocity","killing_speed","kinds","map_icon","max_ammo","move_frame_indexes","player_decoration","player_slide","run_speed","same_level_threshold","school_size","shoot_atlas","shoot_fps","shoot_frames","shoot_lifetime","shoot_sound","shoot_sound_volume","sound","sound","sound_volume","sound_volume","spawn_frames","spawn_range","spin","spring_velocity","start_frame","start_frame","throw_velocity","throw_velocity","throw_velocity","throw_velocity","throw_velocity","throw_velocity","timer_delay_max","uncomfortable_respawn_time","walk_frames","walk_speed","alpha","alpha","alpha","blue","blue","green","green","hue","lightness","red","red","saturation","collision","down","entity","entity","handle","handle","id","layer","layer","layer","layer","layer","layer","name","name","pos","pos","tilemap_tile_idx","translation","id","id","id","path_buf","path_buf","position","position","position","position","AXES","AXES","AXES","AXES","Affine2","Affine3A","AlreadyBorrowed","AnimatedSprite","AnimationBankSprite","AssetPath","AssetProvider","AssetProviderMut","AssetProviderRef","AssetProviders","AssetProvidersResource","Atlas","AtlasSprite","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","AtomicRef","AtomicRefCell","AtomicRefMut","AtomicResource","AudioEvent","AudioEvents","AudioSource","BLACK","BLUE","BVec2","BVec3","BVec3A","BVec4","BVec4A","BevyWorld","BitFmt","BitSet","BitSetVec","BorrowError","BorrowMutError","CYAN","Camera","CameraShake","CameraTraumaEvents","ClearColor","Color","CommandQueue","Commands","Comp","CompMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","CoreStage","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","Deref","DerefMut","DispatcherExecutionFailed","EcsData","EcsError","Entities","EntitiesIterWith","Entity","EntityIterator","EulerRot","FALSE","FALSE","First","FrameTime","FromWorld","GRAY","GREEN","Handle","Hex","HexColorError","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","IVec4","Image","IntoBevy","IntoSystem","Iter","Key","KeyError","Last","Length","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NONE","NotAscii","NotInitialized","ONE","ONE","ONE","ONE","ORANGE","Once","Param","Path2d","PlaySound","PostUpdate","PreUpdate","Quat","QueryItem","RAND_BITS","RED","RawFns","Repeating","Res","ResAssetProviders","ResMut","Resources","Rgba","ShakeNoise","SimpleSystemStage","Sprite","StageLabel","State","Stopwatch","System","SystemError","SystemParam","SystemResult","SystemStage","SystemStages","TIME_BITS","TRUE","TRUE","Tile","TileLayer","Time","Timer","TimerMode","TooLong","Transform","TypeUlid","TypeUlid","TypeUlidCollision","TypedComponentOps","TypedEcsData","ULID","UVec2","UVec3","UVec4","Ulid","UlidMap","UntypedAssetProvider","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","UntypedHandle","UntypedResource","UntypedResourceInfo","UntypedResources","UnwrapMany","Update","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","Viewport","W","WHITE","Window","World","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","YELLOW","YXZ","YZX","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","_phantom","_phantom","_phantom","_phantom","_phantom","_phantom","_private","_private","a","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","active","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat3","add_mat4","add_system","add_system","add_system_to_stage","add_trauma","advance_exact","alive","all","all","angle_between","angle_between","angle_between","angle_between","animations","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_bitset","apply_bitset","apply_bitset","apply_bitset","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat3","as_dvec3","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_fail","as_fail","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_rgba","as_rgba_f32","as_uvec2","as_uvec3","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","atlas","atlas","b","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","bitand","bitand","bitand_assign","bitand_assign","bitmask","bitmask","bitor","bitor","bitor","bitor_assign","bitor_assign","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitxor","bitxor","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","cell","cell","center","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clear_killed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fn","clone_fn","clone_fn","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","cmp","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col_mut","col_mut","col_mut","col_mut","color","color","color","components","components","components","components","components","components","components","components","conjugate","contains","contains","contains","contains","contains","create","create_bitset","cross","cross","current","current_id","current_id","current_id","current_id","datetime","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decay_rate","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delta","delta","delta_seconds","delta_seconds","delta_seconds_f64","delta_seconds_f64","depth_max","depth_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_fn","drop_fn","drop_fn","duration","duration","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","elapsed","elapsed","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds","elapsed_seconds_f64","elapsed_seconds_f64","elapsed_secs","elapsed_secs","elapsed_secs_f64","entities","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","exp","extend","extend","extend","f32","f64","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_map","filter_map","finished","finished","first_update","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_type","fps","fract","fract","fract","fract","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_components","from_components_unsafe","from_components_unsafe","from_datetime","from_datetime_with_source","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_parts","from_quat","from_quat","from_quat","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_seconds","from_slice","from_slice","from_slice","from_slice","from_slice","from_socketlike","from_str","from_string","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","g","generation","generation","generations","generations","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_bevy_asset_path","get_bevy_handle","get_bevy_handle","get_bevy_handle_untyped","get_by_uuid","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_many_mut","get_many_mut","get_many_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_resource","get_state","get_state","get_state","get_state","get_state","get_state","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","grid_size","has_deleted","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","hex","i32","id","id","id","id","id","idx","image","impl_bitset","increment","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_resource","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize_systems","insert","insert","insert","insert","insert","insert","insert_resource","insert_stage_after","insert_stage_before","install","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bevy","into_bevy","into_bevy","into_bevy","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_resettable","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_untyped","into_untyped","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_alive","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_nil","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_paused","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_with","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","ivec2","ivec3","ivec4","just_finished","key","kill","killed","killed","label","last_animation","last_update","layout","layout","layout","layout","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","line_breaks","load","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","maintain","map","map","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max_angle_rad","max_element","max_element","max_element","max_element","max_id","max_offset","min","min","min","min","min_element","min_element","min_element","min_element","mode","mode","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec4","multiunzip","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_raw","next","next","next","next","next","next","next_id","next_id","next_id","nil","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_relative_to","not","not","ops","ops","ops","orthographic_lh","orthographic_rh","orthographic_rh_gl","partial_cmp","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","pause","pause","pause","paused","paused","paused","paused","percent","percent_left","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","phantom","play","points","position","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","provide","provide","provide","providers","quat","query","queue","queue","queue","r","random","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","recip","recip","recip","recip","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","remaining","remaining_secs","remove","remove","remove","remove","remove","remove","repeat","reset","reset","resource","resources","resources","rgb","rgb_u8","rgba","rgba_u8","rotate","rotation","round","round","round","round","row","row","row","row","run","run","run","run","run","run_initialized_system","run_system","scale","select","select","select","select","send","send","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_a","set_b","set_duration","set_elapsed","set_elapsed","set_g","set_mode","set_r","signum","signum","signum","signum","size","size","slerp","source","speed","splat","splat","splat","splat","splat","splat","stages","startup","stopwatch","storage","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","system","system","systems","thickness","tick","tick","tile_size","tiles","time","timer","times_finished_this_tick","times_finished_this_tick","timestamp_ms","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","translation","translation","translation","translation","translation","transpose","transpose","transpose","transpose","trauma","truncate","truncate","truncate","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_get_by_uuid","try_get_mut","try_init","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ids","type_ids","type_ids","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","typed","u32","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","unpause","unpause","unpause","untyped","untyped","untyped","untyped","untyped","untyped","untyped_mut","unwrap_many","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_with_instant","uvec2","uvec3","uvec4","value","value","value","vec2","vec3","vec3a","vec4","viewport","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w_axis","w_axis","with_core_stages","with_source","with_trauma","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","www","www","wwww","wwww","wwwx","wwwx","wwwy","wwwy","wwwz","wwwz","wwx","wwx","wwxw","wwxw","wwxx","wwxx","wwxy","wwxy","wwxz","wwxz","wwy","wwy","wwyw","wwyw","wwyx","wwyx","wwyy","wwyy","wwyz","wwyz","wwz","wwz","wwzw","wwzw","wwzx","wwzx","wwzy","wwzy","wwzz","wwzz","wx","wx","wxw","wxw","wxww","wxww","wxwx","wxwx","wxwy","wxwy","wxwz","wxwz","wxx","wxx","wxxw","wxxw","wxxx","wxxx","wxxy","wxxy","wxxz","wxxz","wxy","wxy","wxyw","wxyw","wxyx","wxyx","wxyy","wxyy","wxyz","wxyz","wxz","wxz","wxzw","wxzw","wxzx","wxzx","wxzy","wxzy","wxzz","wxzz","wy","wy","wyw","wyw","wyww","wyww","wywx","wywx","wywy","wywy","wywz","wywz","wyx","wyx","wyxw","wyxw","wyxx","wyxx","wyxy","wyxy","wyxz","wyxz","wyy","wyy","wyyw","wyyw","wyyx","wyyx","wyyy","wyyy","wyyz","wyyz","wyz","wyz","wyzw","wyzw","wyzx","wyzx","wyzy","wyzy","wyzz","wyzz","wz","wz","wzw","wzw","wzww","wzww","wzwx","wzwx","wzwy","wzwy","wzwz","wzwz","wzx","wzx","wzxw","wzxw","wzxx","wzxx","wzxy","wzxy","wzxz","wzxz","wzy","wzy","wzyw","wzyw","wzyx","wzyx","wzyy","wzyy","wzyz","wzyz","wzz","wzz","wzzw","wzzw","wzzx","wzzx","wzzy","wzzy","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xww","xww","xwww","xwww","xwwx","xwwx","xwwy","xwwy","xwwz","xwwz","xwx","xwx","xwxw","xwxw","xwxx","xwxx","xwxy","xwxy","xwxz","xwxz","xwy","xwy","xwyw","xwyw","xwyx","xwyx","xwyy","xwyy","xwyz","xwyz","xwz","xwz","xwzw","xwzw","xwzx","xwzx","xwzy","xwzy","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxww","xxww","xxwx","xxwx","xxwy","xxwy","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyww","xyww","xywx","xywx","xywy","xywy","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xzw","xzw","xzww","xzww","xzwx","xzwx","xzwy","xzwy","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yww","yww","ywww","ywww","ywwx","ywwx","ywwy","ywwy","ywwz","ywwz","ywx","ywx","ywxw","ywxw","ywxx","ywxx","ywxy","ywxy","ywxz","ywxz","ywy","ywy","ywyw","ywyw","ywyx","ywyx","ywyy","ywyy","ywyz","ywyz","ywz","ywz","ywzw","ywzw","ywzx","ywzx","ywzy","ywzy","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxww","yxww","yxwx","yxwx","yxwy","yxwy","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyww","yyww","yywx","yywx","yywy","yywy","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yzw","yzw","yzww","yzww","yzwx","yzwx","yzwy","yzwy","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zww","zww","zwww","zwww","zwwx","zwwx","zwwy","zwwy","zwwz","zwwz","zwx","zwx","zwxw","zwxw","zwxx","zwxx","zwxy","zwxy","zwxz","zwxz","zwy","zwy","zwyw","zwyw","zwyx","zwyx","zwyy","zwyy","zwyz","zwyz","zwz","zwz","zwzw","zwzw","zwzx","zwzx","zwzy","zwzy","zwzz","zwzz","zx","zx","zx","zx","zx","zxw","zxw","zxww","zxww","zxwx","zxwx","zxwy","zxwy","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zyw","zyw","zyww","zyww","zywx","zywx","zywy","zywy","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zzw","zzw","zzww","zzww","zzwx","zzwx","zzwy","zzwy","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","sound_source","volume","alpha","blue","green","red","BVec2","BVec3","BVec3A","BVec4","BVec4A","w","x","x","x","y","y","y","z","z","Affine2","Affine3A","Mat2","Mat3","Mat3A","Mat4","Quat","Vec2","Vec3","Vec3A","Vec4","mat2","mat3","mat3a","mat4","matrix2","matrix3","quat","translation","translation","vec2","vec3","vec3a","vec4","w_axis","x","x","x_axis","x_axis","x_axis","y","y","y_axis","y_axis","y_axis","z","z_axis","z_axis","z_axis","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","IVec2","IVec3","IVec4","ivec2","ivec3","ivec4","w","x","x","x","y","y","y","z","z","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","Once","Repeating","Stopwatch","Time","Timer","TimerMode","delta","delta_seconds","delta_seconds_f64","duration","elapsed","elapsed","elapsed_seconds","elapsed_seconds_f64","finished","first_update","last_update","mode","paused","paused","startup","stopwatch","times_finished_this_tick","UVec2","UVec3","UVec4","uvec2","uvec3","uvec4","w","x","x","x","y","y","y","z","z","Aspect","Box","Capsule","CapsuleUvProfile","Circle","Cube","Fixed","Icosphere","Plane","Quad","RegularPolygon","Torus","UVSphere","Uniform","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","flip","flipped","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","latitudes","longitudes","max_x","max_y","max_z","min_x","min_y","min_z","new","new","new","new","new","radius","radius","radius","radius","radius","radius","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","ring_radius","rings","sectors","sides","size","size","size","stacks","subdivisions","subdivisions_segments","subdivisions_sides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv_profile","vertices","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ignore","new","unwrap","JumpySessionPlugin","LocalSessionRunner","Session","SessionManager","SessionRunner","SessionStage","Update","accumulator","advance","advance","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","collect_local_input","commands","core","core_meta_arc","core_session","core_session","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_rc","downcast_ref","drop","drop","drop","drop","drop","ensure_2_players","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","get_player_input","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","loop_start","menu_camera","network_player_idx","network_player_idx","new","play_sounds","restart","restart","restart","run_criteria","run_criteria","session","session_run_criteria","set_player_input","set_player_input","start_lan","start_local","stop","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","update_game","vzip","vzip","vzip","vzip","vzip","world","world","Args","DisableMenuInput","EguiFontDefinitions","JumpyUiPlugin","MenuAction","StateInstances","WidgetAdjacencies","WidgetAdjacency","WidgetAdjacencyEntry","WidgetId","WidgetSystem","above","adjacencies","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","below","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","debug_tools","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","editor","eq","equals","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_hash","handle_menu_input","hash","id","init","init","init","init","init","init","init","init","instances","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","left","main_menu","map","new","pause_menu","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","right","system","text_boxes","to_left_of","to_owned","to_owned","to_owned","to_right_of","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_input","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_egui_fonts","update_ui_scale","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widget","widget","widgets","with","BonesSnapshot","CoreDebugSettings","DebugToolsPlugin","FrameDiagState","ShowDebugWindows","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","debug_tools_window","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","frame_diagnostic_window","frame_time_diagnostics","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_fps","max_frame_time","min_fps","min_frame_time","profiler","profiler_window","sync_core_debug_settings","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","CameraQuery","Collision","EditorCameraPos","EditorCentralPanel","EditorCursor","EditorLeftToolbar","EditorMapExport","EditorPlugin","EditorRightToolbar","EditorState","EditorTool","EditorTopBar","Element","LayerCreateInfo","MapCreateInfo","MapTilesetEguiTextureinfo","MapTilesetEguiTextures","STORAGE_KEY","Tile","UserMapStorage","_phantom","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","camera","camera","camera","cleanup_editor","clipboard","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","commands","context_click_pos","core_meta","core_meta","create_map","current_collision","current_layer_idx","current_pos","current_tilemap_tile","current_tool","cursor","cursor","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","editor_input","editor_input","editor_ui_system","element_assets","eq","equals","equivalent","erased_serialize","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","game","game","game","game","height","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid","layer_create_dialog","layer_create_info","localization","localization","localization","localization","map","map_assets","map_create_dialog","map_create_info","map_export","map_export","map_export_window","map_height","map_open_dialog","map_width","name","name","overlay_window","pos","raw_clone","raw_clone","raw_drop","raw_drop","serialize","session_manager","session_manager","show_layer_create","show_map_create","show_map_export_window","show_map_open","size","state","state","state","state","storage","storage","system","system","system","system","texture","tile_collision_color","tile_size","tilesets","to_owned","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Credits","Home","HomeMenu","MainMenu","MainMenuBackground","MainMenuPlugin","MapSelect","MenuPage","NetworkGame","PlayerSelect","Settings","_phantom","app_exit","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clean_up_main_menu","clone","clone_dynamic","clone_into","clone_type_data","clone_value","commands","component_ids","credits","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_menu_input","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from","from","from_components","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","game","get_components","get_field","get_field_mut","get_type_info","get_type_registration","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter_fields","localization","main_menu_system","map_select","menu_page","menu_page","modified_settings","name_at","network_game","path","path_mut","player_select","player_select_state","raw_clone","raw_drop","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","set","settings","setup_main_menu","storage","system","system","to_owned","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","is_waiting","CREDITS","CREDITS_STR","Credits","CreditsEntry","CreditsHandle","CreditsMenu","CreditsSection","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contribution","credits_parser","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","entries","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","game","handle","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","keyboard_input","link","localization","menu_input","menu_page","name","name","sections","system","title","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","Input","ParseState","PositionRepr","__parse__","__parse___","__parse_contribution","__parse_credits","__parse_entry","__parse_entry_name","__parse_handle","__parse_section","_phantom","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","credits","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","new","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","MapSelectMenu","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","commands","core","deref","deref_mut","downcast","drop","from","from_sample_","from_subset","game","game_state","handle_match_setup_messages","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","localization","map_assets","menu_input","menu_page","pause_page","player_select_state","session_manager","storage","system","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","Host","Hosting","Idle","Join","Joining","Lan","LanMode","MDNS","MDNS_SERVICE_TYPE","MatchKind","MatchmakingMenu","Online","PINGER","Pinger","ServerInfo","State","Status","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","core","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","eq","eq","eq","equals","equals","equals","equivalent","equivalent","equivalent","from","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","game","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","joined_players","lan_servers","lan_service_discovery_recv","localization","map_assets","match_kind","menu_input","menu_page","ping","ping_update_timer","service","service_info","session_manager","state","status","system","time","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","player_count","service_name","GAMEPAD_ACTION_IDX","KEYPAD_ACTION_IDX","PlayerActionMap","PlayerAtlasEguiTextures","PlayerSelectMenu","PlayerSelectPanel","PlayerSelectState","PlayerSlot","active","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas_meta_assets","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","confirmed","core","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","fmt","from","from","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","game","game","get_player_actions","get_text","get_user_action","handle_match_setup_messages","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_ai","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","keyboard_input","localization","localization","menu_input","menu_page","player_atlas_egui_textures","player_image","player_meta_assets","player_select_state","player_select_state","players","selected_player","slots","system","system","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","Controls","ModifiedSettings","Networking","SettingsMenu","SettingsTab","Sound","TABS","_phantom","adjacencies","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","control_inputs","controls","current_tab","currently_binding_input_idx","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","dyn_eq","eq","equals","equivalent","from","from","from","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","game","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","is_in_subset","is_in_subset","is_in_subset","localization","menu_input","menu_page","modified_settings","networking","raw_clone","raw_drop","sound","storage","system","to_owned","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","BindingKind","ControlInputBindingEvents","Gamepad","KeyboardMouse","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","controls_settings_ui","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","format_input","from","from","from_sample_","from_sample_","from_subset","from_subset","gamepad_buttons","gamepad_events","get_event","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","keys","mouse","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","networking_settings_ui","sound_settings_ui","Default","MapSelect","PauseMenuPage","PausePlugin","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","eq","equals","equivalent","from","from","from_sample_","from_sample_","from_subset","from_subset","from_world","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","pause_menu_default","pause_menu_map_select","pause_system","raw_clone","raw_drop","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unpause_system","upcast","upcast","vzip","vzip","Back","Confirm","Down","Left","MenuAction","Pause","Right","Start","ToggleFullscreen","UiInputPlugin","Up","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","get_at","get_hash","hash","index","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","raw_clone","raw_drop","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","EguiContextExt","EguiResponseExt","EguiUiExt","bordered_button","bordered_frame","clear_focus","focus_by_default","themed_label","BorderedButton","as_any","as_any_mut","as_bind_group_shader_type","border","borrow","borrow_mut","default_border","deref","deref_mut","downcast","drop","focus_on_hover","focus_on_hover","from","from_sample_","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_sample","is_in_subset","margin","margin","min_size","min_size","new","on_click_border","on_click_border","on_focus_border","on_focus_border","padding","padding","sense","sense","show","text","themed","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","ui","upcast","vzip","wrap","wrap","BorderedFrame","BorderedFramePrepared","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","background_shape_idx","begin","bg_texture","border_only","border_only","border_scale","border_scale","borrow","borrow","borrow_mut","borrow_mut","content_ui","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end","frame","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","margin","margin","new","padding","padding","paint","show","show_dyn","texture_border_size","texture_size","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","BiChannelClient","BiChannelServer","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","bi_channel","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","is_in_subset","is_in_subset","recv","recv","recv_blocking","recv_blocking","request_receiver","request_sender","response_receiver","response_sender","send","send","send_blocking","send_blocking","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_recv","try_recv","try_send","try_send","type_id","type_id","upcast","upcast","vzip","vzip"],"q":["jumpyjumpy::assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::assets::asset_handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::audiojumpy::audio::MusicState","","jumpy::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::loading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::localization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadatajumpy::metadata::gamemeta_derive_bevy_asset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadata::localization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadata::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadata::uijumpy::networking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::networking::LanMatchmakerRequest","","","jumpy::networking::LanMatchmakerResponse","","jumpy::networking::certs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::networking::lanjumpy::networking::lan::LanMatchmakerRequest","","","jumpy::networking::lan::LanMatchmakerResponse","","jumpy::networking::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::platformjumpy::platform::StorageRequest","","","jumpy::platform::native","jumpy::preludejumpy::prelude::AssetEvent","","","jumpy::prelude::BuiltinElementKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::Color","","","","","","","","","","","","jumpy::prelude::EditorInput","","","","","","","","","","","","","","","","","","","jumpy::prelude::FileDragAndDrop","","","","","jumpy::prelude::PlaybackState","","","","jumpy::prelude::bonesjumpy::prelude::bones::AudioEvent","","jumpy::prelude::bones::Color","","","","jumpy::prelude::bones::bool","","","","","","","","","","","","","","jumpy::prelude::bones::f32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::bones::f64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::bones::i32","","","","","","","","","","","","","","","jumpy::prelude::bones::swizzlesjumpy::prelude::bones::time","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::bones::u32","","","","","","","","","","","","","","","jumpy::prelude::shapejumpy::prelude::system_adapter","","","jumpy::sessionjumpy::uijumpy::ui::debug_tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::editorjumpy::ui::main_menujumpy::ui::main_menu::MenuPage","jumpy::ui::main_menu::credits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::credits::credits_parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::map_select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::network_gamejumpy::ui::main_menu::network_game::LanMode","","jumpy::ui::main_menu::player_selectjumpy::ui::main_menu::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::settings::controls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::settings::networking","jumpy::ui::main_menu::settings::sound","jumpy::ui::pause_menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::ui_input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::widgets","","","","","","","","jumpy::ui::widgets::bordered_button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::widgets::bordered_frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Data structures for things like assets and settings that …","","Systems and utilities related to specific platform support …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around <code>Handle&lt;T&gt;</code> that also contains the <code>AssetPath</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","A wrapper around <code>Handle&lt;T&gt;</code> that also contains the <code>AssetPath</code>…","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calculate an asset’s full path relative to another asset","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Plays music according to the game mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The directory to load assets from","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","The .game.yaml asset to load at startup","","Hot reload assets","","Calls <code>U::from(self)</code>.","","","","","","Set the log level","","","Sets the sync test distance during local play.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bevy resource containing the editor action to perform for …","","","","","The control inputs that a player may make.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System param used to load and hot reload the game","","","","","","","","","","","","","","","","","","","","","","Run criteria that waits until the necessary core assets …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","System to check for asset changes and hot reload the game","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","This function is called once when the game starts up and, …","System to run the initial game load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Plugin for initializing and loading the <code>Localization</code> …","Extension trait to reduce boilerplate when getting values …","","","","","","","","","","","Returns the argument unchanged.","","","Request message content and get an empty string if it doesn…","","Calls <code>U::from(self)</code>.","","","","","","Watch for locale <code>BundleAsset</code> load events and add any new …","","","","","","","","","","","","","Helper trait for converting color meta to <code>egui::Color32</code>.","This is a helper to reduce clones on font family strings …","","","","Resource containing the main <code>Handle&lt;GameMeta&gt;</code>.","","","","","","","","Binds inputs to player actions","","Global settings, stored and accessed through …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default locale that will be used if a message is not …","","","","","","","","","","","","","","","","","","The locale setting detected on the user’s system","","","","","","","","","","","","","Egui texture ID may not be valid on all <code>ImageMeta</code> unless …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Controls for game remotes","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Controls for keyboard player 1","Controls for keyboard player 2","","","","","","The handles to the locale bundle assets","","","The address of the matchmaking server to connect to for …","","","","","","","","","","","The player controller bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","The default locale that will be used if a message is not …","","","","The locale setting detected on the user’s system","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","The handles to the locale bundle assets","","","","","","","","","","","","","Binds inputs to player actions","The key used to store the settings in the …","Global settings, stored and accessed through …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Controls for game remotes","Get the input map for the given player index","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Controls for keyboard player 1","Controls for keyboard player 2","The address of the matchmaking server to connect to for …","","The player controller bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a helper to reduce clones on font family strings …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe <code>ggrs::Config</code> implementation used by Jumpy.","","Channel used to do matchmaking over LAN.","","","","","","","The QUIC network endpoint used for all network …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Serializable data types for network messages used by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Channel used to do matchmaking over LAN.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of the matchmaker task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A newtype around <code>Vec2</code> that implements <code>From&lt;u16&gt;</code> and …","A player’s controller inputs densely packed into a …","This is the specific <code>Quantized</code> type that we use to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Storage::save()</code> task handle that can be used to check …","","Resource for accessing platform specific persistent …","The type of the inner data in <code>Storage</code>","","","","","","","","","","","","","","","","","","","The sender we use to send storage requests to the storage …","","","","","","","","","","","","","The in-memory storage data that we operate on when getting …","A data receiver that gets set when we are awaiting the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Get a value from the in-memory storage cache.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Get whether or not saving has been completed.","","","","","","Get whether or not storage has been loaded.","Load from platform storage into memory.","Bevy system that will load the <code>Storage</code> and wait for it to …","Native platform support","","Saves the in-memory storage cache to persistent storage.","Set a value in the in-memory storage cache.","","","","","","","","","","","","","","","","","","","","","","","Try to get a value from the in-memory storage cache.","","","","","","Load from platform storage into memory.","Saves the in-memory storage cache to persistent storage.","Set a value in the in-memory storage cache.","","","","","","","","","","","","","","","","","","","","The <code>A</code> key.","","","","Per vertex coloring. Use in conjunction with …","Per vertex joint transform matrix index. Use in …","Per vertex joint transform matrix weight. Use in …","The direction the vertex normal is facing in. Use in …","Where the vertex is located in space. Use in conjunction …","The direction of the vertex tangent. Used for normal …","Texture coordinates for the vertex. Use in conjunction …","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","Stores the canonical input-method-agnostic representation …","A component that allows the attached entity to drive the …","Allows a type to be used as a gameplay action in an …","","<code>App</code> extension methods for adding new asset types.","Command that adds a child to an entity","Helper trait to make syntax for adding systems to …","A filter on a component that only retains results added …","Indicates that an alias of something is to be created.","Indicates that the user can scroll by dragging the mouse.","Corresponds to <code>KeyCode::LAlt</code> and <code>KeyCode::RAlt</code>.","An <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.","An animated decoration such as seaweed or anemones","The <code>AnyOf</code> query parameter fetches entities with any of the …","The <code>Apostrophe</code> / <code>&#39;</code> key.","A container of app logic and data.","Extension trait with the methods to add to Bevy’s <code>App</code>","Extension trait with the methods to add to Bevy’s <code>App</code>","The <code>Resource</code> that stores the <code>App</code>’s <code>TypeRegistry</code>.","The <code>Apps</code> key.","A thread-safe reference-counting pointer. ‘Arc’ stands …","An arrow. This is the default cursor on most systems.    ","Events that involve assets of type <code>T</code>.","Adds support for Assets to an App.","Loads assets from the filesystem in the background.","Stores Assets of a given type and tracks changes to them.","The <code>Asterik</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The window’s top-left corner will be placed at the …","The default audio channel","Extension trait to add new audio channels to the …","Channel to play and control audio","Errors that can occur when directly controlling audio","Play and control audio","Different kinds of easing for fade-in and fade-out","Asset for direct audio control","Extension trait to remove some boilerplate when","A Bevy plugin for audio","This resource is used to configure the audio backend at …","A source of audio data","Something went wrong when handling the command in the …","A tween for audio transitions","The position will be set by the window manager.","The <code>Ax</code> key.","Stores the position data of the input devices of type <code>T</code>.","The value of a <code>Gamepad</code> axis has changed.","The <code>B</code> key.","","","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","The <code>Back</code> / <code>Backspace</code> key.","","The <code>Backslash</code> / <code>\\\\</code> key.","","Trait that may be derived to implement a Bevy asset type.","Trait that may be derived to implement a Bevy asset type.","Derive macro for the <code>BonesBevyAsset</code> trait.","Derive macro for the <code>BonesBevyAsset</code> trait.","Trait implemented for types that may appear in the fields …","Trait implemented for types that may appear in the fields …","Derive macro for the <code>BonesBevyAssetLoad</code> trait.","Derive macro for the <code>BonesBevyAssetLoad</code> trait.","Creates a borderless window that uses the full size of the …","Trait defining how to build children","Trait that defines adding children to an entity directly …","The kind of built-in","","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","The value of a <code>Gamepad</code> button has changed.","The C button.","The <code>C</code> key.","","","The <code>Calculator</code> key.","The defining component for camera entities, storing …","","","Configuration for the “main 3d render graph”.","","","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","Indicates that a cell (or set of cells) may be selected.","Center the window on the monitor.","<code>WorldQuery</code> that tracks changes and additions for component …","A filter on a component that only retains results added or …","Struct for building children onto an entity","Contains references to the child entities of this entity.","A combination of buttons, pressed simultaneously","How should clashing inputs by handled by an <code>InputMap</code>?","A <code>Resource</code> that stores the color that is used to clear the …","Indicates that a column can be resized horizontally.","The <code>Colon</code> / <code>:</code> key.","","A 2d material that renders 2d meshes with a texture tinted …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","","The <code>Comma</code> / <code>,</code> key.","The audio command que of the audio manager is full","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A data type that can be used to store data for an entity.","","The <code>Compose</code> key on Linux.","Algorithmically-computed indication of whether an entity …","Trait to help impl the default helper methods we provide …","Syntax sugar to apply the same conditions and/or labels to …","A <code>Gamepad</code> has been connected.","Indicates that a context menu is available.","Corresponds to <code>KeyCode::LControl</code> and <code>KeyCode::RControl</code>.","The <code>Convert</code> key.","Indicates something is to be copied.","The <code>Copy</code> key.","","","Resource containing the session’s <code>CoreMeta</code>.","Adds core functionality to Apps.","The implementation of a Jumpy game session.","Information needed to start a game session.","The names of the default <code>App</code> stages.","A crab roaming on the ocean floor","The throwable crate item","Create a new layer","","A simple crosshair.   ","Uses current monitor of the window.","This will be available as a resource, indicating the …","An event that is sent whenever the user’s cursor enters …","The icon to display for a window’s cursor.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved on a …","The <code>Cut</code> key.","The <code>D</code> key.","","","The default size of the deadzone used by constructor …","A <code>ToggleActions</code> in disabled state.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","The platform-dependent default cursor.","This plugin group will add all the default plugins:","The <code>Delete</code> key.","","","Used for immutable dereferencing operations, like <code>*v</code>.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","An <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.","A <strong>data structure</strong> that can be deserialized from any data …","A <strong>data structure</strong> that can be deserialized from any data …","","","Despawns the given entity’s children recursively","Despawns the given entity and all its children recursively","Trait that holds functions for despawning recursively down …","Types that implement reliable change detection.","A <code>Gamepad</code> has been disconnected.","Corresponds to <code>-y</code>","The <code>Down</code> / <code>Down Arrow</code> key.","","Two directional axes combined as one input.","A dynamic channel to play and control audio","Resource to play and control audio in dynamic channels","Generates a dynamic plugin entry point function for the …","The <code>E</code> key.","A <code>ToggleActions</code> in enabled state.","Indicates that an edge of a box is to be moved right …","The right action button of the action pad (i.e. PS: …","The editor inputs that a player may make.","","","","The <code>End</code> key.","Lightweight identifier of an entity.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","Euler rotation sequences.","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Indicates a bidirectional resize cursor.","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","All false.","All false.","All false.","","Marker trait for tween commands that are fading in.","Marker trait for tween commands that are fading out.","","","Events related to files being dragged and dropped on a …","The <code>Stage</code> that runs before all other app stages.","","A system run criteria that enables systems or stages to …","A Stage that runs a number of child stages with a fixed …","Resource type that allows you to get info about and to …","A trait for types which can be constructed from a …","Derives the <code>FromReflect</code> trait.","Creates an instance of the type this trait is implemented …","Creates a fullscreen window that uses the maximum …","The <code>G</code> key.","","","","","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","A type of a <code>GamepadButton</code>.","An event of a <code>Gamepad</code>.","The data contained in a <code>GamepadEvent</code> or <code>GamepadEventRaw</code>.","A collection of connected <code>Gamepad</code>s.","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","","Describe the position of an entity relative to the …","Indicates that something can be grabbed.","Indicates that something is grabbed.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","Grenades item","The <code>H</code> key.","A hand (often used to indicate links in web browsers).    ","A handle into a specific <code>Asset</code> of type <code>T</code>.","A non-generic version of <code>Handle</code>.","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","Help indicator (often rendered as a “?”)    ","The base plugin for handling <code>Parent</code> and <code>Children</code> components","An extension trait for <code>Query</code> that adds hierarchy related …","The <code>Home</code> key.","","","HSL (hue, saturation, lightness) color with an alpha …","The <code>I</code> key.","An identity <code>GlobalTransform</code> that maps all points in space …","An identity <code>Transform</code> with no translation, rotation, and a …","An identity <code>TransformBundle</code> with no translation, rotation, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","","A <code>Visibility</code>, set as invisible.","A <code>ComputedVisibility</code>, set as invisible.","An invisible <code>SpatialBundle</code>, with no translation, rotation, …","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","","Adds the <code>Image</code> as an asset and makes sure that they are …","Wrapper type to mark a <code>SystemParam</code> as an input.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","Uses monitor with the specified index.","The type contained within this smart pointer","A “press-able” input of type <code>T</code>.","This <code>Bundle</code> allows entities to collect and interpret …","A <code>Plugin</code> that collects <code>Input</code> from disparate sources, …","Maps from raw inputs to an input-method agnostic …","The <code>Insert</code> key, next to the <code>Backspace</code> key.","Command that inserts a child at a given index of a parent…","Extension trait allowing any system to be converted into a …","An extension trait providing the <code>IntoPipeSystem::pipe</code> …","Conversion trait to turn something into a <code>System</code>.","","The <code>J</code> key.","","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","","The <code>L</code> key.","The <code>LAlt</code> / <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>LBracket</code> / <code>Left Bracket</code> key.","The <code>LControl</code> / <code>Left Control</code> key.","","The <code>LShift</code> / <code>Left Shift</code> key.","The <code>LWin</code> / <code>Left Windows</code> key. Maps to <code>Left Command</code> on Mac.","The <code>Stage</code> that runs after all other app stages.","A value which is initialized on the first access.","Corresponds to <code>-x</code>","The <code>Left</code> / <code>Left Arrow</code> key.","The left mouse button.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","A system local <code>SystemParam</code>.","The <code>M</code> key.","","The largest possible axis value.","","","The smallest possible axis value.","The <code>Mail</code> key.","Type for the default audio channel","","","","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","","The middle mouse button.","The mine item","Minimal plugin group that will add the following plugins:","The <code>Minus</code> / <code>-</code> key.","Send fake input events for testing purposes","The mode button.","","A keyboard modifier that combines two <code>KeyCode</code> values into …","Defines which monitor to use.","A button on a mouse device.","The direction of motion of the mouse wheel.","A buttonlike-input triggered by <code>MouseWheel</code> events","Indicates something is to be moved.    ","","Move a layer up or down.","Configuration resource for Multi-Sample Anti-Aliasing.","","Unique mutable borrow of an entity’s component","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","All NAN:s.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","","Indicates that an edge of a box is to be moved up (north).","The number of variants of this action type","Component used to identify an entity. Stores a hash for …","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","When you want to change state, insert this as a resource","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","Indicates that the dragged item cannot be dropped here.","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","This is not a built-in item","The upper action button of the action pad (i.e. PS: …","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","The <code>O</code> key.","","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","","","The <code>Oem102</code> key.","Run once and stop.","A filter that tests if any of the given filters apply.","","","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","Another mouse button with the associated number.","The system’s output.","The <code>P</code> key.","","","The <code>PageDown</code> key.","The <code>PageUp</code> key.","","An alternative to <code>Commands</code> that can be used in parallel …","","Holds a reference to the parent entity of this entity. …","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The instance is paused.","The instance is fading out and will be paused when the …","The <code>Period</code> / <code>.</code> key.","","A 3D camera projection in which distant objects appear …","Zero-sized type used to mark things that “act like” …","","A command for interacting with playing sound.","The <code>PlayPause</code> key.","Playback status of a currently playing sound.","","","","","","Player spawner","","The instance is playing.","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","The <code>Plus</code> / <code>+</code> key.","The <code>Stage</code> that runs once after <code>StartupStage::Startup</code>.","The <code>Stage</code> that runs after <code>CoreStage::Update</code>.","The <code>Power</code> key.","The <code>Stage</code> that runs once before <code>StartupStage::Startup</code>.","The <code>Stage</code> that runs before <code>CoreStage::Update</code>.","All matching inputs will always be pressed","The <code>PrevTrack</code> key.","Uses primary monitor of the system.","Only press the action that corresponds to the longest chord","Progress indicator. Shows that processing is being done.","A configurable <code>CameraProjection</code> that can select its …","Command that pushes children to the end of the entity’s …","The <code>Q</code> key.","A quaternion representing an orientation.","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","The instance is queued","The <code>R</code> key.","The <code>RAlt</code> / <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>RBracket</code> / <code>Right Bracket</code> key.","The <code>RControl</code> / <code>Right Control</code> key.","","The <code>RShift</code> / <code>Right Shift</code> key.","The <code>RWin</code> / <code>Right Windows</code> key. Maps to <code>Right Command</code> on Mac.","A ray is an infinite line starting at <code>origin</code>, going in …","An event that is sent whenever a window receives a …","A rectangle defined by two opposite corners.","A reflected Rust type.","","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to provide the default value of a type.","A struct used to deserialize reflected instances of a type.","A struct used to operate on reflected <code>Resource</code> of a type.","A struct used to serialize reflected instances of a type.","Command that removes children from an entity, and removes …","Command that removes the parent of an entity, and removes …","","A <code>SystemParam</code> that grants access to the entities that had …","Rename a map layer.","","Describes which rendering layers an entity belongs to.","Reset when finished.","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","The <code>Return</code> / <code>Enter</code> key.","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","Corresponds to <code>+x</code>","The <code>Right</code> / <code>Right Arrow</code> key.","The right mouse button.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","Indicates that the row can be resized vertically.","","","A strongly-typed class of labels used to identify run …","Generates an impl of the <code>RunCriteriaLabel</code> trait.","The <code>S</code> key.","","","","Indicates that an edge of a box is to be moved down …","The scan code of a <code>KeyboardInput</code>.","A container of <code>Stage</code>s set to be run in a linear order.","Extension trait with the methods to add to Bevy’s …","Extension trait with the methods to add to Bevy’s …","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The cursor indicates that an edge of a box is to be moved …","The select button.","The <code>Semicolon</code> / <code>;</code> key.","A <strong>data structure</strong> that can be serialized into any data …","A <strong>data structure</strong> that can be serialized into any data …","","","","Update the tilemap of a layer.","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","The key that makes letters capitalized, corresponding to …","A single button","A single directional axis with a configurable trigger zone.","Creates a fullscreen window that will render at desktop …","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","","","","The <code>Snapshot</code> / <code>Print Screen</code> key.","The bottom action button of the action pad (i.e. PS: …","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","A <code>Bundle</code> with the following <code>Component</code>s:","Spawn an element onto the map.","","","A Bundle of components for drawing a single sprite from a …","This is a sproinger","A type that can run as a step of a <code>Schedule</code>.","A strongly-typed class of labels used to identify <code>Stage</code>s.","Generates an impl of the <code>StageLabel</code> trait.","The start button.","The <code>Stage</code> that runs once when an <code>App</code> starts up.","The label for the startup <code>Schedule</code>, which runs once at the …","The names of the default <code>App</code> startup stages.","Stack based state machine","This stage serves as the “driver” for states of a …","","The <code>Stop</code> key.","The instance cannot be found anymore. This might might …","The instance is fading out and will be stopped when the …","","A reflected Rust regular struct type.","The cursor indicates that an edge of a box is to be moved …","This is a sword","The <code>Sysrq</code> key.","An ECS system that can be added to a <code>Schedule</code>","","A strongly-typed class of labels used to identify <code>System</code>s.","Generates an impl of the <code>SystemLabel</code> trait.","A parameter that can be used in a <code>System</code>.","A parameter that can be used in a <code>System</code>.","Implement <code>SystemParam</code> to use a struct as a parameter in a …","Implement <code>SystemParam</code> to use a struct as a parameter in a …","A trait implemented for all functions that can be used as …","A builder for describing several systems at the same time.","Stores and executes systems. Execution order is not …","The <code>T</code> key.","","","The total number of layers supported.","All true.","All true.","All true.","","The <code>Tab</code> / <code>   </code> key.","The resulting type after dereferencing.","Helper for configuring and creating the default task …","Indicates text that may be selected or edited.    ","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","Controls whether or not the <code>ActionState</code> / <code>InputMap</code> pairs …","A touch input event.","A collection of <code>Touch</code>es.","Describe the position of an entity. If the entity has a …","A <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …","The base plugin for handling <code>Transform</code> components","A reflected Rust tuple struct.","A command for interacting with the tweening of the playing …","Associates a <code>Ulid</code> ID to a Rust type.","Associates a <code>Ulid</code> ID to a Rust type.","Derive macro for the <code>TypeUlid</code> trait.","Derive macro for the <code>TypeUlid</code> trait.","The <code>U</code> key.","The type’s <code>Ulid</code>.","The type’s <code>Ulid</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","Corresponds to <code>+y</code>","The <code>Up</code> / <code>Up Arrow</code> key.","The <code>Stage</code> responsible for doing most app logic. Systems …","","Use the order in which actions are defined in the enum to …","Some combination of user input, which may cross [<code>Input</code>]…","The <code>V</code> key.","","A <code>Visibility</code>, set as visible.","A visible <code>SpatialBundle</code>, with no translation, rotation, …","Print a warning for each <code>Entity</code> with a <code>T</code> component whose …","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector with SIMD support.","Indicates vertical text that may be selected or edited.","A virtual axis that you can get a <code>SingleAxis</code> from","A virtual DPad that you can get an [<code>AxisPair</code>] from","A virtual DPad that you can get an [<code>AxisPair</code>] from","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code> and <code>ComputedVisibility</code> <code>Component</code>…","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The left action button of the action pad (i.e. PS: Square, …","The OS or “Windows” key, corresponding to <code>KeyCode::LWin</code>…","An operating system window that can present content and …","Describes the information needed for creating a window.","Defines the way a window is displayed.","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where window should be placed at on creation.","Creates a window that uses the given size.","A collection of <code>Window</code>s with unique <code>WindowId</code>s.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Struct for adding children to an entity directly through …","Horizontal movement.","The <code>X</code> key.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","Vertical movement.","The <code>Y</code> key.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","","","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","The <code>Yen</code> key.","The Z button.","The <code>Z</code> key.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Indicates that the user can zoom in.","Indicates that the user can zoom out.","","","","","Get alpha.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","The action triggered by this entity","A reference to the <code>ActionData</code> of the corresponding <code>action</code>","","A mutable reference of the <code>ActionData</code> of the corresponding …","An <code>ActionState</code> component","Adds an asset to the collection, returning a Strong handle …","Pushes a generic <code>Command</code> to the command queue.","Add the provided <code>Window</code> to the <code>Windows</code> resource.","","","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","Registers <code>T</code> as a supported asset in the application.","","Adds the provided asset loader to the application.","","","","","","","","","","","","","","","","","","","","","","","","","Add a new audio channel to the application","","","Adds a single child","Creates a <code>ChildBuilder</code> with the given children built in …","Adds a command to this <code>ChildBuilder</code>","Registers <code>T</code> as a supported internal asset in the …","","Adds utility stages to the <code>Schedule</code>, giving it a …","Add an enter system for the given state","Add an enter system for the given state","","Add a system to run when entering the given state","","Add an enter system set for the given state","Add an enter system set for the given state","","Add a system set with multiple systems to run when …","","Setup the application to manage events of type <code>T</code>.","Add an exit system for the given state","Add an exit system for the given state","","Add a system to run when exiting the given state","","Add an exit system set for the given state","Add an exit system set for the given state","","Add a system set with multiple systems to run when exiting …","","Create a new fixed timestep stage and add it to the …","","Create a new fixed timestep stage and add it to the …","Create a new fixed timestep stage and add it to the …","","","Create a new fixed timestep stage and add it to the …","Create a new fixed timestep stage and add it to the …","","","Add a child sub-stage to a fixed timestep stage","Add a child sub-stage to a fixed timestep stage","","","Add a custom child sub-stage to a fixed timestep stage","Add a custom child sub-stage to a fixed timestep stage","","","Add a system to run under a fixed timestep","Add a system to run under a fixed timestep","","","Add many systems to run under a fixed timestep","Add many systems to run under a fixed timestep","","","Adds the provided asset loader to the server.","Add a <code>StateTransitionStage</code> in the default position","","Add a <code>StateTransitionStage</code> after the specified stage","Add a <code>StateTransitionStage</code> after the specified stage","","","Add a <code>StateTransitionStage</code> before the specified stage","Add a <code>StateTransitionStage</code> before the specified stage","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Adds a single <code>Plugin</code>.","Adds a group of <code>Plugin</code>s.","Whether to create a window when added.","","Adds a <code>Stage</code> with the given <code>label</code> to the last position of …","Add a child stage","Adds the given <code>stage</code> at the last position of the schedule.","Adds a <code>Stage</code> with the given <code>label</code> to the app’s <code>Schedule</code>, …","Adds the given <code>stage</code> immediately after the <code>target</code> stage.","Adds a <code>Stage</code> with the given <code>label</code> to the app’s <code>Schedule</code>, …","Adds the given <code>stage</code> immediately before the <code>target</code> stage.","Adds a <code>Stage</code> with the given <code>label</code> to the last position of …","Adds a startup stage with the given <code>label</code>, immediately …","Adds a startup stage with the given <code>label</code>, immediately …","Adds a system to the startup stage of the app’s <code>Schedule</code>.","Adds a <code>SystemSet</code> to the startup stage.","Adds a <code>SystemSet</code> to the startup schedule, in the stage …","Adds a system to the startup schedule, in the stage …","Adds a new <code>State</code> with the given <code>initial</code> value. This …","Adds a new <code>State</code> with the given <code>initial</code> value. This …","Adds an <code>App</code> as a child of the current one.","Adds a system to the update stage of the app’s <code>Schedule</code>.","","","Adds a <code>SystemSet</code> to the update stage.","","Adds a <code>SystemSet</code> to the <code>Stage</code> identified by <code>stage_label</code>.","Adds the given <code>system_set</code> to the stage identified by …","Adds a system to the <code>Stage</code> identified by <code>stage_label</code>.","Adds the given <code>system</code> to the stage identified by …","Add a sprite to the list of textures in the <code>TextureAtlas</code> …","Adds a texture to be copied to the texture atlas.","Add self to the set","Run a single simulation frame","Returns the 3d affine transformation matrix as an <code>Affine3A</code>.","Specifies that this criteria must be evaluated after a …","Specifies that the system should run after systems with …","","Add an after-ordering","","","","Create a new <code>RenderLayers</code> that belongs to all layers.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Get the window’s <code>CompositeAlphaMode</code>.","","Specifies how the alpha channel of the textures should be …","Marks this system as ambiguous with any system with the …","<code>Anchor</code> point of the sprite in the world","","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","","","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Checks if any touch input was just cancelled.","Returns <code>true</code> if any item in <code>inputs</code> has just been pressed.","Checks if any touch input was just pressed.","Returns <code>true</code> if any item in <code>inputs</code> has just been released.","Checks if any touch input was just released.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns <code>true</code> if any item in <code>inputs</code> has been pressed.","Applies a reflected value to this value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","","","","","","","","","","","","","","","","","","","","","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Returns the system’s archetype component <code>Access</code>.","","","","","Retrieves this world’s Archetypes collection","","Generates a <code>VirtualDPad</code> corresponding to the arrow …","Returns the value as a <code>&amp;dyn Any</codeeturns the value as a <code>&amp;mut dyn Any</codeasts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Hsla</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from HSL colorspace","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Converts this type into an opaque, strongly-typed label.","Converts this type into an opaque, strongly-typed label.","Converts this type into an opaque, strongly-typed label.","Converts a <code>Color</code> to a <code>[f32; 4]</code> from linear RGB colorspace","Converts Color to a u32 from linear RGB colorspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Provides a raw pointer to the data.","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a mutable reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Converts a <code>Color</code> to variant <code>Color::RgbaLinear</code>","Converts <code>Color</code> to a <code>u32</code> from sRGB colorspace.","","","Returns the representation of this label as a string …","Returns the representation of this label as a string …","Returns the representation of this label as a string …","Gets the name of the entity as a <code>&amp;str</code>.","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Returns the aspect ratio (height/width) of a 2D image.","The aspect ratio (width divided by height) of the viewing …","A system that creates <code>AssetEvent</code>s at the end of the frame …","The base folder where assets are loaded from, relative to …","Returns the associated asset I/O.","","","Converts to <code>Arc&lt;T&gt;</code>.","Converts to <code>Arc&lt;[T]&gt;</code>.","Used to determine number of async compute threads to …","Specifies that the system should run with other exclusive …","Specifies that the system should run with other exclusive …","","","","Retrieves the data currently set to the vertex attribute …","Retrieves the data currently set to the vertex attribute …","Returns an iterator that yields references to the data of …","","Returns an iterator that yields mutable references to the …","Control whether the added texture should be converted to …","","","Get the <code>DualAxisData</code> from the binding that triggered the …","The type of the axis.","The axis that is being checked.","Get blue in sRGB colorspace.","Return the local back vector (Z).","Equivalent to <code>local_z()</code>","The window scale factor as reported by the window backend.","","The parallax background layers","The background color of the map, behind the parallax layers","Specifies that this criteria must be evaluated before a …","Specifies that the system should run before systems with …","","Add a before-ordering","","","Specifies that the system should run with other exclusive …","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bones lib preludeonfigures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","","","","","","","","","","","","","Constructs a new <code>InputMap</code> from a <code>&amp;mut InputMap</code>, allowing …","","","","","","Retrieves this world’s Bundles collection","","The type of the button.","Manually bypasses change detection, allowing you to mutate …","","","","","","","","","","","","","The “html canvas” element selector.","","The “html canvas” element selector.","Recasts this handle as a weak handle of an Asset <code>U</code>.","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Retrieves a <code>WorldCell</code>, which safely enables multiple …","","The center point of the rectangle.","Modifies the position of the window to be in the center of …","","","","","","","","Get a channel to play and control audio in","","","","","","","Child entity to add","","","","","Creates a <code>UserInput::Chord</code> from an iterator of inputs of …","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Get the <code>DualAxisData</code> associated with the corresponding …","Get the value associated with the corresponding <code>action</code>, …","Clears the inner asset map, removing all key-value pairs.","Clears the <code>just pressed</code> and <code>just released</code> data for every …","Removes all events.","Consumes the iterator.","Clears all inputs registered for the <code>action</code>","","The clear color operation to perform for the main 3d pass.","","Clears any Gamepad associated with the entity controlled …","Clears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…","Clears the <code>just_released</code> state of the <code>input</code> and returns …","Clears the scheduled state operation.","Clears component tracker state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Makes a clone of the <code>Arc</code> pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTupleStruct</codereates an untyped copy of this handle.","Clones the value as a <code>Reflect</code> trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a weak copy of this handle.","Creates a weak copy of this handle.","Creates a weak, untyped copy of this handle.","Close the operating system window corresponding to this …","Whether to close windows when they are requested to be …","","","","","","","Comparison for two <code>Arc</code>s.","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","","","The sprite’s color tint","","The number of commands that can be sent to the audio …","","","","","","Returns the system’s component <code>Access</code>.","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","Retrieves this world’s Components collection","","Used to determine number of compute threads to allocate","Compute the Axis-Aligned Bounding Box of the mesh vertices …","Returns the 3d affine transformation matrix from this …","Calculates the <code>Mesh::ATTRIBUTE_NORMAL</code> of a mesh.","Returns the 3d affine transformation matrix as a <code>Mat4</code>.","Returns the 3d affine transformation matrix from this …","Returns the transformation as a <code>Transform</code>.","Computed values for this camera, such as the projection …","The computed visibility of the entity.","The computed visibility of the entity.","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","","","Returns the quaternion conjugate of <code>self</code>. For a unit …","Consumes the <code>action</code>","Check if a point lies within this rectangle, inclusive of …","Returns <code>true</code> if the <code>gamepad</code> is connected.","Checks if an asset exists for the given handle","Returns <code>true</code> if the given <code>Entity</code> matches the query.","","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Convert a texture from a format to another. Only a few …","Gets the value of this <code>Component</code> type from entity from …","Gets the value of this <code>Resource</code> type from <code>source_world</code> and …","Counts all vertices of the mesh.","Creates and returns an audio channel for the given key","Inserts the default thread pools into the given resource …","","","","","","","","","","","","","","","Creates an instance of the platform’s default <code>AssetIo</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Panicking version of [<code>get_current</code>]","","","The <code>Duration</code> for which the action has been held or released","","Panicking version of [<code>get_current_mut</code>]","","Get whether or how the cursor is grabbed.","","Sets whether and how the window grabs the cursor.","Get the current <code>CursorIcon</code>","","The current mouse position, in logical pixels, taking into …","Get whether or not the cursor is visible.","","Sets whether the cursor is visible when the window has …","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","","","","Debug formatter for the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the debug level.","Constructs a span at the debug level.","Get whether or not decorations are enabled.","","Sets whether the window should have borders and bars.","Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> …","An ergonomic abbreviation for <code>Default::default()</code> to make …","","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","The default labels for the system","Creates image settings with linear sampling by default.","Creates image settings with nearest sampling by default.","The default image sampler to use when <code>ImageSampler</code> is set …","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","","The depth clear operation to perform for the main 3d pass.","Dereferences the valueeserialize this value from the given Serde deserializer.","Deserialize this value from the given Serde deserializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes a reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the given <code>entity</code>, if it exists. This will also …","Despawns all descendants of the given entity.","Despawns the provided entity alongside all descendants.","Function for despawning an entity and all its children","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","The direction of the ray.","","","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Return the local down vector (-Y).","Equivalent to <code>-local_y()</code>","The input that represents the down direction in this …","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Downcasts the value to type <code>T</code>, consuming the trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the object within the trait …","Downcasts the value to type <code>T</code> by mutable reference.","Returns a mutable reference to the object within the trait …","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Downcasts the value to type <code>T</code> by reference.","Returns a reference to the object within the trait object …","Downcasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …","Creates a new <code>Weak</code> pointer to this allocation.","Generates a <code>VirtualDPad</code> corresponding to the DPad on a …","Creates a draining iterator that removes all eventsrops the <code>Arc</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duplicates the vertex attributes so that no vertices are …","Returns the duration of the timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much time has advanced since <code>startup</code>, as …","Returns the time elapsed on the timer. Guaranteed to be …","","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","","Returns how much time has advanced since <code>startup</code> modulo …","","Returns how much time has advanced since <code>startup</code> modulo …","","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns how much time has advanced since <code>startup</code> modulo …","","","","Creates a new empty <code>App</code> with minimal default configuration.","","","","When this is false, <code>ActionState</code>’s corresponding to <code>A</code> …","","","","","","","","Retrieves this world’s Entities collection","","","","Retrieves this world’s Entities collection mutably","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>.","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Target entity","Target entity","The entity whose action state should be updated","Retrieves an <code>EntityMut</code> that exposes read and write …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equality for two <code>Arc</code>sonstructs an event at the error level.","Constructs a span at the error level.","","","","The type of the event.","","","","","","","Topologically sorted exclusive systems that want to be run …","","Topologically sorted exclusive systems that want to be run …","","Topologically sorted exclusive systems that want to be run …","","","","Whether to exit the app when there are no open windows.","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","","","","","","","","Export the current map metadata by scanning the world …","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Clones the mesh.","Clones the Image.","","","","","","","Set how will the sound fade in, given its duration and …","Set how will the sound fade in, given its duration and …","Set how will the sound fade out, given its duration and …","","","","The distance from the camera in world units of the viewing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the field with index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the value of the field with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of fields in the struct.","Returns the number of fields in the tuple struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns a result with a new …","Returns <code>true</code> if the timer has reached its duration at …","","Retrieves the position of the first currently pressed …","Returns the <code>Instant</code> when <code>update</code> was first called, if it …","","Whether or not to fit the canvas element’s size to its …","","Whether or not to fit the canvas element’s size to its …","Flip the sprite along the <code>X</code> axis","","Flip the sprite along the <code>Y</code> axis","","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …uns <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>f</code> on each read-only query item.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>f</code> on each query item.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Forces the evaluation of this lazy value and returns a …","Describes how hard the screen was pressed.","Forces the evaluation of this lazy value and returns a …","","Sets the texture format for textures in the atlas.","","Return the local forward vector (-Z).","Equivalent to <code>-local_z()</code>","The vertical field of view (FOV) in radians.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","","Frees unused assets, unloading them from memory.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …","Returns the argument unchanged.","Convert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create <code>InputMap&lt;A&gt;</code> from <code>HashMap&lt;A, Vec&lt;UserInput&gt;&gt;</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code>","Converts an atomically reference-counted string slice into …","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Create an atomically reference-counted pointer from a …","Copies the string into a newly allocated Arc&lt;OsStr&gt;.","Returns the argument unchanged.","Allocate a reference-counted slice and move <code>v</code>’s items …","","Converts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …","","Converts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the …","Converts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …","Allocate a reference-counted slice and fill it by cloning <code>v</code>…","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Converts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> …","Move a boxed object to a new, reference-counted allocation.","Converts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Reconstruct an <code>Entity</code> previously destructured with …","Load a bytes buffer in a <code>Image</code>, according to type …","Create a new rectangle from its center and half-size.","Create a new rectangle from its center and size.","Creates a 3x3 matrix from two column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","","","","","","","","","","","","","","","","","","","","","Create a new rectangle from two corner points.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Converts a <code>DynamicImage</code> to an <code>Image</code>.","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","","","","Generate a <code>TextureAtlas</code> by splitting a texture into a grid …","","","Create <code>InputMap&lt;A&gt;</code> from iterator with item type …","Takes each element in the <code>Iterator</code> and collects it into an …","","Create a <code>RenderLayers</code> from a list of layers.","Creates an affine transformation matrix from the given 2x2 …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Extracts the translation, rotation, and scale from <code>matrix</code>. …","","","","","","","","","","","","","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates a new entity reference with the specified <code>index</code> …","Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.","Constructs a concrete instance of <code>Self</code> from a reflected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Transform</code>, with <code>rotation</code>. Translation will …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transformation matrix from the given 3D …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …reates a new <code>Transform</code>, with <code>scale</code>. Translation will be 0 …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a new timer with a given duration in seconds.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","Helper to create a <code>FixedTimestepStage</code> with a single child …reates a new <code>TransformBundle</code> from a <code>Transform</code>.","Creates a new <code>SpatialBundle</code> from a <code>Transform</code>.","Creates a new <code>Transform</code>, with <code>translation</code>. Rotation will …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","","","","","","Creates a <code>SingleAxis</code> with the specified <code>axis_type</code> and <code>value</code>…","Creates a <code>SingleAxis</code> with the specified <code>axis_type</code> and <code>value</code>…","Creates a new rotation quaternion from a 4D vector.","","Creates <code>Self</code> using data from the given Worldreates a new <code>Transform</code> at the position <code>(x, y, z)</code>. In 2d, …","Creates a new rotation quaternion.","","","","Get green in sRGB colorspace.","Fetches the Gamepad associated with the entity controlled …","The gamepad this event corresponds to.","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","Generates a <code>VirtualDPad</code> corresponding to the face buttons …","","‘Greater than or equal to’ comparison for two <code>Arc</code>s.","Generate tangents for the mesh using the <code>mikktspace</code> …","Returns the generation of this Entity’s index. The …","","Gets the reference to the result of this lazy value if it …","Returns a position data corresponding to the <code>input_device</code>.","Gets the <code>Entity</code> ID of the parent.","Returns a reference to the timestep info for a given …","Gets the asset for the given handle.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the <code>action</code> mappings","Get a reference to the <code>Window</code> of <code>id</code>.","Returns the read-only query item for the given <code>Entity</code>.","Retrieves a reference to the given <code>entity</code>’s Component of …","Returns a vector of references to any plugins of type <code>T</code> …","Returns the default value for the action stored at the …","Retrieves an immutable untyped reference to the given …","Get a channel to play and control audio in","Returns a shared reference to the component <code>T</code> of the given …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","","","","","","","","","","","","","","","","","","","","","Returns a reference to the timestep info for the currently …","Returns a mut reference to the timestep info for the …","Creates a driver set for the State.","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityMut</code> that exposes read and write …","","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to the i-th child sub-stage of the fixed …","Get access to the i-th child sub-stage of the fixed …","","","Get mut access to the i-th child sub-stage of the fixed …","Get mut access to the i-th child sub-stage of the fixed …","","","Get access to the <code>FixedTimestepStage</code> for the fixed …","Get access to the <code>FixedTimestepStage</code> for the fixed …","","","Get mut access to the <code>FixedTimestepStage</code> for the fixed …","Get mut access to the <code>FixedTimestepStage</code> for the fixed …","","","Gets the overall load state of a group of assets from the …","Gets a strong handle for an asset with the provided id.","Gets a <em>Strong</em> handle pointing to the same asset as the …","Gets the source path of an asset from the provided handle.","Gets an untyped strong handle for an asset with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes and returns the index data of the mesh as bytes. …","Returns the query item for the given <code>Entity</code>, with the …","Which actions were just pressed?","An iterator visiting every just pressed input in arbitrary …","Which actions were just released?","An iterator visiting every just released input in …","Gets the system’s last change tick","","Gets the load state of an asset from the provided handle.","","Returns the read-only query results for the given array of …","Returns the read-only query items for the given array of …","Returns the query results for the given array of <code>Entity</code>.","Returns the query items for the given array of <code>Entity</code>.","For a given <code>descriptor</code> returns a <code>VertexBufferLayout</code> …","Gets the reference to the result of this lazy value if it …","Returns a mut reference to the timestep info for a given …","Get mutable access to the asset for the given handle.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Get a mutable reference to the provided <code>WindowId</code>.","Returns the query item for the given <code>Entity</code>.","Retrieves a mutable reference to the given <code>entity</code>’s …","Returns a mutable reference into the given <code>Arc</code>, if there …","Retrieves a mutable untyped reference to the given <code>entity</code>…","Returns a mutable reference into the given <code>Arc</code>, without …","Gets a reference to the non-send resource of the given …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","Gets mutable access to an asset for the given handle, …","Pushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …","Returns an <code>EntityMut</code> for the given <code>entity</code> (if it exists) …","","","Which actions are currently pressed?","An iterator visiting every pressed input in arbitrary …","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it is …","Get a reference to the primary <code>Window</code>.","Get a mutable reference to the primary <code>Window</code>.","","","","Gets a new <code>ManualEventReader</code>. This will include all events …","Gets a new <code>ManualEventReader</code>. This will ignore all events …","Which actions are currently released?","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it has …","Gets a reference to the resource of the given type if it …","Gets a resource to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a resource to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of type <code>T</code> if it …","Gets a mutable reference to the resource of the given …","Turn the value into a serializable representation","","Returns a reference to the timestep info, assuming you …","Returns a single immutable query result when there is …","Returns a single read-only query item when there is …","Returns a mut reference to the timestep info, assuming you …","Returns a single mutable query result when there is …","Returns a single query item when there is exactly one …","Returns a query result when there is exactly one entity …","Returns a query result when there is exactly one entity …","","Returns a shared reference to the stage identified by <code>label</code>…","Returns a unique, mutable reference to the stage …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","","Returns the <code>TypeInfo</code> of the underlying type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the query item for the given <code>Entity</code>.","Computes and returns the vertex data of the mesh as bytes. …","The global transform of the entity.","","","","","The global transform of the entity.","","The offset of the bounding rect for the element in the …","The size of the bounding rect for the element in the editor","","","","Size of the map in tiles","Greater-than comparison for two <code>Arc</code>s.","Rectangle half-size.","Get the handle of the audio instance.","","","Resolve clashing inputs, removing action presses that have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is set to <code>true</code>, the camera will use an …","Rectangle height (max.y - min.y).","The current logical height of the window’s client area.","The requested logical height of the window’s client area.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> with HSL representation in sRGB colorspace.","New <code>Color</code> with HSL representation in sRGB colorspace.","The ID of the asset as contained within its respective …","Get the window’s <code>WindowId</code>.","Retrieves this <code>World</code>’s unique ID","The <code>ID</code> of the gamepad.","The identifier of the window the cursor has moved on.","","","","","An unique identifier to an Asset.","","","The unique identifier of the finger.","","","Gets an iterator over all <code>HandleId</code>’s in the collection.","","Specifies that this system should opt out of execution …","","","","","","","","Increments the strong reference count on the <code>Arc&lt;T&gt;</code> …","Returns the position in the defining enum of the given …","Return a transiently unique identifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the vertex <code>indices</code> of the mesh.","","Retrieves the vertex <code>indices</code> of the mesh mutably.","","","Constructs an event at the info level.","Constructs a span at the info leveldds an asset loader <code>T</code> using default values.","","Initializes a new <code>Component</code> type and returns the …","Initializes a new <code>Component</code> type and returns the …","Adds an asset loader <code>T</code> for internal assets using default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a non-send <code>Resource</code> with standard starting …","Inserts a new non-send resource with standard starting …","Initialize a <code>Resource</code> with standard starting values by …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Inserts a new resource with standard starting values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the initial size of the atlas in pixels.","","Initialize the system.","","An <code>InputMap</code> component","Insert a mapping between <code>input</code> and <code>action</code>","Insert a reflected <code>Component</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Resource</code> into the world like <code>insert()</code>.","Insert a mapping between <code>input</code> and <code>action</code> at the provided …","Sets the data for a vertex attribute (position, normal …","Inserts children at the given index","Inserts children at the given index","","Insert a mapping between the simultaneous combination of …","Inserts a mapping between the simultaneous combination of …","Insert a mapping between the provided <code>input_action_pairs</code>","Inserts a non-send resource to the app.","Inserts a new non-send resource with the given <code>value</code>.","Pushes a <code>Command</code> to the queue for creating entities, if …","For a given batch of (Entity, Bundle) pairs, either spawns …","Inserts a <code>Resource</code> to the current <code>App</code> and overwrites any …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Inserts a new resource with the given <code>value</code>.","Inserts a new resource with the given <code>value</code>. Will replace …","Create a new rectangle with a constant inset.","Returns the components of an <code>Entity</code> through <code>ComponentInfo</code>.","Install the asset loader for this type.","Install the asset loader for this type.","","","","","","","The <code>Instant</code> that the action was last pressed or released","","Build a new rectangle formed of the intersection of this …","Determine if a <code>RenderLayers</code> intersects another.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value as a <code>Box&lt;dyn Any&gt;</codereate a conditional system descriptor from a general bevy …","","","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","","","","","","","","","","","","","","","Consumes the <code>Arc</code>, returning the wrapped pointer.","Casts this type to a boxed reflected valueurns this value into its corresponding <code>System</code>.","","Consumes this <code>Lazy</code> returning the stored value.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Used to determine number of IO threads to allocate","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>","Returns true if the trait object wraps an object of type …","If this is set to <code>true</code>, this camera will be rendered to …","Returns <code>true</code> if this value was added after the system last …","","","","Returns true if this component has been added since the …","Returns <code>true</code> if the resource was added after the system …","Returns <code>true</code> if the resource was added after the system …","","Returns <code>true</code> if this value was added or mutably …","","","","Returns true if this component has been changed since the …","Returns <code>true</code> if the resource was added or mutably …","Returns <code>true</code> if the resource was added or mutably …","Checks if there is a channel available for the given key.","Whether the texture format is compressed or uncompressed","Check if the rectangle is empty.","Returns <code>true</code> if there are no stored assets.","Checks if the query is empty for the given <code>World</code>, where …","","Are any input bindings registered at all?","Is the number of buttons in the <code>UserInput</code> 0?","Returns <code>true</code> if there are no query items.","Returns true if there are no events in this collection.","Determines if no events are available to be read without …","Returns true if the system must be run exclusively.","","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Get whether or not the window has focuseturns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Checks if the given position is out of the bounds of the …","Returns <code>true</code> if the clock is currently paused.","Returns <code>true</code> if there is any sound in this channel that is …","Returns <code>true</code> if there is any sound in this channel that is …","Returns <code>true</code> if there is any sound in this channel that is …","Checks if a <code>Plugin</code> has already been added.","","","Returns true if the system is <code>Send</code>.","","Returns <code>true</code> if this is a strong handle.","Returns <code>true</code> if this is a strong handle.","","If the plugin can be meaningfully instantiated several …","","","","","","","","","","","","","","","Whether this entity is visible to something this frame. …","Indicates whether this entity is visible. Hidden values …","Whether this entity is visible in the entity hierarchy, …","","Whether this entity is visible in <em>any</em> view (Cameras, …","","Returns <code>true</code> if this is a weak handle.","Returns <code>true</code> if this is a weak handle.","Returns an iterator over registered <code>Gamepad</code>s in an …","Gets an iterator over all assets in the collection.","Returns an <code>Iterator</code> over the query results for the given …","Returns an iterator over actions with their inputs","An iterator over all registered <code>Window</code>s.","Returns an <code>Iterator</code> over the read-only query items.","An iterator visiting every pressed <code>Touch</code> input in …","Returns an iterator over the entities that had their <code>T</code> …","Iterates over the events this <code>EventReader</code> has not seen …","Get an iterator of the layers.","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Iterates over all possible combinations of <code>K</code> query items …","Iterates over events that happened since the last “update…","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","","Returns an <code>Entity</code> iterator of current entities.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple struct’…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Iterator</code> over the query items, with the actual …","Returns an iterator over all mapped inputs","An iterator visiting every just cancelled <code>Touch</code> input in …","An iterator visiting every just pressed <code>Touch</code> input in …","An iterator visiting every just released <code>Touch</code> input in …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query items generated from an …","Gets a mutable iterator over all assets in the collection.","Returns an <code>Iterator</code> over the query results for the given …","A mutable iterator over all registered <code>Window</code>s.","Returns an <code>Iterator</code> over the query items.","Iterates over all of schedule’s stages and their labels, …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query items.","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","","","","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","","Returns <code>true</code> only on the tick the timer reached its …","Was this <code>action</code> pressed since the last time tick was …","Returns <code>true</code> if the <code>input</code> has just been pressed.","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","","","Was this <code>action</code> released since the last time tick was …","Returns <code>true</code> if the <code>input</code> has just been released.","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","","","Returns the pair of <code>KeyCode</code> values associated with this …","","Assigns a label to the criteria. Must be unique.","Assigns a label to the system; there can be more than one, …","","Add a label","","","","Assigns a label to the criteria. If the given label is …","","","","","","","","","","","","Returns the change tick recording the previous time this …","","","","","Returns the <code>Instant</code> when <code>update</code> was last called, if it …","","Create a new <code>RenderLayers</code> belonging to the given layer.","The layers of the map","","","‘Less than or equal to’ comparison for two <code>Arc</code>s.","Return the local left vector (-X).","Equivalent to <code>-local_x()</code>","The input that represents the left direction in this …","","Creates a <code>DualAxis</code> for the left analogue stick of the …","Gets the number of assets in the collection.","How many textures are in the <code>TextureAtlas</code>","How many input bindings are registered total?","The number of logical inputs that make up the <code>UserInput</code>.","","Determines the number of events available to be read from …","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","","Create a new linear tween with the given duration","Set how long will the sound fade in linearly.","Set how long will the sound fade in linearly.","Set how long will the sound fade out linearly.","Allows the field to do any extra loading that it might …","Allows the field to do any extra loading that it might …","Queues an <code>Asset</code> at the provided relative path for …","","","","","","","","","","","","","","","","Loads assets from the specified folder recursively.","","Queues the <code>Asset</code> at the provided path for loading and …","The transform of the entity.","Get the unit vector in the local <code>X</code> direction.","Get the unit vector in the local <code>Y</code> direction.","Get the unit vector in the local <code>Z</code> direction.","","","The full logical size of this camera’s <code>RenderTarget</code>, …","The rendered logical bounds (minimum, maximum) of the …","The logical size of this camera’s viewport. If the …","Rotates this <code>Transform</code> so that its local negative <code>Z</code> …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Updates and returns this <code>Transform</code> by rotating it so that …","Loop the playing sound, starting from the given position.","Loop the playing sound.","Less-than comparison for two <code>Arc</code>s.","","","Makes a mutable reference into the given <code>Arc</code>.","Makes this handle Strong if it wasn’t already.","","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","","","","","Metadata for the selected map.","","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Iterates through asset references and marks assets with no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum corner point of the rect.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","","","Sets the max size of the atlas in pixels.","","If the number of physical cores is greater than …","Merges the provided <code>InputMap</code> into the <code>InputMap</code> this method …","The core metadata.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","The minimum corner point of the rect.","","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","If the number of physical cores is less than …","Returns <code>true</code> if the timer is repeating.","Get the window’s <code>WindowMode</code>","","","Sets the <code>WindowMode</code>.","Creates a <code>UserInput::Chord</code> from a <code>Modifier</code> and an <code>input</code> …","The monitor to place the window on.","Creates a <code>DualAxis</code> corresponding to horizontal and …","Generates a <code>VirtualDPad</code> corresponding to discretized mouse …","Creates a <code>SingleAxis</code> corresponding to horizontal …","Creates a <code>SingleAxis</code> corresponding to vertical <code>MouseMotion</code> …","Creates a <code>DualAxis</code> corresponding to horizontal and …","Generates a <code>VirtualDPad</code> corresponding to discretized …","Creates a <code>SingleAxis</code> corresponding to horizontal <code>MouseWheel</code>…","Creates a <code>SingleAxis</code> corresponding to vertical <code>MouseWheel</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","Multiplies a quaternion by a scalar value.","Multiplies a quaternion and a 3D vector, returning the …","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Multiplies <code>self</code> with <code>transform</code> component by component, …","Multiplies <code>self</code> with <code>transform</code> component by component, …","Transforms a 2D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","Updates the name of the entity in place.","How many of the provided <code>buttons</code> are found in the <code>UserInput</code>","Returns the system’s name.","","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","","","","","","Returns the name of the field with index <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a position in Normalized Device Coordinates, use the …","Inequality for two <code>Arc</code>s.","The distance from the camera in world units of the viewing …","","","","","","","","","","","","Any axis value lower than this will trigger the input.","Creates a <code>SingleAxis</code> with the <code>axis_type</code> and <code>negative_low</code> …","Creates a new <code>App</code> with some default structure to enable …","Create a new rectangle from two corner points.","Create an empty <code>ConditionSet</code>","Creates a new <code>Name</code> from any string-like type.","Creates a new lazy value with the given initializing …","Returns a new <code>DescendantIter</code>.","Create a new empty <code>FixedTimestepStage</code> with no child stages","Returns a new <code>AncestorIter</code>.","Constructs a new <code>Time</code> instance with a specific startup …","Create a new transitions stage for the given state type","Creates a new <code>Gamepad</code>.","Creates a new timer with a given duration.","Create a new tween with the given duration and easing","Create a new game session","Creates a new <code>GamepadEvent</code>.","Creates a new asset server with the provided asset I/O.","Creates a new <code>GamepadButton</code>.","Creates a new <code>QueryState</code> from a given <code>World</code> and inherits …","Creates a new <code>GamepadAxis</code>.","","Creates a new <code>Window</code>.","","Creates a new <code>InputMap</code> from an iterator of …","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …","Construct a new mesh. You need to provide a …","Creates a new empty World","Constructs a new <code>Arc&lt;T&gt;</code>.","Creates a new image from raw binary data and the …","Create a custom implementation of <code>ReflectComponent</code>.","Create a custom implementation of <code>ReflectResource</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","","Creates a new <code>Archetype</code>.","Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …","Create a new <code>TextureAtlas</code> that has a texture, but does not …","Creates a new image from raw binary data and the …","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …","","Constructs a new <code>Arc</code> with uninitialized contents.","Constructs a new atomically reference-counted slice with …","Create an orthographic projection camera with a custom <code>Z</code> …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new atomically reference-counted slice with …","","","","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Create a new <code>RenderLayers</code> that belongs to no layers.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The origin of the ray.","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Same as <code>Self::pop</code>, but if there is already a next state, …","Same as <code>Self::push</code>, but if there is already a next state, …","Same as <code>Self::replace</code>, but if there is already a next …","Same as <code>Self::restart</code>, but if there is already a scheduled …","Same as <code>Self::set</code>, but if there is already a next state, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs <code>func</code> on each query result in parallel.","Runs <code>f</code> on each read-only query item in parallel.","Runs <code>func</code> on each query result in parallel.","Runs <code>f</code> on each read-only query item in parallel.","Runs <code>func</code> on each query result in parallel.","","","Topologically sorted parallel systems.","","","Parent entity to add the child to","","","","Returns the parent entity of this <code>ChildBuilder</code>","Returns the parent entity of this <code>WorldChildBuilder</code>","","","","","","","","","Partial comparison for two <code>Arc</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause all audio","Stops the clock, preventing it from advancing until …","Pauses the Timer. Disables the ticking of the timer.","Pause all audio","Pause all audio","Pause the audio instance with the given easing","Builder method for starting in a paused state","Returns <code>true</code> if the timer is paused.","","","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Marker that stores the type of action to toggle","","The phase of the touch input.","The current mouse position, in physical pixels.","","The window’s client area height in physical pixels.","","The full physical size of this camera’s <code>RenderTarget</code>, …","The rendered physical bounds (minimum, maximum) of the …","The physical size of this camera’s viewport. If the …","The window’s client area width in physical pixels.","","","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","","Constructs a new run criteria that will retrieve the …","Play audio","","Play audio","","The player selections.","","","","Same as <code>Self::set</code>, but does a pop operation instead of a …","","","Get the playback position in seconds","The window’s client position in physical pixels.","The position of the cursor, in window coordinates.","","","The position on the screen that the window will be placed …","The position of the finger on the touchscreen.","Any axis value higher than this will trigger the input.","Creates a <code>SingleAxis</code> with the <code>axis_type</code> and <code>positive_low</code> …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Converts the extracted mesh a into <code>GpuMesh</code>.","Converts the extracted image into a <code>GpuImage</code>.","Get the window’s <code>PresentMode</code>.","","Controls when a frame is presented to the screen. The …","Press the <code>action</code>","Registers a press for the given <code>input</code>.","Is the provided <code>user_input</code> pressed?","","Is this <code>action</code> currently pressed?","Returns <code>true</code> if the <code>input</code> has been pressed.","Is at least one of the corresponding inputs for <code>action</code> …","","","","Is the provided <code>user_input</code> pressed for the provided <code>Gamepad</code>…","","","The <code>Duration</code> for which the action was last held or released","Get a reference to the primary <code>Window</code>.","Get a mutable reference to the primary <code>Window</code>.","Returns the topology of the mesh.","","Cameras with a lower priority will be rendered before …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","","","The projection matrix computed using this camera’s …","","","","","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …","Same as <code>Self::set</code>, but does a push operation instead of a …","Pushes children to the back of the builder’s children","Pushes children to the back of the builder’s children","","","","","Returns <code>QueryState</code> for the given <code>WorldQuery</code>, which is used …","Returns <code>QueryState</code> for the given filtered <code>WorldQuery</code>, …","","Get red in sRGB colorspace.","Get an upper bound of the radius from the given <code>extents</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much real time has elapsed since the last …","","Returns how much real time has elapsed since the last …","","Returns how much real time has elapsed since the last …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much real time has elapsed since <code>startup</code>, as …","","Returns how much real time has elapsed since <code>startup</code>, as …","","Returns how much real time has elapsed since <code>startup</code>, as …","","Returns how much real time has elapsed since <code>startup</code> modulo","","Returns how much real time has elapsed since <code>startup</code> modulo","","Returns how much real time has elapsed since <code>startup</code> modulo","","Get the <code>RawHandleWrapper</code> corresponding to this window if …","","Returns the raw inputs that make up this <code>UserInput</code>","","","","","","","","","","","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","An optional rectangle representing the region of the sprite…","","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","","Returns a hash of the value (which includes the type).","","","","","","","","","","","","","Returns a mutable enumeration of “kinds” of type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","","","","","","","","","","","","","","","","","Returns an owned enumeration of “kinds” of type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a “partial equality” comparison result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enumeration of “kinds” of type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","","","Registers the type <code>T</code> in the <code>TypeRegistry</code> resource, adding …","Adds the type data <code>D</code> to type <code>T</code> in the <code>TypeRegistry</code> …","Changes the <code>size</code>, asserting that the total number of data …","Takes a 2D image containing vertically stacked images of …","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the speed the clock advances relative to your …","","Returns the speed the clock advances relative to your …","Release the <code>action</code>","Registers a release for the given <code>input</code>.","Releases all actions","Registers a release for all currently pressed inputs.","Releases the specified <code>user_input</code> directly","","","Releases the specified <code>user_input</code> directly, using the …","","","Is this <code>action</code> currently released?","Force an <code>Asset</code> to be reloaded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the remaining time using Duration","Returns the remaining time in seconds","Removes the position data of the <code>input_device</code>, returning …","Removes an asset for the given handle.","Removes the input for the <code>action</code>, if it exists","","Removes this <code>Component</code> type from the entity. Does nothing …","Removes this <code>Resource</code> type from the world. Does nothing if …","Removes the input for the <code>action</code> at the provided index","Removes the data for a vertex attribute","Remove the channel behind the given key","Removes the given children","Removes the given children","","","Removes the parent of this entity.","Pushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …","Removes the resource of a given type and returns it, if it …","Removes the resource of a given type, if it exists. …","Safety","Returns an iterator of entities that had components of …","","Returns an iterator of entities that had components with …","Schedule a state change that replaces the full stack with …","Logs execution order ambiguities between systems.","Returns <code>true</code> if the underlying value represents a value of …","The requested window client area height in logical pixels …","","The requested window client area width in logical pixels …","","Reserves capacity for at least additional more elements to …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","Clears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …","Clears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …","Clears all user input streams, resetting them to their …","","","Get whether or not the window is resizable.","","Sets whether the window is resizable.","Resizes the image to the new size, by removing information …","The window’s client resize constraint in logical pixels.","","Sets minimum and maximum resize limits.","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Temporarily removes the requested resource from this <code>World</code>…","","","Schedule a state change that restarts the active state. …","Restore the world state","Resume all audio","Resume all audio","Resume all audio","Resume the audio instance with the given easing","Reverse the playing sound.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","Return the local right vector (X).","Equivalent to <code>local_x()</code>","The input that represents the right direction in this …","","Creates a <code>DualAxis</code> for the right analogue stick of the …","Rotates this <code>Transform</code> by the given rotation.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Rotates this <code>Transform</code> around a <code>point</code> in space.","Rotates this <code>Transform</code> around the given <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> by the given <code>rotation</code>.","Rotates this <code>Transform</code> around its local <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> around its local <code>X</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Y</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Z</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around the <code>X</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Y</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Z</code> axis by <code>angle</code> (in …","Rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Runs the stage; this happens once per update. Implementors …","","Starts the application by calling the app’s runner …","","","","Runs the system with the given input in the world.","","","","","The base run condition; other methods impld in terms of …","(provided so users don’t have to type <code>.into_conditional()</code>…","Add a condition to this set, to be applied to all systems","Helper: add a condition, but flip its result","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition, but flip its result","Helper: add a condition to run if a resource was added","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource was added","Helper: add a condition to run if a resource equals the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource equals the …","Helper: add a condition to run if a resource of a given …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource of a given …","Helper: add a condition to run if a resource was removed","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource was removed","Helper: run in a specific Bevy state (checks the <code>State&lt;T&gt;</code> …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run in a specific Bevy state (checks the <code>State&lt;T&gt;</code> …","Helper: run in a specific state (checks the <code>CurrentState</code> …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run in a specific state (checks the <code>CurrentState</code> …","Helper: run when not in a specific Bevy state (checks the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run when not in a specific Bevy state (checks the …","Helper: run when not in a specific state (checks the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run when not in a specific state (checks the …","Helper: add a condition to run if there are events of the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if there are events of the …","Executes each <code>Stage</code> contained in the schedule, one at a …","Helper: add a condition to run if a resource does not …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource does not …","Helper: add a condition to run if a resource of a given …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource of a given …","Runs the system with the given input in the world. Unlike …","","The runner function is primarily responsible for managing …","The <code>ImageSampler</code> to use during rendering.","The number of samples to run for Multi-Sample …","Scale of the entity.","","","The ratio of physical pixels to logical pixels","Returns the scale factor for the <code>Window</code> of <code>id</code>, or <code>1.0</code> if …","The scale factor set with <code>set_scale_factor_override</code>.","","Overrides the window’s ratio of physical pixels to …","","A container of <code>Stage</code>s set to be run in a linear order.","","","Moves the playback position by the specified amount of …","Sets the playback position to the specified time in …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","“Sends” an <code>event</code> by writing it to the current event …","Sends an <code>event</code>. <code>EventReader</code>s can then read the event. See …","","Sends the default value of the event. Useful when the …","Sends the default value of the event. Useful when the …","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","Send the specified <code>user_input</code> directly","","","Send the specified <code>user_input</code> directly, using the …","","","Returns a serializable version of the value.","Serialize this value into the given Serde serializer.","Serialize this value into the given Serde serializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a version of the plugin intended to run on the …","","Performs a type-checked assignment of a reflected value to …","","Sets the value of the given <code>Plugin</code>, if it exists","","Sets the entity’s name.","","Sets the position data of the <code>input_device</code> to <code>position_data</code>…","","","","","","","","","","","Add/modify the asset pointed to by the given handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule a state change that replaces the active state …","","","","","","","","","","","","","","Set alpha.","Manually sets the <code>ActionData</code> of the corresponding <code>action</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set blue in sRGB colorspace.","Flags this value as having been changed.","","","","Set whether and how the cursor is grabbed.","Set the <code>CursorIcon</code>","Set the cursor’s position","Set whether or not the cursor is visible.","Set whether or not decorations are enabled.","Sets the duration of the timer.","Sets the elapsed time of the timer without any other …","Add a custom stage to execute for the given state","Add a custom stage to execute for the given state","","Provide the stage to run when entering the given state","","","Add a custom stage to execute for the given state","Add a custom stage to execute for the given state","","Provide the stage to run when exiting the given state","","Set green in sRGB colorspace.","Assigns a particular <code>Gamepad</code> to the entity controlled by …","","Sets the vertex indices of the mesh. They describe how …","Sets the system’s last change tick","","Manually sets the change tick recording the previous time …","","","","Set whether or not the window is maximized.","Set the game metadata.","Sets the window to minimized or back.","Sets whether the timer is repeating or not.","Set the window’s <code>WindowMode</code>","","Set panning","Set panning","Set panning","Sets the panning of the sound","Sets the parent of this entity.","Set playback rate","Set playback rate","Set playback rate","Sets the playback rate of the sound.","Sets the <code>position</code> of the window on the selected <code>monitor</code> in …","Set the window’s <code>PresentMode</code>.","Set red in sRGB colorspace.","Enable EXPERIMENTAL “rate locking” algorithm","Sets the speed the clock advances relative to your system …","Sets the speed the clock advances relative to your system …","Set whether or not the window is resizable.","Modifies the minimum and maximum window bounds for …","Request the OS to resize the window such the client area …","","","Sets the function that will be called when the app is run.","Override the os-reported scaling factor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the window’s title.","Add/modify the asset pointed to by the given handle.","Sets <code>is_visible_in_view</code> to <code>true</code>. This is not reversible …","Set the volume","Set the volume","Set the volume","Set the volume of the audio instance","Sets the modulus used to calculate <code>elapsed_wrapped</code> and …","","Generation for some primitive shape meshes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Show the element name above the bounding rect in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shrinks the capacity of the asset map as much as possible.","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Panicking version of [<code>get_single</code>]","Returns a single immutable query result when there is …","","Returns a single read-only query item when there is …","Panicking version of [<code>get_single_mut</code>]","Returns a single mutable query result when there is …","Returns a single query item when there is exactly one …","","Rectangle size.","","Returns the size of a 2D image.","","","Performs a spherical linear interpolation between <code>self</code> and …","","","","Snapshot the world state","The Kira sound making up this <code>AudioSource</code>","The maximum number of sounds that can be playing at a time.","","","","","","Spawns an entity with the given bundle and inserts it into …","Spawns an entity with the given bundle and inserts it into …","Pushes a <code>Command</code> to the queue for creating a new entity …","Spawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …","Pushes a <code>Command</code> to the queue for creating entities with a …","Spawns a batch of entities with the same component Bundle …","Spawns an entity with the given bundle and inserts it into …","Spawns an entity with the given bundle and inserts it into …","","Spawns an <code>Entity</code> with no components and inserts it into …","Spawns an <code>Entity</code> with no components and inserts it into …","Pushes a <code>Command</code> to the queue for creating a new empty …","Spawns a new <code>Entity</code> and returns a corresponding <code>EntityMut</code>, …","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","The specific sprite from the texture atlas to be drawn","","","Fetches the <code>Stage</code> of type <code>T</code> marked with <code>label</code> from the …","Fetches the <code>Stage</code> of type <code>T</code> marked with <code>label</code>, then …","","","","","","Start the sound from the given position in seconds.","Returns the <code>Instant</code> the clock was created.","","Get state for a playback instance.","Get the playback state of the audio instance","Get state for a playback instance.","Get state for a playback instance.","Pause the audio instance with the given easing","","","","","","","","Creates a <code>FixedTimestep</code> that ticks once every <code>step</code> seconds.","","Creates a <code>FixedTimestep</code> that ticks once every <code>rate</code> times …","Stop all audio","Stop all audio","Stop all audio","Stop the audio instance with the given easing","","","Retrieves this world’s Storages collection","","Gets the number of strong (<code>Arc</code>) pointers to this …","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the child at <code>a_index</code> with the child at <code>b_index</code>.","Creates a <code>SingleAxis</code> with both <code>positive_low</code> and …","Creates a <code>DualAxis</code> with both <code>positive_low</code> and <code>negative_low</code> …","A collection of common adapters for piping the result of a …","","","","Downcasts the value to type <code>T</code>, unboxing and consuming the …","The “target” that this camera will render to.","Options for the <code>TaskPool</code> created at application start.","","","","The handle to the texture in which the sprites are stored","A handle to the texture atlas that holds the sprite images","","","","The specific areas of the atlas where each texture can be …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","Advances the time for all actions","","","","","","The size of the tiles in pixels","","","","Returns the number of times a repeating timer finished …","","Get the window’s title.","","Sets the title that displays on the window top bar, on the …","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Convert to a form convenient for passing outside of rust.","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Converts a physical size in this <code>Camera</code> to a logical size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns another <code>Query</code> from this that fetches the read-only …xtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggle the visibility.","","","","Constructs an event at the trace level.","Constructs a span at the trace level.","","Data pertaining to how the sprite is drawn on the screen","","","The transform of the entity.","Transforms the given <code>point</code>, applying shear, scale, …","Transforms the given <code>point</code>, applying scale, rotation and …","Transforms the given 2D vector as a point.","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code> as 3D point.","Rotates the given 2D vector.","Transforms the give 3D vector as a direction.","Transforms the give <code>Vec3A</code> as 3D vector.","","Translates this <code>Transform</code> around a <code>point</code> in space.","Get the translation as a <code>Vec3</code>.","Position of the entity. In 2d, the last value of the <code>Vec3</code> …","Mutably access the internal translation.","Get the translation as a <code>Vec3A</code>.","Sets whether the background of the window should be …","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …onvert a <code>Image</code> to a <code>DynamicImage</code>. Usefull for editing …","Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …","Constructs a new <code>Arc</code> with uninitialized contents, …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …","Returns the inner value, if the <code>Arc</code> has exactly one strong …eturns the [<code>TypeId</code>] used to differentiate labels.","Returns the [<code>TypeId</code>] used to differentiate labels.","Returns the [<code>TypeId</code>] used to differentiate labels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of the underlying type.","","","","","","","","","","","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","","","","","","","","","","","","","Returns the type name of this value’s type.","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","","","","","","","Returns the type name of this value’s type.","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","","","","","","","","","","","","","","","","","","","","","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Converts this handle into a typed <code>Handle</code> of an <code>Asset</code> <code>T</code>.","Create a weak typed <code>Handle</code> from this handle.","","","","","","","","","","","","","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","Resumes the clock if paused.","Unpauses the Timer. Resumes the ticking of the timer.","If we have the only reference to <code>T</code> then unwrap it. …","Return the local up vector (Y).","Equivalent to <code>local_y()</code>","The input that represents the up direction in this virtual …dvances the execution of the <code>Schedule</code> by one cycle.","Updates the internal time measurements.","Updates the <code>ActionState</code> based on a vector of <code>ActionData</code>, …","","","","Swaps the event buffers and clears the oldest event …","","","Update the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a query for the given <code>World</code>, checks if the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provide a closure to update the game inputs.","","A system that calls <code>Events::update</code> once per frame.","Updates time with a specified <code>Instant</code>.","","Get the value associated with the corresponding <code>action</code>","","","","The target value for this input, used for input mocking.","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over the possible actions in the order they were …","","","","If set, this camera will render to the given <code>Viewport</code> …","Returns a ray originating from the camera, that passes …","User indication of whether an entity is visible","User indication of whether an entity is visible","The visibility of the entity.","The visibility of the entityonstructs an event at the warn level.","Constructs a span at the warn level.","Generates a <code>VirtualDPad</code> corresponding to the <code>WASD</code> keyboard …","Whether to watch for changes in asset files. Requires the …","Creates a weak handle into an Asset identified by <code>id</code>.","Create a weak, untyped handle into an Asset identified by …","Gets the number of <code>Weak</code> pointers to this allocation.","Creates a weak untyped handle with an arbitrary id.","Returns the actions that are currently pressed, and the …","Rectangle width (max.x - min.x).","The current logical width of the window’s client area.","The requested logical width of the window’s client area.","","","","Add the given layer.","Creates a new asset server with a boxed asset I/O.","Creates a <code>ChildBuilder</code> with the given children built in …","Creates a <code>WorldChildBuilder</code> with the given children built …","","Returns this <code>SingleAxis</code> with the deadzone set to the …","Returns this <code>DualAxis</code> with the deadzone set to the …","Set an easing for the tween","Builder version of <code>set_enter_stage</code>","Builder version of <code>add_enter_system</code>","Builder version of <code>add_enter_system_set</code>","Builder version of <code>set_exit_stage</code>","Builder version of <code>add_exit_system</code>","Builder version of <code>add_exit_system_set</code>","","Sets the label for the timestep. Setting a label allows a …","Create a configuration that forces using the given number …","Set the panning of the sound.","Set the playback rate of the sound.","Builder-style method for [<code>set_rate_lock</code>]","Returns this <code>Transform</code> with a new rotation.","Assigns a run criteria to the system. Can be a new …","","","","Returns this <code>Transform</code> with a new scale.","Builder method for adding a child stage","Similar to <code>add_stage</code>, but it also returns itself.","Similar to <code>add_stage_after</code>, but it also returns itself.","Similar to <code>add_stage_before</code>, but it also returns itself.","Add the first system, converting into a <code>ConditionSystemSet</code>","","","Similar to <code>add_system_to_stage</code>, but it also returns itself.","","","Returns this <code>Transform</code> with a new translation.","Set the volume of the sound.","Removes the given rendering layer.","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","","","","","","","","Given a position in world space, use the camera’s …","Given a position in world space, use the camera to compute …","Returns the modulus used to calculate <code>elapsed_wrapped</code> and …","","","","","","","","","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he axis representing horizontal movementeturns the vector part of the quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The axis representing vertical movementhe delay after throwing the mine, before it becomes armed …","","","","","","The grenade atlas","","","","","","","","The grenade atlas","","","","The default and most-likely to ocurr number of fish in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ammount greater or less than the base number of fish …","","","The animation frames for when the snail is crawling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time in seconds before a grenade explodes","The time in seconds before a grenade explodes","","","","","","","","","","The animation frames for when the snail is fleeing into …","","","","","","","","","","The <code>crawl_frames</code> indexes in which to move the snail","","","","","The distance that the fish wish to stay within the center …","","","","","","","","","","","","The distance from the spawn point on each axis that the …","","","","","","","","","","","","How long a crab has to be away from it’s spawn point …","","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","The tile collision kind","Whether or not to move the layer down. If false, move the …","The entity to move.","The entity to delete.","The handle to the element that is being spawned.","The handle to the tilemap to use or <code>None</code> to clear the …","The name of the layer.","The map layer index to spawn the element on.","The index of the layer to rename.","","The layer to move","The layer index of the layer to update.","The layer index of the layer to update","The new name of the layer.","","The amount to move the entity.","The position of the tile to set","The index in the tilemap to set the tile, or <code>None</code> to …","The translation to spawn the element with.","","","","","","Current playback position in seconds","Current playback position in seconds","Current playback position in seconds","Current playback position in seconds","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","The requested resource is already borrowed.","Component that may be added to entities with an <code>AtlasSprite</code>…","Component that may be added to an <code>AtlasSprite</code> to control …","A path to an asset.","Trait for asset providers.","A mutable borrow of an <code>AssetProvider</code>.","A borrow of an <code>AssetProvider</code>.","A resource that may be used to access <code>AssetProvider</code>s for …","The type of the <code>AssetProviders</code> resource.","An atlas image asset type, contains no data, but …","An animated sprite component.","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","A handle to a resource from a <code>Resources</code> collection.","An audio event that may be sent to the <code>AudioEvents</code> …","Resource containing the audio event queue.","The audio source asset type, contains no data, but …","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","Resource that contains a bevy world.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","","Makes an entity behave like a camera.","Component for an entity with camera shake.","Queue that can be used to send camera trauma events.","Resource for controlling the clear color.","Color type.","A resource containing the <code>Commands</code> command queue.","A <code>SystemParam</code> that can be used to schedule systems that …","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","A <code>StageLabel</code> for the 5 core stages.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","Holds a list of alive entities.","Iterator over entities returned by <code>Entities::iter_with</code>.","An entity index.","Iterator over entities using the provided bitset.","Euler rotation sequences.","All false.","All false.","The first stage","This is a resource that stores the game’s fixed frame …","Creates an instance of the type this trait is implemented …","","","A typed handle to an asset.","Error for hex crate errors","Error type for hex color decoding","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Image asset type, contains no data, but <code>Handle&lt;Image&gt;</code> is …","Helper trait for converting bones types to Bevy types.","Converts a function into a <code>System</code>.","The type of iterator this query item creates","A small ascii byte array stored on the stack and used …","An error that may be caused when creating a <code>Key</code>.","The fifth stage","Error for unexpected length of hex string","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","","The key is not ASCII.","A resource was not initialized in the <code>World</code> but the <code>System</code> …","All ones.","All ones.","All ones.","All ones.","","Run once and stop.","The type of the parameter, ranging over the lifetime of …","A component for rendering a 2D line path, made up of a …","Play a sound.","The fourth stage","The second stage","A quaternion representing an orientation.","A type representing a component-joining entity query.","The number of bits in a Ulid’s random portion","","Helper trait that is auto-implemented for all <code>Clone</code>-able …","Reset when finished.","<code>SystemParam</code> for getting read access to a resource.","Type alias for getting the <code>AssetProviders</code> resource.","<code>SystemParam</code> for getting mutable access to a resource.","A collection of resources.","sRGBA color","Resource providing a noise source for <code>CameraShake</code> entities …","A collection of systems that will be run in order.","A 2D sprite component","Trait for things that may be used to identify a system …","The intermediate state for the parameter, that may be …","A Stopwatch is a struct that track elapsed time when …","Struct used to run a system function using the world.","This variant is for user-defined errors.","Trait used to implement parameters for <code>System</code> functions.","The result of a <code>System</code>’s execution.","Trait for system stages. A stage is a","An ordered collection of <code>SystemStage</code>s.","The number of bits in a Ulid’s time portion","All true.","All true.","A tilemap tile component.","A tilemap layer component.","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","The key is too long.","The main transform component.","Associates a <code>Ulid</code> ID to a Rust type.","Derive macro for the <code>TypeUlid</code> trait.","This happens when two Rust types have the same <code>TypeUlid</code>, …","Implements typed operations on top of a …","Helper trait that is auto-implemented for anything that …","The type’s <code>Ulid</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A Ulid is a unique 128-bit lexicographically sortable …","Faster hash map using <code>FxHashMap</code> and a ULID key.","Trait implemented for asset providers that can return …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","An untyped handle to an asset.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","Helper trait for unwraping each item in an array.","The third stage","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector with SIMD support.","","A 4-dimensional vector with SIMD support.","","","","A custom viewport specification for a <code>Camera</code>.","A unit-length vector pointing along the positive W axis.","","Information about the window the game is running in.","The <code>World</code> is simply a collection of <code>Resources</code>, and …","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","","","","","","","","","Get alpha.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Whether or not the camera is enabled and rendering.","Add an asset provider for a specific asset type.","","Add a system to be run at the end of the stage.","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Add a system to this stage.","","Add a <code>System</code> to the stage with the given label.","Adds trauma to the camera, capping it at 1.0","Advance the time exactly by the given duration.","","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","The collection of animations in this animation bank.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","","","","","","","","","","","","","","","","Modify the iteration bitsetasts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","Returns a raw pointer to the underlying data in this cell.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","The atlas handle.","The texture atlas to use for the layer","Get blue in sRGB colorspace.","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","","","","","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","Shorthand for combining bitsets with bit_or.","","","Read the bitset containing the list of entites with this …","Read the bitset containing the list of entites with this …","Get the bitset representing which entities have this …","Returns the bitset indicating which entity indices have a …","Returns a bitset where each index where the bit is set to …","","","","","","Shorthand for setting bits on the bitset container.","","","","","<code>bool</code> vector mask types. ","This is used create an instance of the system parame, …","Immutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for reading.","","","","","","","","","","","","","","","","","","Borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for read-writing.","","","","","","","","","","","","","","","","","Mutably borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Cell containing the raw pointer to the resource’s data","","The camera will always restore to this position.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Clears the killed entity list.","","","","","","Copies an <code>AtomicRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function that may be called to clone the resource from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","The color of the path.","The sprite’s color tint","The sprite’s color tint","","","","","","","","Stores the world components.","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not the bitset contains the given entity.","Check whether or not a resource is in the store.","Creates a new <code>Entity</code> and returns it.","Creates a bitset big enough to contain the index of each …","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","The current animation.","","","","","Gets the datetime of when this Ulid was created accurate …","","","","","","","","","","","","","","","","The the length of time in seconds for the camera trauma to …","Free-standing, shorter equivalent to <code>Default::default()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","The maximum depth to render (on a scale from 0.0 to 1.0).","The minimum depth to render (on a scale from 0.0 toeturns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An optional function that will be called to drop the …","","Returns the duration of the timer.","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer. Guaranteed to be …","Returns how much time has advanced since <code>startup</code>, as …","","","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns the elapsed time since the last <code>reset</code> of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new <code>AtomicRef</code> for an optional component of the …","Make a new <code>AtomicRefMut</code> for an optional component of the …","Returns <code>true</code> if the timer has reached its duration at …","","","Whether or not the flip the sprite horizontally.","Whether or not the flip the sprite horizontally.","Whether or not to flip the tile horizontally.","Whether or not the flip the sprite vertically.","Whether or not the flip the sprite vertically.","Whether or not to flip tile vertically.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an <code>UntypedComponentStore</code> that is valid for the …","The frames per second to play the animation at.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","The frames in the animation.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from two column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Safety","Creates a new Ulid with the given datetime","Creates a new Ulid with the given datetime and random …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","","","","","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Create a Ulid from separated parts.","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","","","","","","","Create a transform from a rotation.","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a transform from a scale.","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a new timer with a given duration in seconds.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","Creates a Ulid from a Crockford Base32 encoded string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a transform from a translation.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates <code>Self</code> using data from the given <code>World</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","Get green in sRGB colorspace.","Returns the generation of this <code>Entity</code>.","","","","Returns a read-only pointer to the asset for the given …","Get a reference to an asset, if it exists in the store.","","Get an asset, given it’s handle","Get an asset, given it’s handle","Borrow a component in the store, if it exists for the …","Gets an immutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Get a read-only pointer to the component for the given …","Get’s the tile at the given position in the layer, …","Get the components of a certain type","Get a cell containing the resource data pointer for the …","Get a resource handle from the store.","Get the equivalent [<code>bevy_asset::AssetPath</code>] from this Bones …","Get a Bevy weak <code>Handle</code> from from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get the untyped component storage by the component’s UUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get mutable pointers to the component data for multiple …","Get mutable pointers to the component data for multiple …","Get mutable pointers to the component data for multiple …","Returns a mutable-only pointer to the asset for the given …","Get a mutable reference to an asset, if it exists in the …","Returns a mutable reference to the wrapped value.","","Get an asset, given it’s handle","Mutably borrow a component in the store, if it exists for …","Gets a mutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets a mutable reference to the component of <code>Entity</code>.","Get a mutable pointer to the component for the given <code>Entity</code>","Gets a resource handle from the store if it exists.","This is called to produce the intermediate state of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the layer in tiles.","","","","","","","","","","","The height of the camera in in-game pixels.","New <code>Color</code> from sRGB colorspace.","<code>i32</code> vector types. ","The unique identifier for the stage.","Returns a unique identifier for the stage.","","","The unique identifier for the stage.","The tile index in the tilemap texture.","The sprite image handle.","Implements the <code>BitSet</code> trait members for your type through …","Increment the random number, make sure that the ts millis …","Returns the index of this <code>Entity</code>.","","","","","The current frame in the animation.","This is the current index in the animation, with an <code>idx</code> of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize component storage for type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a resource of type <code>T</code> by inserting it’s …","Initialize the contained systems for the given <code>world</code>.","This will be called to give the parameter a chance to …","","","","Initializes the resources required to run this system …","","","","This should be called once to initialize the system, …","Initialize the systems in the stages agains the <code>World</code>.","Insert a component into the store.","Inserts a component for the given <code>Entity</code> index. Returns …","Inserts a component for the given <code>Entity</code> index.","Returns true if the entity already had a component of this …","Insert a new resource","Insert a resource.","Insert a resource.","Insert a new stage, after another existing stage","Insert a new stage, before another existing stage","Install the camera utilities on the given <code>SystemStages</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert the type to a Bevy type.","","","","Consumes the <code>AtomicRefCell</code>, returning the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to the internal, untyped <code>ComponentStore</code>.","Consume <code>Resources</code> and extract the underlying …","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Checks if the <code>Entity</code> is still alive.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Test if the Ulid is nil","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns <code>true</code> if the clock is currently paused.","","","","","","","","Iterate over all components in the store.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","Iterates immutably over all components of this type.","","","","","","","","","","","","","","","Mutably iterate over all components in the store.","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Iterates mutably over all components of this type.","Mutably iterate over all the components in the store that …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterate over the entities and components in the given …","Return an iterator over the provided bitset.","Iterate over all the components in the store that match …","Iterates immutably over the components of this type where …","","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","","","Iterates immutably over the components of this type where …","Iterates over entities using the provided bitset.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Returns <code>true</code> only on the tick the timer reached its …","Create a new const <code>Key</code> parsed at compile time.","Kill an entity.","Returns entities in the killed list.","","The optional sub-asset label","The last animation that was playing.","","Get the layout of the components stored.","","The memory layout of the resource","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","List of indexes into the <code>points</code> vector, for which that …","","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Remove the component info for dead entities.","Make a new <code>AtomicRef</code> for a component of the borrowed data.","Make a new <code>AtomicRefMut</code> for a component of the borrowed …","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum offset angle in radians that the camera shake …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","","The maximum offset position that the camera shake can …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the mode of the timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion and a 3D vector, returning the …","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion by a scalar value.","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a 4D vector.","","The human-readable name for the stage, used for error …","Returns the human-readable name of the label, used in …","","Returns the underlying type name of the system.","","The human-readable name for the stage, used for error …","A best-effort name for the system, for diagnostic purposes.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AtomicRefCell</code> containing <code>value</code>.","Create a new unpaused <code>Stopwatch</code> with no elapsed time.","Creates a new timer with a given duration.","Safety","Constructs a new <code>Time</code> instance with a specific startup …","Creates a new Ulid with the current time (UTC)","Create a new asset path.","Create a new asset handle, from it’s path and label.","Create a new handle from it’s path and label.","Create a arbitrary <code>UntypedComponentStore</code>.","Create a new <code>CameraShake</code> component with the provided …","Creates a new <code>UntypedResource</code> from an instance of a Rust …","Create a <code>Key</code> from a string.","Create a new, empty stage, for the given label.","Create a new <code>AtlasSprite</code> from the given atlas handle.","Create a new tile layer","Creates a new <code>Entity</code> from the provided index and …","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new <code>World</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Create a new <code>UntypedResource</code> from raw <code>UntypedResourceInfo</code>.","","","","","","","","","","The ‘nil Ulid’.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Take this path, treat it as a path relative to <code>base_path</code>, …","","","","","","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","","","","","","","","","","","","","","","","","","","The virtual filesystem path","The <code>AssetPath</code> for the asset.","The unique identifier of the asset this handle represents.","","","","","","","","","","","","","","","","Pauses the stopwatch. Any call to <code>tick</code> while paused will …","Pauses the Timer. Disables the ticking of the timer.","Stops the clock, preventing it from advancing until …","Returns <code>true</code> if the stopwatch is paused.","Returns <code>true</code> if the timer is paused.","","","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","","Play a sound.","The list of points in the path","The physical position to render this viewport to within …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","List of audio events that haven’t been handled by the …","The event queue.","The system queue that will be run at the end of the stage","Get red in sRGB colorspace.","Gets the random section of this ulid","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop the value at <code>ptr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","Returns the remaining time using Duration","Returns the remaining time in seconds","Remove a component from an entity, returning the previous …","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Remove an asset provider.","Removes the component of <code>Entity</code>.","If there is a previous value, <code>true</code> will be returned.","Remove a resource","Whether or not to repeat the animation","Resets the stopwatch. The reset doesn’t affect the …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","Get a resource handle from the store.","","","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","The rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Execute the systems on the given <code>world</code>.","Execute the systems on the given <code>world</code>.","","Runs the system’s function using the provided <code>World</code>","This is run every time the system is executed","Run a system once, assuming any necessary initialization …","Run a system once.","The scale of the entity.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Add an event to the audio event queue.","Send a camera trauma event.","","","","","","","","","","","","","","","","","","","","","","","Set the tile at the given position, to a certain entity.","","","","","","","","","","","","","","","","Set alpha.","Set blue in sRGB colorspace.","Sets the duration of the timer.","Sets the elapsed time of the stopwatch.","Sets the elapsed time of the timer without any other …","Set green in sRGB colorspace.","Sets the mode of the timer.","Set red in sRGB colorspace.","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","The logical size of the window’s client area.","The physical size of the viewport rectangle to render to …","Performs a spherical linear interpolation between <code>self</code> and …","","The speed that the screen is shook.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","The stages in the collection, in the order that they will …","","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","Convert into a <code>System</code>.","","The list of systems in the stage.","The thickness of the line.","Advance the stopwatch by <code>delta</code> seconds. If the stopwatch …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","The size of each tile in the layer.","The vector of tile slots in this layer.","Time functionality for the Bones framework.","The amount of time the current frame has been playing","Returns the number of times a repeating timer finished …","","Gets the timestamp section of this ulid","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Creates a Crockford Base32 encoded string that represents …","","","","","Creates a Crockford Base32 encoded string that represents …ransforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","The position of the entity in the world.","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Value from 0-1 that indicates the intensity of the shake. …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Attempts to immutably borrow the wrapped value, but …","Attempts to mutably borrow the wrapped value, but instead …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the asset provider for the given asset type, if it …","Get the components of a certain type","Gets a resource handle from the store if it exists.","Get the untyped component storage by the component’s UUID","Get the asset provider for the given asset type, if it …","Initialize component storage for type <code>T</code>.","Try to insert a resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Remove an asset provider.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.","<code>u32</code> vector types. ","","","","","","","","","","","","","","","","","","","","","","","","","","Unpauses the stopwatch. Resume the effect of ticking on …","Unpauses the Timer. Resumes the ticking of the timer.","Resumes the clock if paused.","Convert the handle to an <code>UntypedHandle</code>.","Borrow the underlying <code>UntypedResources</code> store.","","","","","Mutably borrow the underlying <code>UntypedResources</code> store.","Unwrap all the items in an array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the internal time measurements.","Updates time with a specified <code>Instant</code>.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","An optional viewport override, allowing you to specify …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>SystemStages</code> collection, initialized with a stage …","Creates a new Ulid using data from the given random number …","Create a new <code>CameraShake</code> component with the provided …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionhe handle to the sound to play.","The volume to play the sound at.","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector with SIMD support.","A 4-dimensional vector with SIMD support.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vectorun once and stop.","Reset when finished.","A Stopwatch is a struct that track elapsed time when …","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","UV space is distributed by how much of the capsule …","An axis-aligned box defined by its minimum and maximum …","A cylinder with hemispheres at the top and bottom","Manner in which UV coordinates are distributed vertically.","A circle in the <code>XY</code> plane","","Upper third of the texture goes to the northern …","A sphere made from a subdivided Icosahedron.","A square on the <code>XZ</code> plane centered at the origin.","A rectangle on the <code>XY</code> plane centered at the origin.","A regular polygon in the <code>XY</code> plane","A torus (donut) shape.","A sphere made of sectors and stacks.","Hemispheres get UV space according to the ratio of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the middle cylinder on the <code>Y</code> axis, excluding the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontally-flip the texture coordinates of the resulting …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of latitudes, distributed by inclination. Must be …","Number of longitudes, or meridians, distributed by azimuth.","","","","","","","","Creates a new box centered at the origin with the supplied …","","Creates a regular polygon in the <code>XY</code> plane","Creates a circle in the <code>XY</code> plane","Radius on the <code>XZ</code> plane.","The radius of the sphere.","Inscribed radius in the <code>XY</code> plane.","Inscribed radius in the <code>XY</code> plane.","","The radius of the sphere.","","","","","","","","","","","","","","","","","","","","","","","","Number of sections in cylinder between hemispheres.","Longitudinal sectors","Number of sides.","","Full width and height of the rectangle.","The total side length of the square.","Latitudinal stacks","The number of subdivisions applied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manner in which UV coordinates are distributed vertically.","The number of vertices used.","","","","","","","","","","","","System adapter that ignores the output of the previous …","Converts a regular function into a system adapter.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","","","A resource containing an in-progress game session.","Helper for creating and stopping game sessions.","","Stage label for the game session stages","Update the game session.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the input to the game session.","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","Helper system to make sure there are two players on the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","Returns the player index of the player if we are in a …","","","Play sounds from the game session.","","","Restart a game session without changing the settings","","","","","","","","Start a game session","Stop a game session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the game session simulation.","","","","","","","","","","Resource containing the font definitions to use for Egui.","","","A UI widget may have multiple instances. We need to ensure …","Resource that stores which ui widgets are adjacent to …","The list of widgets in each direction from another widget","","","Awesome widget system shared by @aevyrie: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These widgets will have the focus change when pressing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Watches for asset events for <code>EguiFont</code> assets and updates …","","","","","","","","","","","","","","Resource containing the bones snapshot.","Bevy resource containing the core debug settings that will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System that renders the debug tools window which can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System to sync the core debug settings with any active …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Resource containing the current position of the mouse …","","The current export of the world’s map metadata, if a map …","","","","","","","","","Information about an egui tileset texture. Used in …","Resource that maps the map tileset paths to their egui …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper to render an egui frame in the center of the screen …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which page of the menu we are on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the background image for the main menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render the main menu UI","","","","","","","","","","","","","","","","","","","Spawns the background image for the main menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the client is waiting for the map to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ping in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which settings tab we are on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of input binding to listen for.","Helper system param to get input events that we are …","","","","","","","","","","","","","","","","","","","","","","Format an InputKind as a user-facing string","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render the sound settings UI","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Transition game to pause state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension trait with helpers for the egui context","Extension trait with helpers for egui responses","Extensions on <code>egui::Ui</code> for custom widgets","","","Clear the UI focus","Set this response to focused if nothing else is focused","","A button rendered with a <code>BorderImageMeta</code>","","","","Set the button border image","","","","","","","","Set whether or not the button focuses itself automatically …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Set the margin. This will be applied on the outside of the …","","Set the minimum size for the button","","","Set a different border to use when the mouse is clicking …","","Set a different border to use when focusing / hovering …","","Set the padding. This will be applied on the inside of the …","","By default, buttons senses clicks. Change this to a …","","Render the button","","","","","","","","","","","","If <code>true</code>, the text will wrap to stay within the max width …","","A 9-patch style bordered frame.","Internal helper struct for rendering the <code>BorderedFrame</code>","","","","","","","","","","If border_only is set to <code>true</code>, then the middle section of …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Set the margin. This will be applied on the outside of the …","","Create a new frame with the given <code>BorderImageMeta</code>","Set the padding. This will be applied on the inside of the …","","","Render the frame","","","","","","","","","","","","","","","","","","","","A <code>bi_channel</code> client.","A <code>bi_channel</code> server.","","","","","","","Create a bi-directional channel with a given request and …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[4,5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6,6],[7,7],[8,8],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[6]]]],[[],[[13,[7]]]],[[],[[13,[8]]]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[3,14],[3,14],[3,14],[3,14],[15],[15],[15],[15],[[6,6],14],[[7,7],14],[[8,8],14],[[4,4],14],[1,14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[],14],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[[6,19],20],[[7,19],20],[[8,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[6],[7],[8],[4],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],0,0,[[]],0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[6,13],[7,13],[8,13],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],0,[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[27,28]],[29,29],[[]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[12],[12],[12],[30],[[29,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[30,31],[[33,[[13,[32]]]]]],[[24,24]],[24],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],5],[[],34],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,[[],1],[[],1],[2],0,[[]],[[]],[[[36,[35]]],[[36,[35]]]],[[]],[[],[[11,[9,10]]]],[[[36,[35]]],[[36,[35]]]],[[37,38]],[[],[[36,[35]]]],[12],[[[36,[35]]]],[12],[[],[[13,[[36,[35]]]]]],[[]],[12],[16,[[13,[17,18]]]],[[[36,[35]],19],20],[[]],[[]],[[]],[[]],[39],[40],[[]],[[41,41],42],[[],12],0,[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[[36,[35]],31,43]],[[44,[45,[35]]],[[36,[35]]]],[[24,24]],[24],[[[36,[35]]],13],[[]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,28]],[47,47],[48,48],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[47,[[25,[45]]]],[[],47],[[],48],[12],[12],[12],[12],[48],[12],[12],[12],[12],[12],[12],[48],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[47,19],20],[[48,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[39],[40],[39],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[[50,[49]],[51,[48]],[51,[47]],[51,[[53,[52]]]],[50,[[55,[54]]]],[50,[[56,[6]]]],[50,[57]]]],[[24,24]],[[24,24]],[24],[24],[[[50,[[55,[54]]]],[50,[[55,[58]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,[[59,60]],[59,1],[[],1],[59,1],[[],1],[2],[59,60],[59,60],[[]],[[]],[59,61],[59,[[11,[60]]]],[[37,38]],[[],59],[12],[12],[[]],[12],[[59,5],[[25,[60]]]],[[59,12],[[25,[60]]]],[[59,12],[[25,[60]]]],[59,12],[[59,5],[[25,[60]]]],[[]],[[]],[[]],[[]],[40],[39],[[]],[5,25],[5,25],[59,62],[[],63],[[],12],[[]],[[[11,[59]]],[[11,[1]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[[11,[59]]],[[11,[60]]]],[[]],[[],14],[59,64],[[59,12],[[25,[5]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[59,66],[[[11,[59]]],67],[[59,60],[[25,[14]]]],[59,68],[[59,[11,[60]]],[[13,[[11,[60]]]]]],[[69,70],71],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],62],[59,5],[[],25],[[]],0,0,0,0,0,[[],1],[[],1],[2],0,[72,72],[72,72],[[]],[[]],[73,73],[[]],[[],[[11,[9,10]]]],[[],72],[[],72],[12],[12],[[]],[12],[[73,19],20],[[]],[74,[[13,[73,75]]]],[74,[[13,[73,75]]]],[[]],[[]],0,[[],[[25,[76]]]],0,[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],0,[[24,24]],[24],0,[[]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[73,74],[[13,[75]]]],[[73,74],[[13,[75]]]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[77,28]],[[],78],[12],[78],[12],[12],[78],[12],[[]],[[]],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],25],[[],25],[[]],[[]],[39],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[79,28]],[80,80],[[]],[[],[[11,[9,10]]]],[[],81],[12],[12],[81],[12],[12],[12],[12],[81],[[],[[13,[80]]]],[[]],[[]],[[]],[12],[12],[12],[3,14],[15],[[80,80],14],[1,14],[[],14],[[80,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[39],[12,[[25,[80]]]],[[],21],[80],[80,12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[24,24]],[24],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[82,28]],0,[[37,38]],0,[[[50,[83]],[50,[[53,[49]]]],[50,[[53,[70]]]],[50,[[53,[84]]]],[50,[[53,[85]]]]],14],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[12],[12],[12],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[86],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[86,14]],[86],[[],[[88,[87]]]],0,[69],[[86,14],14],0,0,0,[[]],[[]],[[]],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,[[],1],[[],1],[2],[[]],[[]],[[89,28]],[12],[12],[[]],[12],[[]],[[]],[[]],[[],90],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[[50,[91]],[93,[[43,[[45,[92]]]]]],[51,[94]],[96,[[95,[92]]]],[50,[[53,[92]]]]]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[83,83],[49,49],[97,97],[98,98],[99,99],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,0,0,0,0,0,[[],83],0,0,0,0,[12],[83],[12],[12],[12],[12],[83],[12],[12],[12],[12],[12],[[],[[13,[49]]]],[[],[[13,[97]]]],[[],[[13,[98]]]],[[],[[13,[99]]]],0,[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],0,0,0,0,[16,[[13,[17,18]]]],0,0,0,[[83,19],20],[[49,19],20],[[97,19],20],[[98,19],20],[[99,19],20],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[28],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[],100],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,[[97,31,43]],[[98,31,43]],[[99,31,43]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],0,0,0,0,0,[99,13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],5],[[],34],0,0,[[],101],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[2],[[]],[[]],[12],[12],[[]],[12],[102],[[]],[[]],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[102,31],[[33,[[13,[32]]]]]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[]],0,[[],1],[[],1],[2],[[]],[[]],[103,103],[[]],[[],[[11,[9,10]]]],0,[12],[12],[[],[[13,[103]]]],0,[[]],[12],[[103,19],20],[[]],[[]],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[103,31,43]],0,[[24,24]],[24],[[]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[12],[12],[[],[[13,[104]]]],[[],[[13,[105]]]],[[],[[13,[106]]]],[[]],[[]],[[]],[12],[12],[12],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[[104,19],20],[[105,19],20],[[106,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[105,12],[[88,[80]]]],[[49,107],[[108,[104]]]],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[104,13],[105,13],[106,13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[109],[110],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[111,111],[112,112],[110,110],[113,113],[114,114],[115,115],[116,116],[109,109],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,0,[[118,126],118],0,0,[[],125],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[111]]]],[[],[[13,[112]]]],[[],[[13,[110]]]],[[],[[13,[113]]]],[[],[[13,[114]]]],[[],[[13,[115]]]],[[],[[13,[116]]]],[[],[[13,[109]]]],[[],[[13,[117]]]],[[],[[13,[118]]]],[[],[[13,[119]]]],[[],[[13,[120]]]],[[],[[13,[121]]]],[[],[[13,[122]]]],[[],[[13,[123]]]],[[],[[13,[124]]]],[[],[[13,[125]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,0,0,[[],127],0,[[111,19],20],[[112,19],20],[[110,19],20],[[113,19],20],[[114,19],20],[[115,19],20],[[116,19],20],[[109,19],20],[[117,19],20],[[118,19],20],[[119,19],20],[[120,19],20],[[121,19],20],[[122,19],20],[[123,19],20],[[124,19],20],[[125,19],20],0,0,0,0,0,[118,128],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[39],[114,129],[[115,127],130],0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[111,31,43]],[[112,31,43]],[[110,31,43]],[[113,31,43]],[[114,31,43]],[[115,31,43]],[[116,31,43]],[[109,31,43]],[[118,31,43]],[[119,31,43]],[[120,31,43]],[[121,31,43]],[[122,31,43]],[[123,31,43]],[[124,31,43]],[[125,31,43]],0,0,0,0,0,0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[131,28]],0,0,0,0,[12],[12],[12],[12],[[]],[[]],[12],[12],[[132,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],0,0,0,0,0,0,0,0,0,[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[2],[[]],[[]],[12],[12],[[]],[12],[[]],[[]],[[]],[[],133],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[],[[22,[134]]]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[134,135,136,137,138],[[13,[139,140]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[141,39]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[141,142],0,[12],[12],[12],[12],[143],[12],[12],[12],[12],[12],[12],[143],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[[144,19],20],[[145,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[146,147],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[150,[148,149]]]],0,0,[141,[[25,[12]]]],[[142,144],141],[[],145],0,0,0,[145,43],[141],[[141,151],152],[[145,153,12]],0,[[141,12,146]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[147,60]],[[],1],[147,1],[[],1],[[],1],[[],1],[147,1],[[],1],[[],1],[2],[2],[147,60],[147,60],[12,14],[[147,12,12]],[[]],[[]],[[]],[[]],[147,147],[147,154],[[]],[[],[[11,[9,10]]]],[147,[[11,[60]]]],[[],147],[[],155],[12],[155],[12],[12],[155],[12],[[]],[[]],[12],[12],[3,14],[[147,147],14],[1,14],[[],14],[[147,12],[[25,[60]]]],[147,12],[[147,12],[[25,[60]]]],[[147,19],20],[[155,19],20],[[]],[[]],[156,155],[[]],[[]],[[]],[[]],[39],[40],[39],[40],[12,25],[12,25],[147,62],[[],63],[147,14],[[],12],[[],12],[[]],[[]],[[[11,[147]]],[[11,[1]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[[11,[147]]],[[11,[60]]]],[[]],[[]],[[],14],[[],14],[[],14],[147,157],[147,14],[147,155],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[[24,24]],[24],[147,66],[[[11,[147]]],67],[[147,60],[[25,[14]]]],[147,68],[[147,[11,[60]]],[[13,[[11,[60]]]]]],[[12,14]],[[147,12,12]],[[147,14]],[[147,14]],[[147,155]],[[147,14]],[[147,14]],[147,14],[147,14],[[]],[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],62],[147,5],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[],158],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[159,28]],[107],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[160,19],20],[[160,19],20],[[]],[[]],[[]],[[]],[[]],[161,160],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,107],[[107,5],25],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[162,14],[[],14],[[],14],[[],14],[[],14],[[],14],[107,14],[107],[[[93,[14]],69,[51,[107]]]],0,[163],[107,162],[[107,5]],[160,[[25,[164]]]],[[]],[[]],[[]],[[]],[[]],[[],90],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[107,5],[[13,[25,160]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[107,[[13,[160]]]],[107,[[13,[162,160]]]],[[107,5],[[13,[160]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[166,[165]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[167,127],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[[174,174,127],14],[[168,168,127],14],[[169,169,127],14],[[175,175,127],14],[[176,176,127],14],[[177,177,127],14],[[170,170,127],14],0,0,0,0,[178,179],0,[178,179],0,[53,45],[69],[[180,181]],[[167,167]],[[167,170]],[[174,174]],[[168,127],168],[[168,168],168],[[169,169],169],[[169,127],169],[[175,175]],[[176,176]],[[177,177],177],[[170,170],170],[[170,127],170],[[171,182],171],[[171,171],171],[[172,182],172],[[172,172],172],[[173,173],173],[[173,182],173],[[183,184],183],[[183,183],183],[[185,184],185],[[185,185],185],[[186,184],186],[[186,186],186],[[]],[28,28],[[]],[28,28],[[167,167]],[[167,170]],[[174,174]],[[168,127]],[[168,168]],[[169,127]],[[169,169]],[[175,175]],[[176,176]],[[170,127]],[[170,170]],[[171,171]],[[171,182]],[[172,172]],[[172,182]],[[173,173]],[[173,182]],[[183,183]],[[183,184]],[[185,185]],[[185,184]],[[186,186]],[[186,184]],[[]],[28,28],[28,28],[71],[187],[188,188],[[]],[28,28],[28,28],[189,28],[189,190],[[28,189],28],[[191,189]],[[190,189],190],[192,28],[192,190],[[28,192],28],[[191,192]],[[190,192],190],[28,28],[189,28],[189,190],[[28,189],28],[[191,189]],[[190,189],190],[192,28],[192,190],[[28,192],28],[[191,192]],[[190,192],190],[[193,5],28],[[28,193,5],28],[[194,193,5],28],[[194,193,5],190],[[28,194,193,5],28],[[190,194,193,5],190],[[194,193,5],28],[[194,193,5],190],[[28,194,193,5],28],[[190,194,193,5],190],[5,28],[5,190],[[28,5],28],[[190,5],190],[[5,195],28],[[5,195],190],[[28,5,195],28],[[190,5,195],190],[[5,12,189],28],[[5,12,189],190],[[28,5,12,189],28],[[190,5,12,189],190],[[5,12,192],28],[[5,12,192],190],[[28,5,12,192],28],[[190,5,12,192],190],[196],[[],28],[28,28],[194,28],[194,190],[[28,194],28],[[190,194],190],[194,28],[194,190],[[28,194],28],[[190,194],190],[[175,175],175],[[174,174],174],[[176,176],176],[28,28],[28,28],0,[28,28],[[28,194],28],[197],[[190,194],190],[[28,194,194],28],[[190,194,194],190],[[28,194,194],28],[[190,194,194],190],[[28,194],28],[[28,194,194],28],[[28,194,194],28],[[28,189],28],[[28,192],28],[[28,194,192],28],[[28,194,189],28],[28,28],[[28,194],28],[[28,198,28,199],28],[[28,189],28],[[200,189],200],[[200,201],200],[[28,192],28],[[200,192],200],[[28,194,192],28],[[190,194,192],190],[[28,194,189],28],[[190,194,189],190],[[85,202],12],[[203,[45,[204]],204]],[[]],[[142,39]],[205,206],[207,201],[208,209],[207,201],[[210,211],210],[[192,208],192],0,0,[[],212],[213,14],[214,14],[215,14],[181,216],0,0,[208,209],0,0,[[168,168],127],[[169,169],127],[[177,177],127],0,0,[213,14],[214,14],[215,14],[217,14],[[218,219],14],[217,14],[[218,219],14],[217,14],[169,169],[169],[169,169],[[218,219],14],[60],[[202,60]],[[220,60]],[[205,60]],[[221,60]],[[151,60]],[[222,60]],[[223,60]],[[224,60]],[[225,60]],[[226,60]],[[227,60]],[[228,60]],[[229,60]],[[230,60]],[[45,60]],[[231,60]],[[232,60]],[[178,60]],[[233,60]],[[234,60]],[[235,60]],[[236,60]],[[237,60]],[[85,60]],[[238,60]],[[218,60]],[[239,60]],[[240,60]],[[241,60]],[[242,60]],[[243,60]],[[244,60]],[[245,60]],[[246,60]],[[167,60]],[[71,60]],[[204,60]],[[212,60]],[[247,60]],[[248,60]],[[249,60]],[[250,60]],[[251,39,71,60]],[[252,39,60]],[[213,60]],[[214,60]],[[215,60]],[[174,60]],[[168,60]],[[169,60]],[[175,60]],[[176,60]],[[177,60]],[[170,60]],[[171,60]],[[172,60]],[[173,60]],[[183,60]],[[185,60]],[[186,60]],[39],[[253,39]],[[200,39]],0,[[251,39,71,60]],[[252,39,60]],[[],254],[253,254],0,0,0,[39,255],0,[[],256],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[202,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[220,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[205,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[221,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[151,1],[[],1],[222,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[223,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[224,1],[[],1],[[],1],[[],1],[[],1],[225,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[226,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[227,1],[[],1],[[],1],[[],1],[[],1],[[],1],[228,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[229,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[230,1],[[],1],[45,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[231,1],[[],1],[[],1],[[],1],[[],1],[[],1],[232,1],[178,1],[[],1],[[],1],[233,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[234,1],[[],1],[[],1],[[],1],[235,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[236,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[237,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[85,1],[[],1],[238,1],[218,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[239,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[240,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[241,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[242,1],[[],1],[[],1],[[],1],[[],1],[243,1],[244,1],[[],1],[[],1],[245,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[246,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[167,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[71,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[204,1],[212,1],[[],1],[[],1],[[],1],[247,1],[[],1],[248,1],[[],1],[[],1],[[],1],[[],1],[[],1],[249,1],[[],1],[[],1],[[],1],[250,1],[[],1],[[],1],[[],1],[[],1],[213,1],[[],1],[[],1],[[],1],[[],1],[[],1],[214,1],[[],1],[[],1],[[],1],[[],1],[[],1],[215,1],[[],1],[[],1],[[],1],[174,1],[[],1],[[],1],[168,1],[[],1],[[],1],[169,1],[[],1],[[],1],[175,1],[[],1],[176,1],[[],1],[[],1],[177,1],[[],1],[[],1],[170,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[171,1],[[],1],[172,1],[[],1],[[],1],[[],1],[[],1],[173,1],[[],1],[183,1],[[],1],[[],1],[[],1],[185,1],[[],1],[[],1],[[],1],[[],1],[186,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[202,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[220,1],[[],1],[[],1],[[],1],[205,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[221,1],[[],1],[[],1],[[],1],[151,1],[[],1],[222,1],[[],1],[[],1],[[],1],[[],1],[[],1],[223,1],[[],1],[[],1],[[],1],[[],1],[[],1],[224,1],[[],1],[[],1],[[],1],[[],1],[225,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[226,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[227,1],[[],1],[[],1],[[],1],[[],1],[228,1],[[],1],[[],1],[[],1],[[],1],[229,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[230,1],[[],1],[45,1],[[],1],[[],1],[[],1],[231,1],[[],1],[[],1],[[],1],[232,1],[[],1],[178,1],[233,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[234,1],[[],1],[[],1],[[],1],[235,1],[[],1],[[],1],[[],1],[[],1],[236,1],[[],1],[237,1],[[],1],[[],1],[[],1],[85,1],[[],1],[238,1],[[],1],[218,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[239,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[240,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[241,1],[[],1],[[],1],[[],1],[[],1],[242,1],[[],1],[[],1],[[],1],[[],1],[243,1],[[],1],[244,1],[[],1],[245,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[246,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[167,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[71,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[204,1],[[],1],[212,1],[[],1],[247,1],[[],1],[248,1],[[],1],[[],1],[249,1],[[],1],[[],1],[[],1],[250,1],[[],1],[[],1],[[],1],[213,1],[[],1],[214,1],[[],1],[[],1],[215,1],[[],1],[174,1],[[],1],[168,1],[[],1],[169,1],[[],1],[[],1],[175,1],[[],1],[176,1],[177,1],[[],1],[[],1],[170,1],[[],1],[[],1],[171,1],[[],1],[172,1],[[],1],[[],1],[173,1],[[],1],[183,1],[[],1],[185,1],[186,1],[[],1],[[228,257,258,2,259],[[13,[[260,[228]],261]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[228,2],262],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[175,263],[174,264],[176,265],[168,266],[171,266],[183,266],[169,267],[172,267],[185,267],[170,268],[173,268],[186,268],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[177,269],[[],158],[[],158],[22,270],[[],270],[[],271],[167,167],[167],[168,171],[183,171],[169,172],[185,172],[170,173],[186,173],[[],272],[[],273],[[],274],[167],[167,184],[51],[275],[276],[174],[168],[169],[175],[176],[170],[171],[172],[173],[183],[185],[186],[174],[168],[169],[175],[176],[170],[171],[172],[173],[183],[185],[186],[277,277],[22],[22,182],[[],182],[[],182],[277,277],[220,5],[51],[275],[276],[50],[22],[174],[168],[169],[175],[176],[177],[170],[171],[172],[173],[183],[185],[186],[174],[168],[169],[175],[176],[170],[171],[172],[173],[183],[185],[186],[[],60],[202,60],[220,60],[205,60],[221,60],[151,60],[222,60],[223,60],[224,60],[225,60],[226,60],[227,60],[228,60],[229,60],[230,60],[45,60],[231,60],[232,60],[178,60],[233,60],[234,60],[235,60],[236,60],[237,60],[85,60],[238,60],[218,60],[239,60],[240,60],[241,60],[242,60],[243,60],[244,60],[245,60],[246,60],[167,60],[71,60],[204,60],[212,60],[247,60],[248,60],[249,60],[250,60],[213,60],[214,60],[215,60],[174,60],[168,60],[169,60],[175,60],[176,60],[177,60],[170,60],[171,60],[172,60],[173,60],[183,60],[185,60],[186,60],[[],60],[202,60],[220,60],[205,60],[221,60],[151,60],[222,60],[223,60],[224,60],[225,60],[226,60],[227,60],[228,60],[229,60],[230,60],[45,60],[231,60],[232,60],[178,60],[233,60],[234,60],[235,60],[236,60],[237,60],[85,60],[238,60],[218,60],[239,60],[240,60],[241,60],[242,60],[243,60],[244,60],[245,60],[246,60],[167,60],[71,60],[204,60],[212,60],[247,60],[248,60],[249,60],[250,60],[213,60],[214,60],[215,60],[174,60],[168,60],[169,60],[175,60],[176,60],[177,60],[170,60],[171,60],[172,60],[173,60],[183,60],[185,60],[186,60],[167,167],[167],[167,167],[167,184],[[],270],[[],278],[[],5],[[],5],[[],5],[220,5],[279,5],[280,5],[281,5],[168,183],[171,183],[169,185],[172,185],[170,186],[173,186],[171,168],[183,168],[172,169],[185,169],[172,282],[185,282],[173,170],[186,170],[204,127],0,[[[283,[95]],[51,[53]]]],0,[196,284],0,0,[[[22,[285]]],22],[22,22],0,[[],209],[[],209],0,0,0,[[286,[288,[287]]],[[25,[289]]]],[[286,[288,[287]]],[[25,[289]]]],[286,137],0,[286,137],[[203,14],203],0,0,[178,[[25,[290]]]],0,0,[167,127],[205,169],[221,169],[181,291],0,0,0,[207,201],[208,209],[207,201],[[210,211],210],[[192,208],192],0,[[],209],0,[258,257],[[213,213],213],[[214,214],214],[[215,215],215],[[171,182]],[[171,171]],[[172,172]],[[172,182]],[[173,182]],[[173,173]],[[183,183]],[[183,184]],[[185,184]],[[185,185]],[[186,184]],[[186,186]],[[213,213]],[[214,214]],[[215,215]],[213,184],[214,184],[215,184],[[213,213],213],[[214,214],214],[[215,215],215],[[171,182]],[[171,171]],[[172,182]],[[172,172]],[[173,173]],[[173,182]],[[183,183]],[[183,184]],[[185,184]],[[185,185]],[[186,184]],[[186,186]],[[213,213]],[[214,214]],[[215,215]],[[213,213],213],[[214,214],214],[[215,215],215],[[171,182]],[[171,171]],[[172,182]],[[172,172]],[[173,182]],[[173,173]],[[183,183]],[[183,184]],[[185,184]],[[185,185]],[[186,186]],[[186,184]],[[213,213]],[[214,214]],[[215,215]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[28],[[],292],[293,292],[294,292],[[295,28]],[[296,28]],[[297,28]],[[298,28]],[[299,28]],[[300,28]],[[301,28]],[[302,28]],[[303,28]],[[304,28]],[88,88],[[305,28]],[[[22,[306]],307],[[11,[308,10]]]],[[[22,[309]],307],[[11,[308,10]]]],[[[22,[310]],307],[[11,[308,10]]]],0,[39,311],0,0,[[]],[51],[275],[276],[21,312],[[[22,[313]],314],315],0,0,0,0,0,0,0,[181,[[25,[5]]]],0,0,[45,45],0,[22,[[25,[164]]]],[168,168],[169,169],[170,170],[39,316],0,[202,168],[[181,317]],[39,184],0,0,0,0,0,0,[[318,5],319],0,0,[184],[[253,184]],[39],0,0,0,0,0,0,[219,320],[[168,168,168],168],[[169,169,169],169],[[170,170,170],170],[[171,171,171],171],[[172,172,172],172],[[173,173,173],173],[[183,183,183],183],[[185,185,185],185],[[186,186,186],186],[[168,127,127],168],[[169,127,127],169],[[170,127,127],170],[[168,127],168],[[169,127],169],[[170,127],170],[[168,127],168],[[169,127],169],[[170,127],170],[178,[[25,[290]]]],[178,127],[53],[218],[321],[96],[88],0,0,[39],[88,88],[218,14],[218,14],[322],[39],[323,323],[202,202],[220,220],[324,324],[325,325],[205,205],[326,326],[221,221],[327,327],[279,279],[151,151],[280,280],[281,281],[224,224],[225,225],[328,328],[329,329],[226,226],[56,56],[330,330],[331,331],[332,332],[333,333],[227,227],[334,334],[228,228],[335,335],[229,229],[336,336],[196,196],[337,337],[338,338],[339,339],[230,230],[45,45],[340,340],[231,231],[232,232],[178,178],[233,233],[341,341],[342,342],[234,234],[343,343],[235,235],[344,344],[236,236],[345,345],[237,237],[346,346],[256,256],[85,85],[238,238],[218,218],[347,347],[126,126],[348,348],[349,349],[350,350],[351,351],[239,239],[352,352],[353,353],[88,88],[354,354],[317,317],[240,240],[355,355],[356,356],[320,320],[241,241],[357,357],[242,242],[358,358],[243,243],[244,244],[245,245],[359,359],[360,360],[50,50],[361,361],[362,362],[363,363],[217,217],[246,246],[364,364],[365,365],[366,366],[167,167],[84,84],[367,367],[368,368],[369,369],[370,370],[371,371],[372,372],[286,286],[373,373],[70,70],[374,374],[375,375],[376,376],[377,377],[71,71],[378,378],[22,22],[379,379],[380,380],[204,204],[212,212],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[213,213],[214,214],[215,215],[174,174],[168,168],[169,169],[175,175],[176,176],[177,177],[170,170],[171,171],[172,172],[173,173],[183,183],[185,185],[186,186],[[],61],[[],154],[202,61],[220,61],[205,154],[221,61],[151,61],[222,154],[223,154],[224,61],[225,61],[226,381],[227,381],[228,61],[229,61],[230,154],[45,61],[231,61],[232,381],[178,61],[233,61],[234,61],[235,381],[236,61],[237,61],[85,61],[238,61],[218,61],[239,381],[240,154],[241,381],[242,61],[243,381],[244,61],[245,61],[246,61],[167,381],[212,154],[247,61],[248,61],[249,61],[213,61],[214,61],[215,61],[174,61],[168,61],[169,61],[175,61],[176,61],[170,61],[171,61],[172,61],[173,61],[183,61],[185,61],[186,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,382],382],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[45,340],[[],[[11,[60,10]]]],[202,[[11,[60,10]]]],[220,[[11,[60,10]]]],[205,[[11,[60,10]]]],[221,[[11,[60,10]]]],[151,[[11,[60,10]]]],[222,[[11,[60,10]]]],[223,[[11,[60,10]]]],[224,[[11,[60,10]]]],[225,[[11,[60,10]]]],[226,[[11,[60,10]]]],[227,[[11,[60,10]]]],[228,[[11,[60,10]]]],[229,[[11,[60,10]]]],[230,[[11,[60,10]]]],[45,[[11,[60,10]]]],[231,[[11,[60,10]]]],[232,[[11,[60,10]]]],[178,[[11,[60,10]]]],[233,[[11,[60,10]]]],[234,[[11,[60,10]]]],[235,[[11,[60,10]]]],[236,[[11,[60,10]]]],[237,[[11,[60,10]]]],[85,[[11,[60,10]]]],[238,[[11,[60,10]]]],[218,[[11,[60,10]]]],[239,[[11,[60,10]]]],[240,[[11,[60,10]]]],[241,[[11,[60,10]]]],[242,[[11,[60,10]]]],[243,[[11,[60,10]]]],[244,[[11,[60,10]]]],[245,[[11,[60,10]]]],[246,[[11,[60,10]]]],[167,[[11,[60,10]]]],[71,[[11,[60,10]]]],[204,[[11,[60,10]]]],[212,[[11,[60,10]]]],[247,[[11,[60,10]]]],[248,[[11,[60,10]]]],[249,[[11,[60,10]]]],[250,[[11,[60,10]]]],[213,[[11,[60,10]]]],[214,[[11,[60,10]]]],[215,[[11,[60,10]]]],[174,[[11,[60,10]]]],[168,[[11,[60,10]]]],[169,[[11,[60,10]]]],[175,[[11,[60,10]]]],[176,[[11,[60,10]]]],[177,[[11,[60,10]]]],[170,[[11,[60,10]]]],[171,[[11,[60,10]]]],[172,[[11,[60,10]]]],[173,[[11,[60,10]]]],[183,[[11,[60,10]]]],[185,[[11,[60,10]]]],[186,[[11,[60,10]]]],[45,45],[340,340],[45,340],[181],0,[[220,220],383],[[45,45],383],[[239,239],383],[[240,240],383],[[356,356],383],[[71,71],383],[[22,22],383],[[212,212],383],[[168,168],213],[[169,169],214],[[170,170],384],[[171,171],213],[[172,172],214],[[173,173],215],[[183,183],213],[[185,185],214],[[186,186],215],[[168,168],213],[[169,169],214],[[170,170],384],[[171,171],213],[[172,172],214],[[173,173],215],[[183,183],213],[[185,185],214],[[186,186],215],[[168,168],213],[[169,169],214],[[170,170],384],[[171,171],213],[[172,172],214],[[173,173],215],[[183,183],213],[[185,185],214],[[186,186],215],[[168,168],213],[[169,169],214],[[170,170],384],[[171,171],213],[[172,172],214],[[173,173],215],[[183,183],213],[[185,185],214],[[186,186],215],[[168,168],213],[[169,169],214],[[170,170],384],[[171,171],213],[[172,172],214],[[173,173],215],[[183,183],213],[[185,185],214],[[186,186],215],[[168,168],213],[[169,169],214],[[170,170],384],[[171,171],213],[[172,172],214],[[173,173],215],[[183,183],213],[[185,185],214],[[186,186],215],[[174,12],169],[[175,12],168],[[176,12],170],[[174,12],169],[[175,12],168],[[176,12],170],0,0,0,0,0,0,[[385,187]],0,0,0,[[],254],[253,254],0,[39,[[25,[386]]]],0,[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],0,[39,37],0,0,[286,[[25,[387]]]],[221,206],[286],[205,176],[221,176],[205,221],0,0,0,0,0,0,0,[177,177],[178],[[202,168],14],[[388,224],14],[[53,45],14],[[389,71],14],[[286,[288,[287]]],14],[39,14],[[204,390],[[25,[204]]]],[[251,39,39,71,71]],[[252,39,39]],[286,12],[[318,5],319],[324],[391,167],[391,22],[391,174],[391,168],[391,169],[391,175],[391,176],[391,170],[391,171],[391,172],[391,173],[391,183],[391,185],[391,186],[304,[[11,[284,10]]]],[[169,169],169],[[172,172],172],[[185,185],185],[392,393],[322],0,[178,193],0,[392,393],[22,394],[181,395],0,0,[181,325],0,[181,[[25,[168]]]],[181,14],0,0,0,0,0,[[202,19],[[13,[396]]]],[[224,19],[[13,[396]]]],[19,[[13,[396]]]],[[227,19],[[13,[396]]]],[[228,19],[[13,[396]]]],[[229,19],[[13,[396]]]],[[232,19],[[13,[396]]]],[[234,19],[[13,[396]]]],[[235,19],[[13,[396]]]],[[236,19],[[13,[396]]]],[[85,19],[[13,[396]]]],[[239,19],[[13,[396]]]],[[240,19],[[13,[396]]]],[[241,19],[[13,[396]]]],[[244,19],[[13,[396]]]],[[250,19],[[13,[396]]]],[[213,19],[[13,[396]]]],[[214,19],[[13,[396]]]],[[215,19],[[13,[396]]]],[[174,19],[[13,[396]]]],[[168,19],[[13,[396]]]],[[169,19],[[13,[396]]]],[[175,19],[[13,[396]]]],[[176,19],[[13,[396]]]],[[177,19],[[13,[396]]]],[[170,19],[[13,[396]]]],[[171,19],[[13,[396]]]],[[172,19],[[13,[396]]]],[[173,19],[[13,[396]]]],[[183,19],[[13,[396]]]],[[185,19],[[13,[396]]]],[[186,19],[[13,[396]]]],0,0,[181,14],0,0,[[]],[[]],[[],253],[[],28],[[],295],[[],323],[[],202],[[],296],[[],220],[[],324],[[],205],[[],397],[[],297],[[],298],[[],326],[[],398],[[],221],[[],327],[[],151],[[],299],[[],225],[[],301],[[],328],[[],388],[[],392],[[],226],[[],330],[[],319],[[],318],[[],332],[[],55],[[],333],[[],302],[[],228],[[],303],[[],304],[[],230],[[],45],[[],231],[[],399],[[],178],[[],233],[[],400],[[],237],[[],238],[[],218],[[],203],[[],126],[[],348],[[],349],[[],351],[[],352],[[],88],[[],305],[[],355],[[],401],[[],356],[[],180],[[],402],[[],242],[[],358],[[],243],[[],245],[[],361],[[],362],[[],217],[[],246],[[],365],[[],167],[[],84],[[],367],[[],368],[[],369],[[],370],[[],371],[[],372],[[],39],[[],373],[[],70],[[],374],[[],375],[[],376],[[],321],[[],22],[380,[[11,[60,10]]]],[[],403],[[],204],[[],212],[[],247],[[],248],[[],404],[[],249],[[],250],[[],213],[[],214],[[],215],[[],174],[[],168],[[],169],[[],175],[[],176],[[],177],[[],170],[[],192],[[],190],[[],171],[[],172],[[],173],[[],183],[[],185],[[],186],0,0,0,[[],[[43,[273,10]]]],[[],305],[[],305],0,[151,193],0,[151,127],0,[151,291],0,0,0,[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[220],[12],[12],[12],[397],[12],[12],[12],[326],[12],[12],[51],[12],[12],[12],[275],[12],[12],[276],[12],[12],[12],[12],[12],[12],[222],[12],[12],[12],[12],[223],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[230],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[50],[12],[12],[12],[12],[93],[12],[12],[12],[12],[12],[405],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[373],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[22],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[175],[12],[12],[12],[177],[12],[170],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[397],[12],[12],[326],[12],[12],[51],[12],[12],[12],[275],[12],[12],[12],[276],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[230],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[93],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[373],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[175],[12],[12],[177],[12],[170],[12],[12],[12],[12],[12],[12],[12],[12],[12],[22,5],[[],13],[[],13],[[],[[13,[323]]]],[[],[[13,[202]]]],[[],[[13,[220]]]],[[],[[13,[325]]]],[[],[[13,[205]]]],[[],[[13,[221]]]],[[],[[13,[224]]]],[[],[[13,[225]]]],[[],[[13,[226]]]],[[],[[13,[227]]]],[[],[[13,[335]]]],[[],[[13,[229]]]],[[],[[13,[336]]]],[[],[[13,[337]]]],[[],[[13,[338]]]],[[],[[13,[232]]]],[[],[[13,[178]]]],[[],[[13,[342]]]],[[],[[13,[234]]]],[[],[[13,[343]]]],[[],[[13,[235]]]],[[],[[13,[344]]]],[[],[[13,[236]]]],[[],[[13,[345]]]],[[],[[13,[346]]]],[[],[[13,[256]]]],[[],[[13,[347]]]],[[],[[13,[126]]]],[[],[[13,[348]]]],[[],[[13,[349]]]],[[],[[13,[350]]]],[[],[[13,[351]]]],[[],[[13,[239]]]],[[],[[13,[352]]]],[[],[[13,[353]]]],[[],[[13,[88]]]],[[],[[13,[354]]]],[[],[[13,[317]]]],[[],[[13,[240]]]],[[],[[13,[355]]]],[[],[[13,[356]]]],[356,13],[[],[[13,[320]]]],[[],[[13,[241]]]],[[],[[13,[357]]]],[[],[[13,[358]]]],[[],[[13,[244]]]],[360,[[13,[[11,[60,10]]]]]],[[],[[13,[361]]]],[[],[[13,[362]]]],[[],[[13,[363]]]],[[],[[13,[364]]]],[[],[[13,[365]]]],[[],[[13,[366]]]],[[],[[13,[167]]]],[[],[[13,[84]]]],[[],[[13,[367]]]],[[],[[13,[368]]]],[[],[[13,[370]]]],[[],[[13,[371]]]],[[],[[13,[372]]]],[[],[[13,[70]]]],[[],[[13,[374]]]],[[],[[13,[375]]]],[[],[[13,[376]]]],[[],[[13,[71]]]],[[],[[13,[22]]]],[[],[[13,[250]]]],[[],[[13,[213]]]],[[],[[13,[214]]]],[[],[[13,[215]]]],[[],[[13,[174]]]],[[],[[13,[168]]]],[[],[[13,[169]]]],[[],[[13,[175]]]],[[],[[13,[176]]]],[[],[[13,[177]]]],[[],[[13,[170]]]],[[],[[13,[171]]]],[[],[[13,[172]]]],[[],[[13,[173]]]],[[],[[13,[183]]]],[[],[[13,[185]]]],[[],[[13,[186]]]],[[39,71],14],[[]],[[]],[[39,71]],[174,127],[175,127],[176,127],0,[[205,205],406],[[221,221],406],[[168,168],127],[[169,169],127],[[177,177],406],[[170,170],127],[[168,168],127],[[169,169],127],[[170,170],127],[[168,168],168],[[168,127],168],[[169,169],169],[[169,127],169],[[177,127],177],[[170,170],170],[[170,127],170],[[171,182],171],[[171,171],171],[[172,172],172],[[172,182],172],[[173,173],173],[[173,182],173],[[183,183],183],[[183,184],183],[[185,184],185],[[185,185],185],[[186,184],186],[[186,186],186],[[168,168]],[[168,127]],[[169,169]],[[169,127]],[[170,127]],[[170,170]],[[171,171]],[[171,182]],[[172,172]],[[172,182]],[[173,173]],[[173,182]],[[183,183]],[[183,184]],[[185,184]],[[185,185]],[[186,186]],[[186,184]],[[168,168],127],[[169,169],127],[[177,177],127],[[170,170],127],[[171,171],182],[[172,172],182],[[173,173],182],[[183,183],184],[[185,185],184],[[186,186],184],[[168,168],168],[[169,169],169],[[170,170],170],[[171,171],171],[[172,172],172],[[173,173],173],[[183,183],183],[[185,185],185],[[186,186],186],[205,169],[221,169],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[407,10]]],[[13,[[11,[10]],[11,[407,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[60,10]]],[[13,[[11,[10]],[11,[60,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[195,10]]],[[13,[[11,[10]],[11,[195,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[1]]],[[13,[22,[22,[1]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[407,25],[60,25],[195,25],[[22,26],25],[[[23,[407]]],[[13,[23,[23,[407]]]]]],[[[23,[195]]],[[13,[23,[23,[195]]]]]],[407,25],[60,25],[195,25],[[[22,[1]]],22],[22,408],[[],256],[321,137],[181,137],[12],[12],[12],[12],[12],[12],[409],[12],[12],[12],[12],[410],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[45],[340],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[22],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[[22,382]],0,[286],[225,193],0,0,[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,0,0,[151,193],[225,193],0,[151,127],0,[151,291],0,[151,127],0,[151,291],0,[225,127],[151,193],0,0,0,[[],28],[[22,411],14],[[22,314],14],[[[22,[313]],314,412],14],0,[[]],[[]],[[]],[[]],0,[[22,382]],0,[39,413],0,0,0,[39,413],[[69,71],414],[[39,71],415],0,0,0,[[39,71],416],[[323,323],14],[[202,202],14],[[220,220],14],[[325,325],14],[[205,205],14],[[221,221],14],[[279,279],14],[[280,280],14],[[281,281],14],[[223,223],14],[[224,224],14],[[329,329],14],[[226,226],14],[[56,56],14],[[330,330],14],[[331,331],14],[[227,227],14],[[335,335],14],[[229,229],14],[[336,336],14],[[337,337],14],[[338,338],14],[[45,45],14],[[340,340],14],[[232,232],14],[[178,178],14],[[341,341],14],[[342,342],14],[[234,234],14],[[235,235],14],[[344,344],14],[[236,236],14],[[345,345],14],[[346,346],14],[[256,256],14],[[347,347],14],[[350,350],14],[[239,239],14],[[352,352],14],[[353,353],14],[[88,88],14],[[354,354],14],[[317,317],14],[[240,240],14],[[355,355],14],[[356,356],14],[[320,320],14],[[241,241],14],[[357,357],14],[[244,244],14],[[167,167],14],[[71,71],14],[[22,22],14],[[212,212],14],[[248,248],14],[[250,250],14],[[213,213],14],[[214,214],14],[[215,215],14],[[174,174],14],[[168,168],14],[[169,169],14],[[175,175],14],[[176,176],14],[[177,177],14],[[170,170],14],[[171,171],14],[[172,172],14],[[173,173],14],[[183,183],14],[[185,185],14],[[186,186],14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],0,0,[[22,417]],0,[[22,417],14],0,0,0,0,0,0,0,[200],0,[200],0,[200],0,0,[[22,382]],0,0,[168,168],[169,169],[170,170],0,0,0,0,0,0,0,[142,361],[321],[[168,127],169],[[169,127],170],[[171,182],172],[[172,182],173],[[183,184],185],[[185,184],186],[286],[204],[[],45],[[],231],[[],233],[[],230],[[],249],0,[[409,328],409],[[[410,[418]],328],410],[[[410,[419]],328],410],[243,127],[245,127],[246,127],0,0,[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],[[71,12]],0,[5,[[25,[60]]]],[12,[[25,[60]]]],[[202,5],[[25,[60]]]],[[220,5],[[25,[60]]]],[[205,12],[[25,[60]]]],[[221,5],[[25,[60]]]],[[151,5],[[25,[60]]]],[[222,12],[[25,[60]]]],[[223,12],[[25,[60]]]],[[224,5],[[25,[60]]]],[[225,5],[[25,[60]]]],[[226,5],[[25,[60]]]],[[227,5],[[25,[60]]]],[[228,5],[[25,[60]]]],[[229,5],[[25,[60]]]],[[230,12],[[25,[60]]]],[[45,5],[[25,[60]]]],[[231,5],[[25,[60]]]],[[232,5],[[25,[60]]]],[[178,5],[[25,[60]]]],[[233,5],[[25,[60]]]],[[234,5],[[25,[60]]]],[[235,5],[[25,[60]]]],[[236,5],[[25,[60]]]],[[237,5],[[25,[60]]]],[[85,5],[[25,[60]]]],[[238,5],[[25,[60]]]],[[218,5],[[25,[60]]]],[[239,5],[[25,[60]]]],[[240,12],[[25,[60]]]],[[241,5],[[25,[60]]]],[[242,5],[[25,[60]]]],[[243,5],[[25,[60]]]],[[244,5],[[25,[60]]]],[[245,5],[[25,[60]]]],[[246,5],[[25,[60]]]],[[167,5],[[25,[60]]]],[[212,12],[[25,[60]]]],[[247,5],[[25,[60]]]],[[248,5],[[25,[60]]]],[[249,5],[[25,[60]]]],[[213,5],[[25,[60]]]],[[214,5],[[25,[60]]]],[[215,5],[[25,[60]]]],[[174,5],[[25,[60]]]],[[168,5],[[25,[60]]]],[[169,5],[[25,[60]]]],[[175,5],[[25,[60]]]],[[176,5],[[25,[60]]]],[[170,5],[[25,[60]]]],[[171,5],[[25,[60]]]],[[172,5],[[25,[60]]]],[[173,5],[[25,[60]]]],[[183,5],[[25,[60]]]],[[185,5],[[25,[60]]]],[[186,5],[[25,[60]]]],[12,[[25,[60]]]],[[202,12],[[25,[60]]]],[[220,12],[[25,[60]]]],[[221,12],[[25,[60]]]],[[151,12],[[25,[60]]]],[[224,12],[[25,[60]]]],[[225,12],[[25,[60]]]],[[226,12],[[25,[60]]]],[[227,12],[[25,[60]]]],[[228,12],[[25,[60]]]],[[229,12],[[25,[60]]]],[[45,12],[[25,[60]]]],[[231,12],[[25,[60]]]],[[232,12],[[25,[60]]]],[[178,12],[[25,[60]]]],[[233,12],[[25,[60]]]],[[234,12],[[25,[60]]]],[[235,12],[[25,[60]]]],[[236,12],[[25,[60]]]],[[237,12],[[25,[60]]]],[[85,12],[[25,[60]]]],[[238,12],[[25,[60]]]],[[218,12],[[25,[60]]]],[[239,12],[[25,[60]]]],[[241,12],[[25,[60]]]],[[242,12],[[25,[60]]]],[[243,12],[[25,[60]]]],[[244,12],[[25,[60]]]],[[245,12],[[25,[60]]]],[[246,12],[[25,[60]]]],[[167,12],[[25,[60]]]],[[247,12],[[25,[60]]]],[[248,12],[[25,[60]]]],[[249,12],[[25,[60]]]],[[213,12],[[25,[60]]]],[[214,12],[[25,[60]]]],[[215,12],[[25,[60]]]],[[174,12],[[25,[60]]]],[[168,12],[[25,[60]]]],[[169,12],[[25,[60]]]],[[175,12],[[25,[60]]]],[[176,12],[[25,[60]]]],[[170,12],[[25,[60]]]],[[171,12],[[25,[60]]]],[[172,12],[[25,[60]]]],[[173,12],[[25,[60]]]],[[183,12],[[25,[60]]]],[[185,12],[[25,[60]]]],[[186,12],[[25,[60]]]],[12,[[25,[60]]]],[[202,12],[[25,[60]]]],[[220,12],[[25,[60]]]],[[221,12],[[25,[60]]]],[[151,12],[[25,[60]]]],[[224,12],[[25,[60]]]],[[225,12],[[25,[60]]]],[[226,12],[[25,[60]]]],[[227,12],[[25,[60]]]],[[228,12],[[25,[60]]]],[[229,12],[[25,[60]]]],[[45,12],[[25,[60]]]],[[231,12],[[25,[60]]]],[[232,12],[[25,[60]]]],[[178,12],[[25,[60]]]],[[233,12],[[25,[60]]]],[[234,12],[[25,[60]]]],[[235,12],[[25,[60]]]],[[236,12],[[25,[60]]]],[[237,12],[[25,[60]]]],[[85,12],[[25,[60]]]],[[238,12],[[25,[60]]]],[[218,12],[[25,[60]]]],[[239,12],[[25,[60]]]],[[241,12],[[25,[60]]]],[[242,12],[[25,[60]]]],[[243,12],[[25,[60]]]],[[244,12],[[25,[60]]]],[[245,12],[[25,[60]]]],[[246,12],[[25,[60]]]],[[167,12],[[25,[60]]]],[[247,12],[[25,[60]]]],[[248,12],[[25,[60]]]],[[249,12],[[25,[60]]]],[[213,12],[[25,[60]]]],[[214,12],[[25,[60]]]],[[215,12],[[25,[60]]]],[[174,12],[[25,[60]]]],[[168,12],[[25,[60]]]],[[169,12],[[25,[60]]]],[[175,12],[[25,[60]]]],[[176,12],[[25,[60]]]],[[170,12],[[25,[60]]]],[[171,12],[[25,[60]]]],[[172,12],[[25,[60]]]],[[173,12],[[25,[60]]]],[[183,12],[[25,[60]]]],[[185,12],[[25,[60]]]],[[186,12],[[25,[60]]]],[[],12],[[],12],[202,12],[220,12],[205,12],[221,12],[151,12],[222,12],[223,12],[224,12],[225,12],[226,12],[227,12],[228,12],[229,12],[230,12],[45,12],[231,12],[232,12],[178,12],[233,12],[234,12],[235,12],[236,12],[237,12],[85,12],[238,12],[218,12],[239,12],[240,12],[241,12],[242,12],[243,12],[244,12],[245,12],[246,12],[167,12],[212,12],[247,12],[248,12],[249,12],[213,12],[214,12],[215,12],[174,12],[168,12],[169,12],[175,12],[176,12],[170,12],[171,12],[172,12],[173,12],[183,12],[185,12],[186,12],[5,[[25,[60]]]],[12,[[25,[60]]]],[[202,5],[[25,[60]]]],[[220,5],[[25,[60]]]],[[205,12],[[25,[60]]]],[[221,5],[[25,[60]]]],[[151,5],[[25,[60]]]],[[222,12],[[25,[60]]]],[[223,12],[[25,[60]]]],[[224,5],[[25,[60]]]],[[225,5],[[25,[60]]]],[[226,5],[[25,[60]]]],[[227,5],[[25,[60]]]],[[228,5],[[25,[60]]]],[[229,5],[[25,[60]]]],[[230,12],[[25,[60]]]],[[45,5],[[25,[60]]]],[[231,5],[[25,[60]]]],[[232,5],[[25,[60]]]],[[178,5],[[25,[60]]]],[[233,5],[[25,[60]]]],[[234,5],[[25,[60]]]],[[235,5],[[25,[60]]]],[[236,5],[[25,[60]]]],[[237,5],[[25,[60]]]],[[85,5],[[25,[60]]]],[[238,5],[[25,[60]]]],[[218,5],[[25,[60]]]],[[239,5],[[25,[60]]]],[[240,12],[[25,[60]]]],[[241,5],[[25,[60]]]],[[242,5],[[25,[60]]]],[[243,5],[[25,[60]]]],[[244,5],[[25,[60]]]],[[245,5],[[25,[60]]]],[[246,5],[[25,[60]]]],[[167,5],[[25,[60]]]],[[212,12],[[25,[60]]]],[[247,5],[[25,[60]]]],[[248,5],[[25,[60]]]],[[249,5],[[25,[60]]]],[[213,5],[[25,[60]]]],[[214,5],[[25,[60]]]],[[215,5],[[25,[60]]]],[[174,5],[[25,[60]]]],[[168,5],[[25,[60]]]],[[169,5],[[25,[60]]]],[[175,5],[[25,[60]]]],[[176,5],[[25,[60]]]],[[170,5],[[25,[60]]]],[[171,5],[[25,[60]]]],[[172,5],[[25,[60]]]],[[173,5],[[25,[60]]]],[[183,5],[[25,[60]]]],[[185,5],[[25,[60]]]],[[186,5],[[25,[60]]]],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],[[71,12],14],0,0,[[203,53],[[13,[85,420]]]],[225,14],0,[217,[[25,[168]]]],[151,[[25,[307]]]],0,[181,14],0,0,0,0,0,0,[168,168],[169,169],[170,170],[22],[[28,19],[[13,[396]]]],[[323,19],[[13,[396]]]],[[202,19],[[13,[396]]]],[[95,19],[[13,[396]]]],[[220,19],[[13,[396]]]],[[220,19],[[13,[396]]]],[[325,19],[[13,[396]]]],[[205,19],[[13,[396]]]],[[397,19],[[13,[396]]]],[[51,19],[[13,[396]]]],[[398,19],[[13,[396]]]],[[275,19],[[13,[396]]]],[[276,19],[[13,[396]]]],[[221,19],[[13,[396]]]],[[327,19],[[13,[396]]]],[[279,19],[[13,[396]]]],[[151,19],[[13,[396]]]],[[222,19],[[13,[396]]]],[[280,19],[[13,[396]]]],[[281,19],[[13,[396]]]],[[223,19],[[13,[396]]]],[[421,19],[[13,[396]]]],[[422,19],[[13,[396]]]],[[423,19],[[13,[396]]]],[[424,19],[[13,[396]]]],[[224,19],[[13,[396]]]],[[425,19],[[13,[396]]]],[[426,19],[[13,[396]]]],[[225,19],[[13,[396]]]],[[60,19],[[13,[396]]]],[[329,19],[[13,[396]]]],[[388,19],[[13,[396]]]],[[226,19],[[13,[396]]]],[[56,19],[[13,[396]]]],[[330,19],[[13,[396]]]],[[331,19],[[13,[396]]]],[[427,19],[[13,[396]]]],[[427,19],[[13,[396]]]],[[227,19],[[13,[396]]]],[[228,19],[[13,[396]]]],[[335,19],[[13,[396]]]],[[229,19],[[13,[396]]]],[[336,19],[[13,[396]]]],[[53,19],[[13,[396]]]],[[337,19],[[13,[396]]]],[[338,19],[[13,[396]]]],[[339,19],[[13,[396]]]],[[230,19],[[13,[396]]]],[[45,19],[[13,[396]]]],[[340,19],[[13,[396]]]],[[232,19],[[13,[396]]]],[[178,19],[[13,[396]]]],[[342,19],[[13,[396]]]],[[234,19],[[13,[396]]]],[[343,19],[[13,[396]]]],[[235,19],[[13,[396]]]],[[344,19],[[13,[396]]]],[[277,19],[[13,[396]]]],[[236,19],[[13,[396]]]],[[345,19],[[13,[396]]]],[[237,19],[[13,[396]]]],[[346,19],[[13,[396]]]],[[256,19],[[13,[396]]]],[[85,19],[[13,[396]]]],[[238,19],[[13,[396]]]],[[218,19],[[13,[396]]]],[[181,19],[[13,[396]]]],[[203,19],[[13,[396]]]],[[347,19],[[13,[396]]]],[[195,19],[[13,[396]]]],[[200,19],[[13,[396]]]],[[126,19],[[13,[396]]]],[[348,19],[[13,[396]]]],[[349,19],[[13,[396]]]],[[350,19],[[13,[396]]]],[[351,19],[[13,[396]]]],[[239,19],[[13,[396]]]],[[352,19],[[13,[396]]]],[[353,19],[[13,[396]]]],[[88,19],[[13,[396]]]],[[354,19],[[13,[396]]]],[[317,19],[[13,[396]]]],[[240,19],[[13,[396]]]],[[355,19],[[13,[396]]]],[[356,19],[[13,[396]]]],[[320,19],[[13,[396]]]],[[320,19],[[13,[396]]]],[[180,19],[[13,[396]]]],[[241,19],[[13,[396]]]],[[357,19],[[13,[396]]]],[[242,19],[[13,[396]]]],[[389,19],[[13,[396]]]],[[358,19],[[13,[396]]]],[[243,19],[[13,[396]]]],[[428,19],[[13,[396]]]],[[428,19],[[13,[396]]]],[[428,19],[[13,[396]]]],[[244,19],[[13,[396]]]],[[245,19],[[13,[396]]]],[[50,19],[[13,[396]]]],[[361,19],[[13,[396]]]],[[362,19],[[13,[396]]]],[[93,19],[[13,[396]]]],[[363,19],[[13,[396]]]],[[217,19],[[13,[396]]]],[[246,19],[[13,[396]]]],[[405,19],[[13,[396]]]],[[364,19],[[13,[396]]]],[[365,19],[[13,[396]]]],[[366,19],[[13,[396]]]],[[167,19],[[13,[396]]]],[[84,19],[[13,[396]]]],[[367,19],[[13,[396]]]],[[368,19],[[13,[396]]]],[[369,19],[[13,[396]]]],[[370,19],[[13,[396]]]],[[371,19],[[13,[396]]]],[[372,19],[[13,[396]]]],[[286,19],[[13,[396]]]],[[39,19],[[13,[396]]]],[[373,19],[[13,[396]]]],[[70,19],[[13,[396]]]],[[374,19],[[13,[396]]]],[[375,19],[[13,[396]]]],[[376,19],[[13,[396]]]],[[377,19],[[13,[396]]]],[[71,19],[[13,[396]]]],[[378,19],[[13,[396]]]],[[321,19],[[13,[396]]]],[[22,19],[[13,[396]]]],[[22,19],[[13,[396]]]],[[22,19],[[13,[396]]]],[[379,19],[[13,[396]]]],[[403,19],[[13,[396]]]],[[204,19],[[13,[396]]]],[[212,19],[[13,[396]]]],[[247,19],[[13,[396]]]],[[248,19],[[13,[396]]]],[[404,19],[[13,[396]]]],[[250,19],[[13,[396]]]],[[213,19],[[13,[396]]]],[[213,19],[[13,[396]]]],[[429,19],[[13,[396]]]],[[214,19],[[13,[396]]]],[[214,19],[[13,[396]]]],[[215,19],[[13,[396]]]],[[215,19],[[13,[396]]]],[[322,19],[[13,[396]]]],[[174,19],[[13,[396]]]],[[174,19],[[13,[396]]]],[[168,19],[[13,[396]]]],[[168,19],[[13,[396]]]],[[169,19],[[13,[396]]]],[[169,19],[[13,[396]]]],[[175,19],[[13,[396]]]],[[175,19],[[13,[396]]]],[[176,19],[[13,[396]]]],[[176,19],[[13,[396]]]],[[177,19],[[13,[396]]]],[[177,19],[[13,[396]]]],[[170,19],[[13,[396]]]],[[170,19],[[13,[396]]]],[[190,19],[[13,[396]]]],[[171,19],[[13,[396]]]],[[171,19],[[13,[396]]]],[[172,19],[[13,[396]]]],[[172,19],[[13,[396]]]],[[173,19],[[13,[396]]]],[[173,19],[[13,[396]]]],[[183,19],[[13,[396]]]],[[183,19],[[13,[396]]]],[[185,19],[[13,[396]]]],[[185,19],[[13,[396]]]],[[186,19],[[13,[396]]]],[[186,19],[[13,[396]]]],0,[[277,39]],[[389,430]],[[277,39]],[[389,430]],[[277,39]],[397],0,[397],0,[[203,390],203],0,[205,169],[221,169],0,[168,168],[169,169],[170,170],[[],431],0,[196],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,220],[[]],[90,220],[[]],[[]],[[]],[406,205],[176,205],[432,205],[206,205],[221,205],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[275,276],[[]],[51,276],[205,221],[406,221],[[]],[432,221],[221,327],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[433,329],[433,329],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[434,427],[[]],[[]],[[]],[[]],[[]],[[[45,[204]]],228],[167,228],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,340],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[436,[[43,[320,10]],435]]],88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[241,320],[239,320],[232,320],[256,320],[437,320],[350,320],[345,320],[[]],[357,320],[438,320],[346,320],[439,320],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[245,243],[246,243],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[275,405],[[]],[[]],[[]],[[]],[[],167],[[],167],[170,167],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[440,286],[441,286],[442,286],[443,286],[[]],[444,286],[445,286],[446,286],[447,286],[448,286],[449,286],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[[22,[5]]],22],[5,[[22,[5]]]],[108,22],[450,[[22,[450]]]],[[]],[[[43,[10]]],22],[451,22],[452,[[22,[453]]]],[454],[455,[[22,[450]]]],[453,[[22,[453]]]],[[],22],[90,[[22,[5]]]],[42,[[22,[41]]]],[[[11,[10]]],22],[41,[[22,[41]]]],[[]],[[]],[221,403],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[457,[14,456,456]]],213],[[[458,[14,456]]],213],[[]],[[]],[[[458,[14,456]]],214],[[[457,[14,456,456]]],214],[[]],[[]],[[[458,[14,456]]],215],[[[457,[14,456,456]]],215],[[]],[459,174],[[[462,[127,[461,[[460,[127]]]]]]],174],[[[463,[127,[461,[[460,[127]]]]]]],174],[[[457,[127,456,456]]],174],[[]],[464,174],[[[458,[127,456]]],168],[406,168],[[[465,[127]]],168],[[],168],[[],168],[290,168],[[]],[[[457,[127,456,456]]],168],[432,168],[[[461,[[457,[127,456,456,[466,[127]]]]]]],168],[282,169],[[[457,[127,456,456]]],169],[432,169],[[],169],[[]],[[[465,[127]]],169],[[],169],[[[461,[[457,[127,456,456,[466,[127]]]]]]],169],[[],169],[[[458,[127,456]]],169],[[]],[[[461,[[460,[127]]]]],175],[[[467,[127]]],175],[[[457,[127,456,456]]],175],[[[462,[127,[461,[[468,[127]]]]]]],176],[[]],[206,176],[[[457,[127,456,456]]],176],[[[463,[127,[461,[[468,[127]]]]]]],176],[[[468,[127]]],177],[[[467,[127]]],177],[432,177],[[]],[406,177],[[[461,[[468,[127]]]]],177],[[[465,[127]]],170],[[[461,[[457,[127,456,456,[466,[127]]]]]]],170],[[[458,[127,456]]],170],[[],170],[[],170],[[],170],[167,170],[469,170],[[],170],[[],170],[[],170],[[],170],[470,170],[177,170],[[],170],[[]],[[[457,[127,456,456]]],170],[[]],[210,192],[471,192],[[]],[[[457,[182,456,456]]],171],[[]],[[[458,[182,456]]],171],[472,171],[[],171],[[],171],[[]],[[],172],[[],172],[[],172],[[[458,[182,456]]],172],[[[457,[182,456,456]]],172],[[],173],[[[457,[182,456,456]]],173],[[],173],[[],173],[[]],[[[458,[182,456]]],173],[[],173],[[],173],[[],173],[[[458,[184,456]]],183],[[[457,[184,456,456]]],183],[[]],[[],183],[[],183],[[],185],[[]],[[],185],[[[458,[184,456]]],185],[[],185],[[[457,[184,456,456]]],185],[[],186],[[],186],[[],186],[[]],[[],186],[[[457,[184,456,456]]],186],[[[458,[184,456]]],186],[[],186],[[],186],[206,177],[127,174],[127,168],[127,175],[[],168],[[],169],[[],177],[[],170],[[],171],[[],172],[[],173],[[],183],[[],185],[[],186],[[169,127],174],[[169,127],176],[[169,127],177],[21,71],[[473,474,14],[[13,[204,475]]]],[[168,168],202],[[168,168],202],[[169,169,169],174],[[168,168],175],[[170,170,170,170],176],[[],174],[[],175],[[],176],[[],174],[[],175],[[],176],[[],174],[[],175],[[],176],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[168,168],202],[169,174],[168,175],[170,176],[[476,14],204],[[250,127,127,127],174],[[250,127,127,127],176],[[250,127,127,127],177],[477],[477],[[[288,[[108,[5]]]],478],379],[[[45,[204]],168,12,12,[25,[168]],[25,[168]]],85],[[]],[[]],[[],88],[[],22],[[],212],[[],212],[175,174],[174,175],[174,176],[174,177],[464,175],[464,176],[464,177],[176,174],[176,177],[176,221],[[],174],[[],168],[[],169],[[],175],[[],176],[[],170],[[],171],[[],172],[[],173],[[],183],[[],185],[[],186],[177,174],[177,176],[184,71],[[],22],[60,25],[60,[[25,[202]]]],[60,[[25,[220]]]],[60,[[25,[205]]]],[60,[[25,[221]]]],[60,[[25,[151]]]],[60,[[25,[224]]]],[60,[[25,[225]]]],[60,[[25,[226]]]],[60,[[25,[227]]]],[60,[[25,[228]]]],[60,[[25,[229]]]],[60,[[25,[45]]]],[60,[[25,[232]]]],[60,[[25,[178]]]],[60,[[25,[234]]]],[60,[[25,[235]]]],[60,[[25,[236]]]],[60,[[25,[85]]]],[60,[[25,[239]]]],[60,[[25,[240]]]],[60,[[25,[241]]]],[60,[[25,[242]]]],[60,[[25,[244]]]],[60,[[25,[245]]]],[60,[[25,[246]]]],[60,[[25,[167]]]],[60,[[25,[71]]]],[60,[[25,[204]]]],[60,[[25,[247]]]],[60,[[25,[213]]]],[60,[[25,[214]]]],[60,[[25,[215]]]],[60,[[25,[174]]]],[60,[[25,[168]]]],[60,[[25,[169]]]],[60,[[25,[175]]]],[60,[[25,[176]]]],[60,[[25,[177]]]],[60,[[25,[170]]]],[60,[[25,[171]]]],[60,[[25,[172]]]],[60,[[25,[173]]]],[60,[[25,[183]]]],[60,[[25,[185]]]],[60,[[25,[186]]]],[177,221],[[169,169],177],[[168,168],177],[[169,169],177],[[177,169],176],[127,174],[127,176],[127,177],[127,174],[127,176],[127,177],[127,174],[127,176],[127,177],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[169,221],[168,174],[169,176],[[168,127],175],[[168,127,168],174],[[169,177,169],176],[169,177],[[127,226],225],[[],168],[[],169],[[],177],[[],170],[[],171],[[],172],[[],173],[[],183],[[],185],[[],186],[477],[[[288,[108]]],379],[[193,5],197],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[221,327],[221,403],[169,221],[168,174],[169,176],[[],359],[[],360],[[],380],[[],251],[[],252],[[[288,[479]],127],345],[[[288,[479]],[288,[479]],127,127],346],[170,177],[[[288,[[108,[5]]]]],379],[39],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[40],[39],[39],[40],[39,222],[39,223],[39],[40],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[39],[40],[39,277],[40],[39],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[40],[39],[40],[39],[39],[40],[[127,127,127],221],[[127,127,127,127],177],0,0,0,[167,127],[88,[[25,[224]]]],0,0,0,[[],256],0,[[22,22],14],[286,[[13,[480]]]],[71,184],0,[397,25],[398,[[25,[127]]]],[223,71],[[392,5],[[25,[393]]]],[[53,45],25],[[277,39,71],[[13,[481]]]],[88,482],[[180,483],[[25,[181]]]],[[389,71],[[13,[481]]]],[[39,71],25],[28,[[43,[10]]]],[12,25],[[39,71,386],[[25,[484]]]],[[318,5],[[25,[319]]]],[[389,71],[[13,[485]]]],[[389,71],[[13,[276,485]]]],[[389,71],[[13,[276,485]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[392,[[25,[393]]]],[392,[[25,[393]]]],[[],192],[[69,71],[[25,[414]]]],[[39,71],[[25,[415]]]],[[39,71],[[25,[416]]]],[200,25],[200,25],[5,25],[12,25],[5,25],[5,25],[12,25],[5,25],[5,25],[12,25],[12,25],[5,25],[5,25],[[486,5],25],[5,25],[5,25],[[487,12],25],[12,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[12,25],[5,25],[5,25],[5,25],[5,25],[12,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[12,25],[5,25],[5,25],[12,25],[5,25],[5,25],[12,25],[12,25],[5,25],[5,25],[[486,5],25],[5,25],[5,25],[[487,12],25],[12,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[12,25],[5,25],[5,25],[5,25],[5,25],[12,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[[5,12]],[[5,12]],[[28,5,12]],[[190,5,12]],[[5,12]],[[5,12]],[[28,5,12]],[[190,5,12]],[5,197],[5,197],[[28,5],197],[[190,5],197],[5,197],[5,197],[[28,5],197],[[190,5],197],[[196,219],488],[196,45],[53,45],[196,[[25,[44]]]],[196,340],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[286,25],[[389,71],[[13,[481]]]],[178,[[43,[10]]]],[218,489],[178,[[43,[10]]]],[218,489],[[],184],[253,184],[196,488],[[277,39,71],[[13,[481]]]],[[277,39],[[13,[481]]]],[389,[[13,[481]]]],[[277,39],[[13,[481]]]],[389,[[13,[481]]]],[286,[[492,[490,491]]]],[397,25],[[392,5],[[25,[393]]]],[[53,45],25],[[277,39,71],[[13,[481]]]],[[180,483],[[25,[181]]]],[[389,71],[[13,[481]]]],[[39,71],[[25,[276]]]],[22,25],[[39,71,386],[[25,[493]]]],[22],[39,25],[39,[[25,[276]]]],[39,[[25,[276]]]],[[53,187]],[[69,71],414],[[39,71],[[25,[416]]]],[[277,494,39,184]],[[277,494]],[178,[[43,[10]]]],[218,489],[[217,21],[[25,[495]]]],[180,[[25,[181]]]],[180,[[25,[181]]]],[243,176],[245,176],[246,176],[321,496],[321,496],[178,[[43,[10]]]],[[217,21],[[25,[495]]]],[39,25],[[39,386],[[25,[484]]]],[39,[[25,[276]]]],[[39,386],[[25,[493]]]],[[39,187],276],[39,[[25,[276]]]],[[359,60],497],0,[392,[[25,[393]]]],[[277,39],[[13,[498]]]],[389,[[13,[498]]]],[392,[[25,[393]]]],[[277,39],[[13,[498]]]],[389,[[13,[498]]]],[[277,39],[[13,[498]]]],[[277,39,184,184],[[13,[498]]]],[12,71],[[190,194],25],[[190,194],25],[[28,198],[[13,[28,198]]]],[[28,198],[[13,[28,499]]]],[[85,45],[[25,[12]]]],[[],62],[202,62],[220,62],[205,62],[221,62],[151,62],[222,62],[223,62],[224,62],[225,62],[226,62],[227,62],[228,62],[229,62],[230,62],[45,62],[231,62],[232,62],[178,62],[233,62],[234,62],[235,62],[236,62],[237,62],[85,62],[238,62],[218,62],[239,62],[240,62],[241,62],[242,62],[243,62],[244,62],[245,62],[246,62],[167,62],[71,62],[204,62],[212,62],[247,62],[248,62],[249,62],[250,62],[213,62],[214,62],[215,62],[174,62],[168,62],[169,62],[175,62],[176,62],[177,62],[170,62],[171,62],[172,62],[173,62],[183,62],[185,62],[186,62],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[277,39,71],[[13,[481]]]],[[389,71],[[13,[481]]]],[286,[[43,[24,10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[22,22],14],[202,168],[409,[[45,[52]]]],0,0,[[88,500,352]],0,0,[220],[325],[279],[280],[281],[224],[226],[330],[45],[340],[232],[341],[234],[235],[236],[345],[346],[256],[347],[350],[239],[240],[356],[320],[241],[357],[71],[22],[250],[213],[214],[215],[171],[172],[173],[183],[185],[186],0,0,[202,127],[181,127],0,[[],[[13,[167,501]]]],[[127,127,127],167],[[127,127,127,127],167],[45,502],[181,483],[39,503],0,0,0,0,0,0,0,0,0,0,0,0,[53,137],0,[[],209],0,[379,[[25,[504]]]],0,[379,489],0,[322],[39,184],[[]],[[],12],[71,184],[[168,12]],[[169,12]],[[170,12]],[[171,12]],[[172,12]],[[173,12]],[[183,12]],[[185,12]],[[186,12]],0,0,0,[[168,12]],[[169,12]],[[170,12]],[[171,12]],[[172,12]],[[173,12]],[[183,12]],[[185,12]],[[186,12]],[[226,5],[[25,[12]]]],[[227,5],[[25,[12]]]],[[232,5],[[25,[12]]]],[[235,5],[[25,[12]]]],[[239,5],[[25,[12]]]],[[241,5],[[25,[12]]]],[[243,5],[[25,[12]]]],[[167,5],[[25,[12]]]],[286,[[25,[505]]]],0,[286,[[25,[505]]]],0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[39,494],277],[[39,494],277],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[28,28],[39,386],[[39,506],386],[[]],[28,28],[[39,386,184,184],507],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,386,184,184]],[[39,386,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,184,184]],[[39,386,184,184]],[[39,386,184,184]],[28,28],[39],[28,28],[69],[39],[39,386],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39,386],[39,386],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39,386],[39,386],[[203,168],203],0,[39],[[253,39]],0,[[88,[288,[320]]],88],[[251,39,71,60]],[[252,39,60]],[[88,[288,[320]],12],88],[[286,508,[288,[289]]]],[12],[12],[[426,12],426],[[88,219],88],[[88,357,[288,[437]]],88],[[88,219],88],[28,28],[39],[69],[39,[[13,[[43,[71,10]]]]]],[28,28],[69],[39],[[39,386,509]],[[202,127],202],[[39,71],[[43,[510,10]]]],[28],[28],[28],[28],[28],[28],[28],0,[178,[[25,[307]]]],0,[[202,202],202],[[212,212],14],[[],511],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[429,511],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[202,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[220,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[205,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[221,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[151,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[222,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[223,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[224,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[225,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[226,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[227,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[228,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[229,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[230,10]]],[[11,[1,10]]]],[[[11,[45,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[231,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[232,10]]],[[11,[1,10]]]],[[[11,[178,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[233,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[234,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[235,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[236,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[237,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[85,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[238,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[218,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[239,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[240,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[241,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[242,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[243,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[244,10]]],[[11,[1,10]]]],[[[11,[245,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[246,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[167,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[71,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[204,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[212,10]]],[[11,[1,10]]]],[[[11,[247,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[248,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[249,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[250,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[213,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[214,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[215,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[174,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[168,10]]],[[11,[1,10]]]],[[[11,[169,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[175,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[176,10]]],[[11,[1,10]]]],[[[11,[177,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[170,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[171,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[172,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[173,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[183,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[185,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[186,10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[],512],[[],209],[126,100],[51],[275],[276],[50],[51],[51],[[]],[[]],[276],[276],[222],[389],[389],[50],[93],[93],[513],[22],[[[11,[10]]],[[11,[60,10]]]],[[[11,[202,10]]],[[11,[60,10]]]],[[[11,[220,10]]],[[11,[60,10]]]],[[[11,[205,10]]],[[11,[60,10]]]],[[[11,[221,10]]],[[11,[60,10]]]],[[[11,[151,10]]],[[11,[60,10]]]],[[[11,[222,10]]],[[11,[60,10]]]],[[[11,[223,10]]],[[11,[60,10]]]],[[[11,[224,10]]],[[11,[60,10]]]],[[[11,[225,10]]],[[11,[60,10]]]],[[[11,[226,10]]],[[11,[60,10]]]],[[[11,[227,10]]],[[11,[60,10]]]],[[[11,[228,10]]],[[11,[60,10]]]],[[[11,[229,10]]],[[11,[60,10]]]],[[[11,[230,10]]],[[11,[60,10]]]],[[[11,[45,10]]],[[11,[60,10]]]],[[[11,[231,10]]],[[11,[60,10]]]],[[[11,[232,10]]],[[11,[60,10]]]],[[[11,[178,10]]],[[11,[60,10]]]],[[[11,[233,10]]],[[11,[60,10]]]],[[[11,[234,10]]],[[11,[60,10]]]],[[[11,[235,10]]],[[11,[60,10]]]],[[[11,[236,10]]],[[11,[60,10]]]],[[[11,[237,10]]],[[11,[60,10]]]],[[[11,[85,10]]],[[11,[60,10]]]],[[[11,[238,10]]],[[11,[60,10]]]],[[[11,[218,10]]],[[11,[60,10]]]],[[[11,[239,10]]],[[11,[60,10]]]],[[[11,[240,10]]],[[11,[60,10]]]],[[[11,[241,10]]],[[11,[60,10]]]],[[[11,[242,10]]],[[11,[60,10]]]],[[[11,[243,10]]],[[11,[60,10]]]],[[[11,[244,10]]],[[11,[60,10]]]],[[[11,[245,10]]],[[11,[60,10]]]],[[[11,[246,10]]],[[11,[60,10]]]],[[[11,[167,10]]],[[11,[60,10]]]],[[[11,[71,10]]],[[11,[60,10]]]],[[[11,[204,10]]],[[11,[60,10]]]],[[[11,[212,10]]],[[11,[60,10]]]],[[[11,[247,10]]],[[11,[60,10]]]],[[[11,[248,10]]],[[11,[60,10]]]],[[[11,[249,10]]],[[11,[60,10]]]],[[[11,[250,10]]],[[11,[60,10]]]],[[[11,[213,10]]],[[11,[60,10]]]],[[[11,[214,10]]],[[11,[60,10]]]],[[[11,[215,10]]],[[11,[60,10]]]],[[[11,[174,10]]],[[11,[60,10]]]],[[[11,[168,10]]],[[11,[60,10]]]],[[[11,[169,10]]],[[11,[60,10]]]],[[[11,[175,10]]],[[11,[60,10]]]],[[[11,[176,10]]],[[11,[60,10]]]],[[[11,[177,10]]],[[11,[60,10]]]],[[[11,[170,10]]],[[11,[60,10]]]],[[[11,[171,10]]],[[11,[60,10]]]],[[[11,[172,10]]],[[11,[60,10]]]],[[[11,[173,10]]],[[11,[60,10]]]],[[[11,[183,10]]],[[11,[60,10]]]],[[[11,[185,10]]],[[11,[60,10]]]],[[[11,[186,10]]],[[11,[60,10]]]],[[],[[514,[90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[397,13],[174,174],[175,175],[176,176],[177,177],0,[407,14],[60,14],[195,14],0,[[],14],[51,14],[275,14],[276,14],[339,14],[50,14],[405,14],0,[[],14],[51,14],[275,14],[276,14],[339,14],[50,14],[405,14],[[318,5],14],[204,14],[202,14],[53,14],[[277,39,184,184],14],[85,14],[88,14],[320,14],[389,14],[321,14],[96,14],[[],14],[253,14],[174,14],[168,14],[169,14],[175,14],[176,14],[177,14],[170,14],[181,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[174,14],[168,14],[169,14],[175,14],[176,14],[177,14],[170,14],[168,213],[169,214],[170,384],[177,14],[168,184],[169,184],[170,184],[171,184],[172,184],[173,184],[168,14],[169,14],[177,14],[170,14],[[361,169],14],[151,14],[[],14],[319,14],[55,14],[28,14],[39,14],[39,14],[[],14],[253,14],[45,14],[340,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[248,14],0,[248,14],0,[248,14],0,[45,14],[340,14],[388,137],[53,137],[[277,39],515],[88,137],[180,137],[389,515],[217,137],[513,[[517,[[516,[71]]]]]],[96,[[0,[518,489]]]],[212,137],[71,519],[[389,71],519],[[277,39],520],[389,520],[[277,39],520],[389,520],[[277,39],520],[389,520],[321,[[0,[518,489]]]],[71,521],[[389,71],521],[39,137],[[],64],[[],157],[202,64],[220,64],[205,157],[221,64],[151,64],[222,157],[223,157],[224,64],[225,64],[226,522],[227,522],[228,64],[229,64],[230,157],[45,64],[231,64],[232,522],[178,64],[233,64],[234,64],[235,522],[236,64],[237,64],[85,64],[238,64],[218,64],[239,522],[240,157],[241,522],[242,64],[243,522],[244,64],[245,64],[246,64],[167,522],[212,157],[247,64],[248,64],[249,64],[213,64],[214,64],[215,64],[174,64],[168,64],[169,64],[175,64],[176,64],[170,64],[171,64],[172,64],[173,64],[183,64],[185,64],[186,64],[389,515],[88,137],[217,137],[217,137],[217,137],[[277,39],515],[[277,39],523],[389,523],[[277,39],523],[389,523],[389,523],[53,137],[[277,39],515],[180,137],[389,515],[190,137],[[277,39],515],[389,515],[96,[[0,[518,489]]]],0,0,0,[[217,21],14],0,[225,14],[178,14],[218,14],[[217,21],14],0,0,[178,14],[218,14],[[217,21],14],0,0,[357],0,[207,201],[211,209],[207,201],[[210,211],210],[[192,211],192],0,0,[207,201],[207,201],0,0,0,0,[39,184],0,0,0,0,0,[[],184],[51,184],[275,184],[276,184],0,[151,[[25,[307]]]],0,[24,212],0,0,0,[[22,22],14],[205,169],[221,169],0,0,[[],346],[53,12],[85,12],[88,12],[320,12],[321,12],[96,12],[22,12],[168,127],[169,127],[177,127],[170,127],[168,127],[169,127],[177,127],[170,127],[168,127],[169,127],[177,127],[170,127],[[168,168,127],168],[[169,169,127],169],[[177,177,127],177],[[170,170,127],170],0,[193,328],[[409,193],409],[[[410,[418]],193],410],[[[410,[419]],193],410],[[31,43]],[[31,43]],[196,45],[[349,31,43]],[[358,31,43]],[[362,31,43]],[[363,31,43]],[[364,31,43]],[[365,31,43]],[[366,31,43]],[[367,31,43]],[[368,31,43]],[[370,31,43]],[[371,31,43]],[[372,31,43]],[[374,31,43]],[[375,31,43]],[[376,31,43]],[196,[[13,[[43,[340,10]],524]]]],[[196,5],[[13,[[43,[45,10]],32]]]],[196,340],0,[221,169],[221,169],[221,169],0,[[22,525]],[242,[[25,[168]]]],[242,25],[242,[[25,[168]]]],[[221,169,169]],[[169,169,169],176],[[169,169,169],176],[[169,169,169],176],[[169,169,169],176],[[221,169,169],221],[[409,291],409],[409,409],[[22,22],14],0,0,[22],[[45,53]],[22],[389],[389],0,0,[[222,526],[[13,[527]]]],[[223,526],[[13,[527]]]],0,0,[[51,187],276],[[275,187],276],[[276,187],276],[196],0,0,0,0,0,0,0,0,0,[386,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[386,14],[386,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[386,14],[386,14],[[168,168],168],[[169,169],169],[[170,170],170],[[171,171],171],[[172,172],172],[[173,173],173],[[183,183],183],[[185,185],185],[[186,186],186],0,[168,127],[169,127],[170,127],[171,182],[172,182],[173,182],[183,184],[185,184],[186,184],[22,[[25,[528]]]],[[[22,[313]]],[[25,[528]]]],[[203,168],203],0,0,[[88,88],88],0,[[168,168],168],[[169,169],169],[[170,170],170],[[171,171],171],[[172,172],172],[[173,173],173],[[183,183],183],[[185,185],185],[[186,186],186],0,0,[168,127],[169,127],[170,127],[171,182],[172,182],[173,182],[183,184],[185,184],[186,184],0,[225,226],[181,353],0,0,0,[[357,[288,[437]]],320],0,[[],346],[[],256],[[],345],[[],345],[[],346],[[],256],[[],345],[[],345],0,[[205,169]],[[205,205]],[[205,221]],[[221,221]],[[221,169]],[[167,127]],[[167,170]],[167],[167],[[167,169]],[[174,174]],[[174,127]],[[174,459]],[[174,169]],[[174,282],282],[[168,127],168],[[168,168],168],[[169,169],169],[[169,127],169],[[175,127]],[[175,168]],[[175,175]],[[176,127]],[[176,206]],[[176,176]],[[176,170]],[[177,177],177],[[177,282]],[[177,127],177],[[177,169]],[[170,127],170],[[170,170],170],[[171,171],171],[[171,182],171],[[172,182],172],[[172,172],172],[[173,182],173],[[173,173],173],[[183,183],183],[[183,184],183],[[185,185],185],[[185,184],185],[[186,184],186],[[186,186],186],[[168,168,168],168],[[169,169,169],169],[[170,170,170],170],[[167,170]],[167],[167],[[167,169]],[[167,127]],[[174,127]],[[174,174]],[[168,127]],[[168,168]],[[169,127]],[[169,169]],[[175,175]],[[175,127]],[[176,127]],[[176,176]],[[177,177]],[[170,170]],[[170,127]],[[171,182]],[[171,171]],[[172,182]],[[172,172]],[[173,173]],[[173,182]],[[183,183]],[[183,184]],[[185,185]],[[185,184]],[[186,186]],[[186,184]],[[175,175],175],[[174,174],174],[[176,176],176],[[177,177],177],[[174,127],174],[[175,127],175],[[176,127],176],[[205,221],205],[[221,221],221],[[175,168],168],[[174,169],169],[[177,169],169],[[174,282],282],[[177,282],282],[[176,170],170],0,[220],[[320,529],12],[[],[[108,[5]]]],[253,[[108,[5]]]],[[],5],[[],90],[[388,224],[[25,[5]]]],0,0,0,0,[12,[[25,[5]]]],[[202,12],[[25,[5]]]],[[220,12],[[25,[5]]]],[[221,12],[[25,[5]]]],[[151,12],[[25,[5]]]],[[224,12],[[25,[5]]]],[[225,12],[[25,[5]]]],[[226,12],[[25,[5]]]],[[227,12],[[25,[5]]]],[[228,12],[[25,[5]]]],[[229,12],[[25,[5]]]],[[45,12],[[25,[5]]]],[[231,12],[[25,[5]]]],[[232,12],[[25,[5]]]],[[178,12],[[25,[5]]]],[[233,12],[[25,[5]]]],[[234,12],[[25,[5]]]],[[235,12],[[25,[5]]]],[[236,12],[[25,[5]]]],[[237,12],[[25,[5]]]],[[85,12],[[25,[5]]]],[[238,12],[[25,[5]]]],[[218,12],[[25,[5]]]],[[239,12],[[25,[5]]]],[[241,12],[[25,[5]]]],[[242,12],[[25,[5]]]],[[243,12],[[25,[5]]]],[[244,12],[[25,[5]]]],[[245,12],[[25,[5]]]],[[246,12],[[25,[5]]]],[[167,12],[[25,[5]]]],[[247,12],[[25,[5]]]],[[248,12],[[25,[5]]]],[[249,12],[[25,[5]]]],[[213,12],[[25,[5]]]],[[214,12],[[25,[5]]]],[[215,12],[[25,[5]]]],[[174,12],[[25,[5]]]],[[168,12],[[25,[5]]]],[[169,12],[[25,[5]]]],[[175,12],[[25,[5]]]],[[176,12],[[25,[5]]]],[[170,12],[[25,[5]]]],[[171,12],[[25,[5]]]],[[172,12],[[25,[5]]]],[[173,12],[[25,[5]]]],[[183,12],[[25,[5]]]],[[185,12],[[25,[5]]]],[[186,12],[[25,[5]]]],[[242,205,169],[[25,[169]]]],[[22,22],14],0,0,[174],[168,168],[169,169],[175],[176],[177,177],[170,170],[171,171],[172,172],[173,173],0,[[[288,[479]],127],345],[[],28],[[127,127,127,127],202],[[],210],[[[288,[[108,[5]]]]],220],[[],397],[[389,71],521],[[193,5],197],[[389,71],519],[307,151],[[],191],[12,224],[[193,226],225],[[193,530],328],[377,142],[[224,227],229],[[],196],[[224,232],234],[39,277],[[224,235],236],[12,238],[[483,355,184,184,291,[25,[171]],[25,[531]]],181],[[[11,[532,10]]],200],[219,88],[[533,39],69],[534,286],[[],39],[[],22],[[535,536,[43,[24,10]],390],204],[537,251],[[252,538],252],[[14,14],213],[[14,14,14],214],[[14,14,14,14],215],[[],322],[[127,127],168],[[127,127,127],169],[[127,127,127,127],170],[[],192],[[182,182],171],[[182,182,182],172],[[182,182,182,182],173],[[184,184],183],[[184,184,184],185],[[184,184,184,184],186],[[277,539,494]],[[277,539]],[[],22],[[[45,[204]],168],85],[[535,536,390],204],[[533,413],69],[[22,540],382],[[],[[22,[285]]]],[12,22],[127,399],[[],[[22,[285]]]],[12,22],[521,25],[519,25],0,[39],[39,276],[[],212],[168,168],[169,169],[177,177],[170,170],[168,168],[169,169],[170,170],[213,213],[214,214],[215,215],[171],[172],[173],[183],[185],[186],0,0,[321,12],[[],201],[[],192],[[],192],[[],201],[[],192],[[],192],[[],201],[[],192],[[],201],[[],192],[[],192],[[],201],[[],192],[[],192],[[],201],[[],192],[[],192],[[],201],[[],192],[[],192],[[]],[[]],0,[[127,127,127,127,127,127],176],[[127,127,127,127,127,127],176],[[127,127,127,127,127,127],176],[322,[[13,[541]]]],[322,[[13,[541]]]],[322,[[13,[541]]]],[322],[322,[[13,[541]]]],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[542],[[277,39,12]],[[389,12,[0,[199,543,544,545]]]],[[277,39,12]],[[389,12,[0,[199,543,544,545]]]],[[277,39,12]],[[],200],0,[200],0,0,0,0,0,0,[188,71],[426,71],0,[[220,220],[[25,[383]]]],[[329,329],[[25,[383]]]],[[45,45],[[25,[383]]]],[[239,239],[[25,[383]]]],[[240,240],[[25,[383]]]],[[356,356],[[25,[383]]]],[[71,71],[[25,[383]]]],[[22,22],[[25,[383]]]],[[212,212],[[25,[383]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[[60,5],[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[[60,5],[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[[],[[410,[419]]]],[151],[225],[319,[[410,[419]]]],[55,[[410,[419]]]],[[52,328],[[25,[427]]]],[197,197],[225,14],0,0,[225,127],[225,127],[168,168],[171,171],[[168,168],127],[[171,171],182],[[127,127,127],176],[[127,127,127],176],[[127,127,127],176],[[127,127,127],176],[[127,127,127,127],176],[[127,127,127,127],176],[[127,127,127,127],176],0,0,0,[181,[[25,[266]]]],0,[181,184],0,[242,[[25,[183]]]],[242,25],[242,[[25,[183]]]],[181,184],0,0,[[],[[546,[22]]]],[[],547],[[],547],[[207,[548,[152,152]]],201],[[[45,[334]]],409],[[319,[45,[334]]],409],[[55,[45,[334]]],409],0,0,0,0,0,[322,[[13,[541]]]],0,0,[329,[[25,[291]]]],[181,[[25,[171]]]],0,0,0,0,0,0,[[[288,[479]],127],345],[[168,127],168],[[169,127],169],[[170,127],170],[[],[[13,[549]]]],[[],[[13,[549]]]],[181,550],0,0,[178],[218],[[[288,[320]]],14],[[28,[288,[320]]],14],[178,14],[218,14],[[88,500,352],14],[[39,[288,[320]]],14],0,0,[[[288,[320]],[25,[224]]],14],[[28,[288,[320]],[25,[224]]],14],[[39,[288,[320]],[25,[224]]],14],[178,193],[180,181],[180,181],[286,534],0,0,[[],174],[[],174],[[],168],[[],168],[[],169],[[],169],[[],175],[[],175],[[],176],[[],176],[[],177],[[],177],[[],170],[[],170],[[],171],[[],171],[[],172],[[],172],[[],173],[[],173],[[],183],[[],183],[[],185],[[],185],[[],186],[[],186],[[168,168],168],[[169,169],169],[[170,170],170],[[168,168],168],[[169,169],169],[[170,170],170],[[176,169],169],0,0,[242,176],[163],[[22,163]],[163],0,[[22,22],14],[322,[[13,[541]]]],[[]],[[]],[426,426],0,0,0,[39,277],[39,277],0,[167,127],[[205,282],127],0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[151,193],0,[151,127],0,[151,291],0,[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[151,193],0,[151,127],0,[151,291],0,[151,127],0,[151,291],0,[151,193],0,[181,[[25,[531]]]],0,[320,551],[[22,12]],[39,184],[[167,391]],[[174,391]],[[168,391]],[[169,391]],[[175,391]],[[176,391]],[[170,391]],[[171,391]],[[172,391]],[[173,391]],[[183,391]],[[185,391]],[[186,391]],0,[168,168],[169,169],[170,170],[[22,382,552]],[[22,382,382]],0,0,0,[[251,39,71],[[25,[60]]]],[[252,39],[[25,[60]]]],[224,[[25,[21]]]],[[],[[25,[21]]]],[226,[[25,[21]]]],[227,[[25,[21]]]],[232,[[25,[21]]]],[234,[[25,[21]]]],[235,[[25,[21]]]],[236,[[25,[21]]]],[239,[[25,[21]]]],[240,[[25,[21]]]],[241,[[25,[21]]]],[243,[[25,[21]]]],[167,[[25,[21]]]],[71,[[25,[21]]]],[[],66],[202,66],[220,66],[205,66],[221,66],[151,66],[222,66],[223,66],[224,66],[225,66],[226,66],[227,66],[228,66],[229,66],[230,66],[45,66],[231,66],[232,66],[178,66],[233,66],[234,66],[235,66],[236,66],[237,66],[85,66],[238,66],[218,66],[239,66],[240,66],[241,66],[242,66],[243,66],[244,66],[245,66],[246,66],[167,66],[71,66],[204,66],[212,66],[247,66],[248,66],[249,66],[250,66],[[251,39,71],[[25,[[276,[60]]]]]],[[252,39],[[25,[[276,[60]]]]]],[213,66],[214,66],[215,66],[174,66],[168,66],[169,66],[175,66],[176,66],[177,66],[170,66],[171,66],[172,66],[173,66],[183,66],[185,66],[186,66],[[[11,[10]]],67],[[[11,[202,10]]],67],[[[11,[220,10]]],67],[[[11,[205,10]]],67],[[[11,[221,10]]],67],[[[11,[151,10]]],67],[[[11,[222,10]]],67],[[[11,[223,10]]],67],[[[11,[224,10]]],67],[[[11,[225,10]]],67],[[[11,[226,10]]],67],[[[11,[227,10]]],67],[[[11,[228,10]]],67],[[[11,[229,10]]],67],[[[11,[230,10]]],67],[[[11,[45,10]]],67],[[[11,[231,10]]],67],[[[11,[232,10]]],67],[[[11,[178,10]]],67],[[[11,[233,10]]],67],[[[11,[234,10]]],67],[[[11,[235,10]]],67],[[[11,[236,10]]],67],[[[11,[237,10]]],67],[[[11,[85,10]]],67],[[[11,[238,10]]],67],[[[11,[218,10]]],67],[[[11,[239,10]]],67],[[[11,[240,10]]],67],[[[11,[241,10]]],67],[[[11,[242,10]]],67],[[[11,[243,10]]],67],[[[11,[244,10]]],67],[[[11,[245,10]]],67],[[[11,[246,10]]],67],[[[11,[167,10]]],67],[[[11,[71,10]]],67],[[[11,[204,10]]],67],[[[11,[212,10]]],67],[[[11,[247,10]]],67],[[[11,[248,10]]],67],[[[11,[249,10]]],67],[[[11,[250,10]]],67],[[[11,[213,10]]],67],[[[11,[214,10]]],67],[[[11,[215,10]]],67],[[[11,[174,10]]],67],[[[11,[168,10]]],67],[[[11,[169,10]]],67],[[[11,[175,10]]],67],[[[11,[176,10]]],67],[[[11,[177,10]]],67],[[[11,[170,10]]],67],[[[11,[171,10]]],67],[[[11,[172,10]]],67],[[[11,[173,10]]],67],[[[11,[183,10]]],67],[[[11,[185,10]]],67],[[[11,[186,10]]],67],[[202,60],[[25,[14]]]],[[220,60],[[25,[14]]]],[[205,60],[[25,[14]]]],[[221,60],[[25,[14]]]],[[151,60],[[25,[14]]]],[[222,60],[[25,[14]]]],[[223,60],[[25,[14]]]],[[224,60],[[25,[14]]]],[[225,60],[[25,[14]]]],[60,[[25,[14]]]],[[226,60],[[25,[14]]]],[[227,60],[[25,[14]]]],[[228,60],[[25,[14]]]],[[229,60],[[25,[14]]]],[[230,60],[[25,[14]]]],[[45,60],[[25,[14]]]],[[231,60],[[25,[14]]]],[[232,60],[[25,[14]]]],[[178,60],[[25,[14]]]],[[233,60],[[25,[14]]]],[[234,60],[[25,[14]]]],[[235,60],[[25,[14]]]],[[236,60],[[25,[14]]]],[[237,60],[[25,[14]]]],[[85,60],[[25,[14]]]],[[238,60],[[25,[14]]]],[[218,60],[[25,[14]]]],[[239,60],[[25,[14]]]],[[240,60],[[25,[14]]]],[[241,60],[[25,[14]]]],[[242,60],[[25,[14]]]],[[243,60],[[25,[14]]]],[[244,60],[[25,[14]]]],[[245,60],[[25,[14]]]],[[246,60],[[25,[14]]]],[[167,60],[[25,[14]]]],[[71,60],[[25,[14]]]],[[212,60],[[25,[14]]]],[[247,60],[[25,[14]]]],[[248,60],[[25,[14]]]],[[249,60],[[25,[14]]]],[[213,60],[[25,[14]]]],[[214,60],[[25,[14]]]],[[215,60],[[25,[14]]]],[[174,60],[[25,[14]]]],[[168,60],[[25,[14]]]],[[169,60],[[25,[14]]]],[[175,60],[[25,[14]]]],[[176,60],[[25,[14]]]],[[177,60],[[25,[14]]]],[[170,60],[[25,[14]]]],[[171,60],[[25,[14]]]],[[172,60],[[25,[14]]]],[[173,60],[[25,[14]]]],[[183,60],[[25,[14]]]],[[185,60],[[25,[14]]]],[[186,60],[[25,[14]]]],[[],68],[202,68],[220,68],[205,68],[221,68],[151,68],[222,68],[223,68],[224,68],[225,68],[226,68],[227,68],[228,68],[229,68],[230,68],[45,68],[231,68],[232,68],[178,68],[233,68],[234,68],[235,68],[236,68],[237,68],[85,68],[238,68],[218,68],[239,68],[240,68],[241,68],[242,68],[243,68],[244,68],[245,68],[246,68],[167,68],[71,68],[204,68],[212,68],[247,68],[248,68],[249,68],[250,68],[213,68],[214,68],[215,68],[174,68],[168,68],[169,68],[175,68],[176,68],[177,68],[170,68],[171,68],[172,68],[173,68],[183,68],[185,68],[186,68],0,[[251,39,71],[[25,[[276,[60]]]]]],[[252,39],[[25,[[276,[60]]]]]],[[]],[28,28],[[22,314],315],[28,28],[28,28],[[204,535]],[[204,184]],[[168,168],168],[[169,169],169],[[170,170],170],[[168,168],168],[[169,169],169],[[170,170],170],[151,127],0,[151,291],[178],[218],[178],[218],[[[288,[320]]]],[[28,[288,[320]]]],[[39,[288,[320]]]],[[[288,[320]],[25,[224]]]],[[28,[288,[320]],[25,[224]]]],[[39,[288,[320]],[25,[224]]]],[178,14],[196],[[168,127],168],[[168,168],168],[[169,169],169],[[169,127],169],[[170,170],170],[[170,127],170],[[171,171],171],[[171,182],171],[[172,172],172],[[172,182],172],[[173,182],173],[[173,173],173],[[183,184],183],[[183,183],183],[[185,185],185],[[185,184],185],[[186,184],186],[[186,186],186],[[168,168]],[[168,127]],[[169,127]],[[169,169]],[[170,127]],[[170,170]],[[171,182]],[[171,171]],[[172,172]],[[172,182]],[[173,182]],[[173,173]],[[183,184]],[[183,183]],[[185,184]],[[185,185]],[[186,186]],[[186,184]],[225,193],[225,127],[398,[[25,[127]]]],[53,25],[[88,[288,[320]]],[[25,[12]]]],[[180,483],[[25,[181]]]],[[251,39,71]],[[252,39]],[[88,12],14],[[286,[288,[287]]],[[25,[289]]]],[[318,5]],[[]],[[]],[426,426],[39,25],[[]],[69],[39,25],[[39,386],25],[39,25],[39,[[517,[[516,[71]]]]]],0,[[39,386],[[517,[[516,[71]]]]]],[322,[[13,[541]]]],[[200,39]],[60,14],[181,127],0,[181,127],0,[[53,12]],[225],[218],[218],[[]],[28],[39],[181,14],0,0,[[204,535]],[181,553],0,0,[39],[39,276],[[39,187]],0,[142],[322,[[13,[541]]]],[[142,40]],[[],[[410,[418]]]],[319,[[410,[418]]]],[55,[[410,[418]]]],[[52,328],[[25,[427]]]],[409,409],[[127,127,127],167],[[127,127,127],167],[[24,24,24],167],[[127,127,127,127],167],[[127,127,127,127],167],[[24,24,24,24],167],[205,169],[221,169],0,0,[[],346],[[221,177]],[[168,168],168],[[171,171],171],[[221,169,177]],[[221,169,127]],[[221,177]],[[221,169,127]],[[221,127]],[[221,127]],[[221,127]],[[221,127]],[[221,127]],[[221,127]],0,[168,168],[169,169],[170,170],[[174,12],169],[[175,12],168],[[176,12],170],[39],[[]],[28],[[197,39]],[[191,39]],[[200,39]],[39],[[190,39]],0,0,0,[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[[190,39]],[[]],[[],512],[210,210],[[]],[[],512],[210,210],[39],[[253,39],152],0,0,0,0,0,0,[181,291],[[180,483],291],[181,[[25,[291]]]],0,0,0,0,0,0,[[52,291],[[25,[427]]]],[[52,291],[[25,[427]]]],[[213,168,168],168],[[214,169,169],169],[[384,170,170],170],[[213,171,171],171],[[214,172,172],172],[[215,173,173],173],[[213,183,183],183],[[214,185,185],185],[[215,186,186],186],[321],[283],[[283,219]],[321],[283],[39],[[39,137]],[39],[[[288,[320]]]],[[28,[288,[320]]]],[[39,[288,[320]]]],[[[288,[320]],[25,[224]]]],[[28,[288,[320]],[25,[224]]]],[[39,[288,[320]],[25,[224]]]],[[],[[25,[497]]]],[[],13],[[],13],[323,13],[202,13],[220,13],[325,13],[205,13],[221,13],[224,13],[225,13],[226,13],[227,13],[335,13],[229,13],[336,13],[337,13],[338,13],[232,13],[178,13],[342,13],[234,13],[343,13],[235,13],[344,13],[236,13],[345,13],[346,13],[256,13],[347,13],[126,13],[350,13],[239,13],[352,13],[353,13],[88,13],[354,13],[317,13],[240,13],[355,13],[356,13],[320,13],[241,13],[357,13],[244,13],[361,13],[362,13],[363,13],[364,13],[365,13],[366,13],[167,13],[71,13],[22,13],[250,13],[213,13],[214,13],[215,13],[174,13],[168,13],[169,13],[175,13],[176,13],[177,13],[170,13],[171,13],[172,13],[173,13],[183,13],[185,13],[186,13],[[],303],0,[[[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[202,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[],292],[[220,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[220,[288,[[108,[5]]]]]],[[205,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[398,127],[[25,[127]]]],[[221,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[151,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[222,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[223,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[224,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[225,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[226,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[227,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[228,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[229,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[53,45],[[230,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[45,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[231,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[232,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[178,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[233,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[234,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[235,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[236,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[237,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[85,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[238,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[218,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[239,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[240,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[241,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[242,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[243,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[244,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[245,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[246,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[167,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[71,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[204,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[212,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[247,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[248,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[249,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[250,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[213,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[214,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[215,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[322,[[13,[541]]]],[[174,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[168,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[169,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[175,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[176,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[177,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[170,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[171,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[172,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[173,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[183,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[185,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[186,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[167,127],167],[[178,179]],[[200,14]],[[507,386,539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[386,539,554]],[[386,539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[539,554]],[[386,539,554]],[[386,539,554]],[[167,127],167],[[]],[51],[275],[276],[[181,395]],[[181,325]],[[181,168]],[[181,14]],[[181,14]],[[225,193]],[[225,193]],[195,28],[195,190],[[28,195],28],[191],[[190,195],190],[[200,[11,[532,10]]]],[195,28],[195,190],[[28,195],28],[191],[[190,195],190],[[167,127],167],[[88,224],88],[379],[[286,[25,[505]]]],[184],[[253,184]],[184],[[51,184]],[[275,184]],[[276,184]],[[181,14]],[[142,[22,[70]]]],[[181,14]],[[225,226]],[[181,353]],[[200,386]],[291,[[410,[418]]]],[[319,291],[[410,[418]]]],[[55,291],[[410,[418]]]],[[52,291,328],[[25,[427]]]],[71],[291,[[410,[418]]]],[[319,291],[[410,[418]]]],[[55,291],[[410,[418]]]],[[52,291,328],[[25,[427]]]],[[181,317,171]],[[181,550]],[[167,127],167],[[197,184,127]],[[151,127]],[[151,291]],[[181,14]],[[181,553]],[[181,127,127]],[200,200],[190,190],[[28,199],28],[[181,[25,[291]]]],[[507,386,554]],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[[386,554]],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[554],[[386,554]],[[386,554]],[[181,90]],[53],[248],[291,[[410,[418]]]],[[319,291],[[410,[418]]]],[[55,291],[[410,[418]]]],[[52,291,328],[[25,[427]]]],[[151,193]],0,0,[[171,555]],[[171,183]],[[171,184]],[[171,156]],[[171,171]],[[171,24]],[[171,182]],[[171,556]],[[172,556]],[[172,24]],[[172,184]],[[172,156]],[[172,182]],[[172,172]],[[172,555]],[[172,185]],[[173,555]],[[173,182]],[[173,186]],[[173,556]],[[173,24]],[[173,156]],[[173,173]],[[173,184]],[[183,171]],[[183,24]],[[183,555]],[[183,156]],[[183,182]],[[183,184]],[[183,556]],[[183,183]],[[185,24]],[[185,182]],[[185,184]],[[185,156]],[[185,555]],[[185,172]],[[185,556]],[[185,185]],[[186,24]],[[186,556]],[[186,186]],[[186,555]],[[186,156]],[[186,173]],[[186,184]],[[186,182]],0,[[171,156]],[[171,182]],[[171,555]],[[171,184]],[[171,183]],[[171,556]],[[171,171]],[[171,24]],[[172,556]],[[172,182]],[[172,184]],[[172,24]],[[172,172]],[[172,185]],[[172,156]],[[172,555]],[[173,186]],[[173,184]],[[173,156]],[[173,182]],[[173,173]],[[173,556]],[[173,555]],[[173,24]],[[183,156]],[[183,182]],[[183,184]],[[183,556]],[[183,24]],[[183,183]],[[183,171]],[[183,555]],[[185,184]],[[185,172]],[[185,182]],[[185,555]],[[185,556]],[[185,156]],[[185,185]],[[185,24]],[[186,156]],[[186,173]],[[186,24]],[[186,556]],[[186,184]],[[186,186]],[[186,555]],[[186,182]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[392,393],[[277,39]],[189,200],[389],[392,393],[[277,39]],[389],[[],200],[202,168],[22,312],[204,168],0,0,[[177,177,127],177],0,0,0,[142,40],0,0,0,[22,[[25,[164]]]],0,0,[71,12],[[188,557],414],[[426,[0,[557,543,544]]],416],[69,414],[39,416],[69],[39,558],[[188,557],414],[[426,[0,[557,543,544]]],416],[69,414],[188,414],[426,416],[69,414],[39,416],0,[14,213],[14,214],[14,215],[127,168],[127,169],[127,170],[182,171],[182,172],[182,173],[184,183],[184,185],[184,186],0,0,0,0,[[28,194],28],[[190,194],190],0,0,0,0,0,[[409,291],409],[151,307],0,[45,329],[45,329],[[319,45],329],[[55,45],329],[52,329],[[[53,[52]],45],329],0,0,0,0,0,0,[291,253],0,[291,253],[[],[[410,[419]]]],[319,[[410,[419]]]],[55,[[410,[419]]]],[[52,328],[[25,[427]]]],0,0,[39,38],0,[22,12],[[174,174]],[[168,127],168],[[168,168],168],[[169,169],169],[[169,127],169],[[175,175]],[[176,176]],[[177,177],177],[[170,127],170],[[170,170],170],[[171,182],171],[[171,171],171],[[172,172],172],[[172,182],172],[[173,182],173],[[173,173],173],[[183,183],183],[[183,184],183],[[185,184],185],[[185,185],185],[[186,184],186],[[186,186],186],[[28,198],28],[[28,198],28],0,[[174,174]],[[168,168]],[[168,127]],[[169,127]],[[169,169]],[[175,175]],[[176,176]],[[170,170]],[[170,127]],[[171,171]],[[171,182]],[[172,172]],[[172,182]],[[173,182]],[[173,173]],[[183,183]],[[183,184]],[[185,184]],[[185,185]],[[186,186]],[[186,184]],[[175,175],175],[[174,174],174],[[176,176],176],[[],174],[[],174],[[],168],[[],168],[[],169],[[],169],[[],175],[[],175],[[],176],[[],176],[[],177],[[],177],[[],170],[[],170],[[],171],[[],171],[[],172],[[],172],[[],173],[[],173],[[],183],[[],183],[[],185],[[],185],[[],186],[[],186],[[222,12,12]],[[[288,[479]],127],345],[[[288,[479]],[288,[479]],127],346],0,0,0,0,[[[11,[60,10]]],[[13,[[11,[60,10]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[225,193],225],[[178,307,307]],0,0,0,0,0,0,0,0,0,[225,184],0,[181,5],0,0,[168],[169],[177],[170],[171],[172],[173],[183],[185],[186],[177],[71,21],[174],[175],[176],[174],[175],[176],[[177,250]],[[242,183],[[25,[168]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[389,389],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[205],[176],[177,169],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[247],0,0,0,0,0,0,0,0,0,0,[[205,169],169],[[221,169],169],[[174,168],168],[[176,169],169],[[176,282],282],[[174,168],168],[[176,169],169],[[176,282],282],0,[[221,169,177]],[205,169],0,[205,282],[205,282],0,[174,174],[175,175],[176,176],[169,168],[170,169],[172,171],[173,172],[185,183],[186,185],[[22,382],14],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[479,[[13,[235,559]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[479,[[13,[347,559]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[22,[[13,[22]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[204,[[13,[476,32]]]],[[],[[13,[22,560]]]],[[],[[13,[[22,[285]],560]]]],[[],[[13,[[22,[285]],560]]]],[168,[[25,[168]]]],[169,[[25,[169]]]],[170,[[25,[170]]]],[[],[[13,[[546,[22]],560]]]],[22,[[13,[22]]]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],5],[202,5],[220,5],[205,5],[221,5],[151,5],[222,5],[223,5],[224,5],[225,5],[226,5],[[],5],[227,5],[[],5],[[],5],[228,5],[229,5],[230,5],[45,5],[231,5],[232,5],[178,5],[233,5],[234,5],[235,5],[236,5],[237,5],[85,5],[[],5],[238,5],[218,5],[[],5],[[],5],[239,5],[[],5],[240,5],[241,5],[242,5],[243,5],[244,5],[245,5],[[],5],[246,5],[167,5],[[],5],[[],5],[[],5],[71,5],[[],5],[[],5],[204,5],[212,5],[247,5],[248,5],[249,5],[250,5],[213,5],[214,5],[215,5],[174,5],[168,5],[169,5],[175,5],[176,5],[177,5],[170,5],[171,5],[172,5],[173,5],[183,5],[185,5],[186,5],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[340,45],[340,45],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],0,0,0,0,0,[[202,202],202],[[202,168],202],[151],[225],[22],[205,169],[221,169],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[28],[151],[[178,[43,[179,10]]]],[[243,127,127]],[[245,127,127]],[[246,127,127]],[321],[[181,171]],[[181,184,184]],[39],[[253,39]],[[386,539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[386,539,254]],[[386,539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[539,254]],[[386,539,254]],[[386,539,254]],[[277,39]],[[386,561]],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[[386,561]],[[386,561]],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[561],[[386,561]],[[386,561]],[[181,[25,[266]]]],[[181,14]],[142],[[181,291]],[[[51,[321]]]],[[151,307]],[[277,39]],[178,127],0,0,0,0,0,0,[226,12],[227,12],[232,12],[235,12],[239,12],[241,12],[243,12],[167,12],[226,5],[227,5],[232,5],[235,5],[239,5],[241,5],[243,5],[167,5],[226,562],[227,562],[232,562],[235,562],[239,562],[241,562],[243,562],[167,562],[[],563],[[200,5,43,19],[[13,[396]]]],0,0,0,[[242,205,168],[[25,[323]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],256],0,[502,45],[502,340],[22,12],[[34,21],340],[[88,500,352],[[43,[179,10]]]],[202,127],[181,127],0,0,0,0,[[212,24],212],[[[11,[284,10]]],196],[187],[187],[[426,187],426],[[345,127],345],[[346,127],346],[[328,530],328],[191,191],[[191,189],191],[[191,192],191],[191,191],[[191,189],191],[[191,192],191],[379,379],[[253,5],253],[12,324],[[409,291],409],[[409,291],409],[[197,184,127],197],[[221,177],221],[564,209],[200,200],[[192,564],192],[190,190],[[221,169],221],[197,197],[[190,194],190],[[190,194,194],190],[[190,194,194],190],[210,471],[[200,189],200],[[192,189],192],[[190,194,189],190],[[200,201],200],[[200,192],200],[[221,169],221],[[409,291],409],[[212,24],212],0,0,0,0,0,0,0,0,[[242,205,169],[[25,[169]]]],[[242,205,169],[[25,[168]]]],[151,193],0,[[565,39]],[[566,39]],[[421,39]],[[422,39]],[[423,39]],[[424,39]],[[425,39]],[174],[175],[176],[[167,567]],[[22,567]],[[174,567]],[[168,567]],[[169,567]],[[175,567]],[[176,567]],[[170,567]],[[171,567]],[[172,567]],[[173,567]],[[183,567]],[[185,567]],[[186,567]],[168],[169],[177],[170],[171],[172],[173],[183],[185],[186],[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[168,168],[169,168],[170,168],[171,171],[172,171],[173,171],[183,183],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[168,168],[169,168],[170,168],[171,171],[172,171],[173,171],[183,183],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[177,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,168],[170,168],[172,171],[173,171],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[168,168],[169,168],[170,168],[171,171],[172,171],[173,171],[183,183],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[168,168],[169,168],[170,168],[171,171],[172,171],[173,171],[183,183],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[168,169],[169,169],[170,169],[171,172],[172,172],[173,172],[183,185],[185,185],[186,185],[170,170],[173,173],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[168,170],[169,170],[170,170],[171,173],[172,173],[173,173],[183,186],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,168],[170,168],[172,171],[173,171],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],0,0,0,0,0,0,0,0,0,0,0,[170,168],[173,171],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[169,168],[170,168],[172,171],[173,171],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,168],[170,168],[172,171],[173,171],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,168],[170,168],[172,171],[173,171],[185,183],[186,183],[170,169],[173,172],[186,185],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[170,170],[173,173],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,169],[170,169],[172,172],[173,172],[185,185],[186,185],[170,170],[173,173],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],[169,170],[170,170],[172,173],[173,173],[185,186],[186,186],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[469,127],[282,282],[266,266],[267,267],[268,268],[[459,459,127],14],[[206,206,127],14],[[464,464,127],14],[[282,282,127],14],[[568,568,291],14],[[569,569,291],14],[[263,263,291],14],[[264,264,291],14],[[265,265,291],14],[[269,269,291],14],[[266,266,291],14],[[267,267,291],14],[[268,268,291],14],0,[570],[[469,469]],[571],[[464,464]],[[282,282],282],[[282,127],282],[[263,263]],[[264,264]],[[265,265]],[[269,269],269],[[266,291],266],[[266,266],266],[[267,291],267],[[267,267],267],[[268,291],268],[[268,268],268],[[469,469]],[[464,464]],[[282,282]],[[282,127]],[[263,263]],[[264,264]],[[265,265]],[[266,266]],[[266,291]],[[267,291]],[[267,267]],[[268,268]],[[268,291]],[[263,263],263],[[464,464],464],[[264,264],264],[[265,265],265],[572],[[573,572]],[574,574],[[575,127]],[[576,193]],0,[577,14],[384,14],[[282,282],127],[[269,269],291],[[266,266],291],[[267,267],291],0,[577,14],[384,14],[282,282],[267,267],[282],[267],[282,282],[267,267],[[577,60]],[[384,60]],[[459,60]],[[206,60]],[[464,60]],[[282,60]],[[568,60]],[[569,60]],[[263,60]],[[264,60]],[[265,60]],[[269,60]],[[266,60]],[[267,60]],[[268,60]],[578],[[579,578]],[[580,578]],[[580,578]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[577,1],[[],1],[[],1],[[],1],[[],1],[[],1],[384,1],[[],1],[[],1],[459,1],[[],1],[[],1],[[],1],[206,1],[[],1],[[],1],[464,1],[[],1],[[],1],[282,1],[[],1],[568,1],[[],1],[[],1],[569,1],[[],1],[263,1],[[],1],[[],1],[[],1],[[],1],[264,1],[265,1],[[],1],[[],1],[[],1],[269,1],[[],1],[[],1],[266,1],[[],1],[[],1],[[],1],[267,1],[268,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[577,1],[[],1],[[],1],[384,1],[459,1],[[],1],[206,1],[[],1],[[],1],[464,1],[282,1],[[],1],[568,1],[[],1],[569,1],[[],1],[263,1],[[],1],[[],1],[264,1],[265,1],[[],1],[[],1],[269,1],[266,1],[[],1],[[],1],[267,1],[268,1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[464,264],[282,267],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[269,177],[[],158],[[],158],[266,171],[282,172],[267,172],[268,173],[263,175],[264,174],[265,176],[282],[263],[264],[265],[266],[267],[268],[581],[282],[263],[264],[265],[269],[266],[267],[268],[577,60],[384,60],[459,60],[206,60],[464,60],[282,60],[568,60],[569,60],[263,60],[264,60],[265,60],[269,60],[266,60],[267,60],[268,60],[577,60],[384,60],[459,60],[206,60],[464,60],[282,60],[568,60],[569,60],[263,60],[264,60],[265,60],[269,60],[266,60],[267,60],[268,60],[469,469],[469],[266,183],[282,185],[267,185],[268,186],[266,168],[267,169],[267,282],[268,170],0,0,[469,127],[[],14],[[]],[[]],[[],14],[[12,14]],[[],12],[[],14],[[],14],[12],[[],582],[14],[[],12],[[]],[[],14],[[]],[[]],[12],[12],[[],14],[[],14],[12,14],[[]],[[577,577],577],[[384,384],384],[[577,577]],[[384,384]],[577,184],[384,184],[[577,577],577],[[384,384],384],0,[[577,577]],[[384,384]],[583,578],[579,578],[580,578],[584,578],[585,578],0,0,0,0,0,0,[[577,577],577],[[384,384],384],[[577,577]],[[384,384]],0,[[]],[581,586],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[587,586],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[588,579],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[581,589],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[587,589],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[588,580],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[282,282],[266,266],[267,267],[268,268],0,0,0,[[282,282,282],282],[[266,266,266],266],[[267,267,267],267],[[268,268,268],268],[[282,127,127],282],[[266,291,291],266],[[267,291,291],267],[[268,291,291],268],[[282,127],282],[[266,291],266],[[267,291],267],[[268,291],268],[[282,127],282],[[266,291],266],[[267,291],267],[[268,291],268],[585],[581,581],[590,590],[591,591],[592,592],[593,593],[586,586],[576,576],[594,594],[101,101],[595,595],[596,596],[597,597],[598,598],[599,599],[584,584],[600,600],[601,601],[602,602],[603,603],[604,604],[605,605],[606,606],[607,607],[575,575],[608,608],[609,609],[610,610],[469,469],[611,611],[612,612],[613,613],[614,614],[615,615],[616,616],[617,617],[618,618],[619,619],[620,620],[578,578],[588,588],[621,621],[622,622],[585,585],[623,623],[624,624],[625,625],[571,571],[40,40],[577,577],[384,384],[459,459],[206,206],[464,464],[282,282],[568,568],[569,569],[263,263],[264,264],[265,265],[269,269],[266,266],[267,267],[268,268],[459,61],[206,61],[464,61],[282,61],[568,61],[569,61],[263,61],[264,61],[265,61],[266,61],[267,61],[268,61],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[577,[[11,[60,10]]]],[384,[[11,[60,10]]]],[459,[[11,[60,10]]]],[206,[[11,[60,10]]]],[464,[[11,[60,10]]]],[282,[[11,[60,10]]]],[568,[[11,[60,10]]]],[569,[[11,[60,10]]]],[263,[[11,[60,10]]]],[264,[[11,[60,10]]]],[265,[[11,[60,10]]]],[269,[[11,[60,10]]]],[266,[[11,[60,10]]]],[267,[[11,[60,10]]]],[268,[[11,[60,10]]]],[[581,581],383],[[101,101],383],[[622,622],383],[[282,282],577],[[266,266],213],[[267,267],214],[[268,268],215],[[282,282],577],[[266,266],213],[[267,267],214],[[268,268],215],[[282,282],577],[[266,266],213],[[267,267],214],[[268,268],215],[[282,282],577],[[266,266],213],[[267,267],214],[[268,268],215],[[282,282],577],[[266,266],213],[[267,267],214],[[268,268],215],[[282,282],577],[[266,266],213],[[267,267],214],[[268,268],215],[[464,12],282],[[263,12],266],[[264,12],267],[[265,12],268],[[464,12],282],[[263,12],266],[[264,12],267],[[265,12],268],0,0,0,0,0,0,0,0,0,0,0,[269,269],[[583,622],14],[[579,622],14],[[580,622],14],[[578,622],14],[624,14],[585,622],[[],578],[[282,282],282],[[267,267],267],0,0,0,0,0,[101,138],[[577,19],[[13,[396]]]],[[384,19],[[13,[396]]]],[[459,19],[[13,[396]]]],[[206,19],[[13,[396]]]],[[464,19],[[13,[396]]]],[[282,19],[[13,[396]]]],[[568,19],[[13,[396]]]],[[569,19],[[13,[396]]]],[[263,19],[[13,[396]]]],[[264,19],[[13,[396]]]],[[265,19],[[13,[396]]]],[[269,19],[[13,[396]]]],[[266,19],[[13,[396]]]],[[267,19],[[13,[396]]]],[[268,19],[[13,[396]]]],0,[[]],[[],581],[[],590],[[],591],[[],592],[[],593],[[],576],[[],583],[[],594],[[],570],[[],101],[[],595],[[],596],[[],597],[[],598],[[],599],[[],601],[[],603],[[],606],[[],607],[[],575],[[],608],[[],609],[[],469],[[],611],[[],613],[[],614],[[],615],[[],616],[[],617],[[],619],[[],620],[[],578],[[],588],[[],621],[[],585],[[],623],[[],624],[[],571],[[],40],[[],577],[[],384],[[],459],[[],206],[[],464],[[],282],[[],568],[[],569],[[],263],[[],264],[[],265],[[],269],[[],266],[[],267],[[],268],[576,193],0,[576,127],0,[576,291],0,0,0,[12],[12],[12],[590],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[586],[12],[12],[589],[12],[12],[12],[12],[12],[12],[595],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[606],[12],[12],[12],[12],[12],[609],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[626],[12],[12],[12],[627],[12],[578],[12],[12],[12],[12],[12],[12],[12],[12],[12],[628],[12],[12],[12],[12],[12],[12],[459],[12],[206],[12],[282],[12],[12],[568],[569],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[590],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[589],[12],[12],[12],[12],[12],[12],[595],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[606],[12],[12],[12],[12],[12],[12],[609],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[627],[12],[578],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[628],[12],[12],[12],[12],[459],[12],[12],[206],[12],[282],[12],[12],[568],[12],[569],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[597]]]],[[],[[13,[598]]]],[[],[[13,[599]]]],[[],[[13,[605]]]],[[],[[13,[469]]]],[[],[[13,[611]]]],[[],[[13,[622]]]],[[],[[13,[577]]]],[[],[[13,[384]]]],[[],[[13,[459]]]],[[],[[13,[206]]]],[[],[[13,[464]]]],[[],[[13,[282]]]],[[],[[13,[568]]]],[[],[[13,[569]]]],[[],[[13,[263]]]],[[],[[13,[264]]]],[[],[[13,[265]]]],[[],[[13,[269]]]],[[],[[13,[266]]]],[[],[[13,[267]]]],[[],[[13,[268]]]],[464,127],[263,291],[264,291],[265,291],[[282,282],127],[[266,266],291],[[267,267],291],[[268,268],291],[[282,282],127],[[266,266],291],[[267,267],291],[[268,268],291],[[282,127],282],[[282,282],282],[[269,291],269],[[266,291],266],[[266,266],266],[[267,291],267],[[267,267],267],[[268,291],268],[[268,268],268],[[282,282]],[[282,127]],[[266,291]],[[266,266]],[[267,267]],[[267,291]],[[268,268]],[[268,291]],[[266,266],263],[[267,267,267],264],[[268,268,268,268],265],[[282,282],127],[[269,269],291],[[266,266],291],[[267,267],291],[[268,268],291],[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[291,291,291,291],269],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[584],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[610],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,0,[592,193],0,[[291,291],266],[[291,291,291],267],[[291,291,291,291],268],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[15],[15],[15],[15],[15],[15],[15],[15],[15],[591,193],[592,193],[576,193],0,0,[576,127],0,[576,291],0,[591,127],[592,127],[591,291],0,[[581,581],14],[[593,593],14],[[101,101],14],[[596,596],14],[[598,598],14],[[599,599],14],[[611,611],14],[[622,622],14],[[577,577],14],[[384,384],14],[[459,459],14],[[206,206],14],[[464,464],14],[[282,282],14],[[568,568],14],[[569,569],14],[[263,263],14],[[264,264],14],[[265,265],14],[[269,269],14],[[266,266],14],[[267,267],14],[[268,268],14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[282,282],[266,266],[267,267],[268,268],[[282,127],170],[[266,291],267],[[267,291],268],0,0,[[459,5],[[25,[60]]]],[[206,5],[[25,[60]]]],[[464,5],[[25,[60]]]],[[282,5],[[25,[60]]]],[[568,5],[[25,[60]]]],[[569,5],[[25,[60]]]],[[263,5],[[25,[60]]]],[[264,5],[[25,[60]]]],[[265,5],[[25,[60]]]],[[266,5],[[25,[60]]]],[[267,5],[[25,[60]]]],[[268,5],[[25,[60]]]],[[459,12],[[25,[60]]]],[[206,12],[[25,[60]]]],[[464,12],[[25,[60]]]],[[282,12],[[25,[60]]]],[[568,12],[[25,[60]]]],[[569,12],[[25,[60]]]],[[263,12],[[25,[60]]]],[[264,12],[[25,[60]]]],[[265,12],[[25,[60]]]],[[266,12],[[25,[60]]]],[[267,12],[[25,[60]]]],[[268,12],[[25,[60]]]],[[459,12],[[25,[60]]]],[[206,12],[[25,[60]]]],[[464,12],[[25,[60]]]],[[282,12],[[25,[60]]]],[[568,12],[[25,[60]]]],[[569,12],[[25,[60]]]],[[263,12],[[25,[60]]]],[[264,12],[[25,[60]]]],[[265,12],[[25,[60]]]],[[266,12],[[25,[60]]]],[[267,12],[[25,[60]]]],[[268,12],[[25,[60]]]],[459,12],[206,12],[464,12],[282,12],[568,12],[569,12],[263,12],[264,12],[265,12],[266,12],[267,12],[268,12],[[459,5],[[25,[60]]]],[[206,5],[[25,[60]]]],[[464,5],[[25,[60]]]],[[282,5],[[25,[60]]]],[[568,5],[[25,[60]]]],[[569,5],[[25,[60]]]],[[263,5],[[25,[60]]]],[[264,5],[[25,[60]]]],[[265,5],[[25,[60]]]],[[266,5],[[25,[60]]]],[[267,5],[[25,[60]]]],[[268,5],[[25,[60]]]],[586,[[25,[586]]]],[589,[[25,[589]]]],[592,14],0,0,0,0,0,0,0,0,[282,282],[266,266],[267,267],[268,268],[[581,19],[[13,[396]]]],[[629,19],[[13,[396]]]],[[629,19],[[13,[396]]]],[[630,19],[[13,[396]]]],[[630,19],[[13,[396]]]],[[582,19],[[13,[396]]]],[[582,19],[[13,[396]]]],[[582,19],[[13,[396]]]],[[582,19],[[13,[396]]]],[[591,19],[[13,[396]]]],[[592,19],[[13,[396]]]],[[593,19],[[13,[396]]]],[[586,19],[[13,[396]]]],[[576,19],[[13,[396]]]],[[589,19],[[13,[396]]]],[[594,19],[[13,[396]]]],[[101,19],[[13,[396]]]],[[101,19],[[13,[396]]]],[[596,19],[[13,[396]]]],[[597,19],[[13,[396]]]],[[598,19],[[13,[396]]]],[[599,19],[[13,[396]]]],[[600,19],[[13,[396]]]],[[601,19],[[13,[396]]]],[[602,19],[[13,[396]]]],[[603,19],[[13,[396]]]],[[604,19],[[13,[396]]]],[[605,19],[[13,[396]]]],[[575,19],[[13,[396]]]],[[469,19],[[13,[396]]]],[[631,19],[[13,[396]]]],[[631,19],[[13,[396]]]],[[611,19],[[13,[396]]]],[[611,19],[[13,[396]]]],[[612,19],[[13,[396]]]],[[612,19],[[13,[396]]]],[[613,19],[[13,[396]]]],[[614,19],[[13,[396]]]],[[572,19],[[13,[396]]]],[[615,19],[[13,[396]]]],[[616,19],[[13,[396]]]],[[617,19],[[13,[396]]]],[[618,19],[[13,[396]]]],[[619,19],[[13,[396]]]],[[620,19],[[13,[396]]]],[[578,19],[[13,[396]]]],[[622,19],[[13,[396]]]],[[625,19],[[13,[396]]]],[[571,19],[[13,[396]]]],[[632,19],[[13,[396]]]],[[632,19],[[13,[396]]]],[[577,19],[[13,[396]]]],[[577,19],[[13,[396]]]],[[384,19],[[13,[396]]]],[[384,19],[[13,[396]]]],[[459,19],[[13,[396]]]],[[459,19],[[13,[396]]]],[[206,19],[[13,[396]]]],[[206,19],[[13,[396]]]],[[464,19],[[13,[396]]]],[[464,19],[[13,[396]]]],[[282,19],[[13,[396]]]],[[282,19],[[13,[396]]]],[[568,19],[[13,[396]]]],[[568,19],[[13,[396]]]],[[569,19],[[13,[396]]]],[[569,19],[[13,[396]]]],[[263,19],[[13,[396]]]],[[263,19],[[13,[396]]]],[[264,19],[[13,[396]]]],[[264,19],[[13,[396]]]],[[265,19],[[13,[396]]]],[[265,19],[[13,[396]]]],[[269,19],[[13,[396]]]],[[269,19],[[13,[396]]]],[[266,19],[[13,[396]]]],[[266,19],[[13,[396]]]],[[267,19],[[13,[396]]]],[[267,19],[[13,[396]]]],[[268,19],[[13,[396]]]],[[268,19],[[13,[396]]]],[[],584],0,[282,282],[266,266],[267,267],[268,268],0,[454],[[],581],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],101],[[]],[633,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],469],[170,469],[[],469],[[]],[634,631],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[459,464],[[]],[174,464],[[[458,[127,456]]],282],[169,282],[[[465,[127]]],282],[170,282],[[[461,[[457,[127,456,456,[466,[127]]]]]]],282],[470,282],[[],282],[[]],[[],282],[[],282],[[[457,[127,456,456]]],282],[[]],[[]],[[]],[[[461,[[460,[291]]]]],263],[[[467,[291]]],263],[[[457,[291,456,456]]],263],[568,264],[[[457,[291,456,456]]],264],[[]],[[[462,[291,[461,[[460,[291]]]]]]],264],[[[463,[291,[461,[[460,[291]]]]]]],264],[[[457,[291,456,456]]],265],[569,265],[[[462,[291,[461,[[468,[291]]]]]]],265],[[[463,[291,[461,[[468,[291]]]]]]],265],[[]],[[]],[[[467,[291]]],269],[[[468,[291]]],269],[[[461,[[468,[291]]]]],269],[[[461,[[457,[291,456,456,[466,[291]]]]]]],266],[[],266],[[[457,[291,456,456]]],266],[[[465,[291]]],266],[[[458,[291,456]]],266],[[],266],[[]],[[],267],[[],267],[[[458,[291,456]]],267],[[[457,[291,456,456]]],267],[[],267],[[[461,[[457,[291,456,456,[466,[291]]]]]]],267],[[]],[[[465,[291]]],267],[[],268],[[]],[[],268],[269,268],[[[461,[[457,[291,456,456,[466,[291]]]]]]],268],[[[457,[291,456,456]]],268],[[],268],[[],268],[[[458,[291,456]]],268],[[],268],[[],268],[[[465,[291]]],268],[569,269],[127,459],[127,464],[291,568],[291,263],[291,264],[291,266],[[127,168],459],[[291,266],568],[[],282],[[],269],[[],266],[[],267],[[],268],[[169,127],206],[[169,127],464],[[267,291],569],[[267,291],264],[[267,291],265],[[267,291],269],[[168,168,168],459],[[282,282,282,282],206],[[282,282,282],464],[[266,266,266],568],[[267,267,267,267],569],[[266,266],263],[[267,267,267],264],[[268,268,268,268],265],[[],459],[[],206],[[],464],[[],568],[[],569],[[],263],[[],264],[[],265],[[],459],[[],206],[[],464],[[],568],[[],569],[[],263],[[],264],[[],265],[[],459],[[],206],[[],464],[[],568],[[],569],[[],263],[[],264],[[],265],[584,583],[584,583],[[[22,[[581,[584]]]]],588],[138,101],[138,101],[169,464],[266,263],[267,264],[268,265],[[250,127,127,127],464],[[250,291,291,291],264],[[250,291,291,291],265],[[250,291,291,291],269],[477],[477],[[]],[[]],[175,459],[175,464],[263,568],[263,264],[[175,168],459],[[263,266],568],[174,459],[174,206],[264,568],[264,569],[264,263],[264,265],[264,269],[[174,169],206],[[264,267],569],[464,459],[176,206],[176,464],[265,569],[265,264],[265,269],[[21,633],101],[177,206],[177,464],[269,569],[269,264],[269,265],[60,[[25,[459]]]],[60,[[25,[206]]]],[60,[[25,[464]]]],[60,[[25,[282]]]],[60,[[25,[568]]]],[60,[[25,[569]]]],[60,[[25,[263]]]],[60,[[25,[264]]]],[60,[[25,[265]]]],[60,[[25,[269]]]],[60,[[25,[266]]]],[60,[[25,[267]]]],[60,[[25,[268]]]],[177,620],[[267,267],269],[[266,266],269],[[267,267],269],[[177,169],206],[[269,267],569],[[269,267],265],[127,206],[127,464],[291,569],[291,264],[291,265],[291,269],[127,206],[127,464],[291,569],[291,264],[291,265],[291,269],[127,206],[127,464],[291,569],[291,264],[291,265],[291,269],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[169,620],[168,459],[169,206],[168,464],[266,568],[267,569],[266,264],[267,265],[[266,291],263],[[168,127,168],459],[[168,127,168],464],[[266,291,266],568],[[266,291,266],264],[[169,177,169],206],[[267,269,267],569],[[267,269,267],265],[267,269],[[127,593],592],[[],282],[[],269],[[],266],[[],267],[[],268],[477],[5,[[13,[101]]]],[5,[[13,[101,635]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[169,620],[168,459],[169,206],[168,464],[266,568],[267,569],[266,264],[267,265],[268,269],[40],[39],[40],[39],[40],[40],[39],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[39],[40],[40],[39],[39],[40],[40],[39],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[40],[39],[40],[39],[40],[39],[39],[40],[40],[39],[39],[40],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[39],[40],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[[291,291,291,291],269],[469,127],[622,184],0,0,0,[599,24],[598,25],[[636,599],24],[[637,598],25],[[638,598],25],[[639,584,622],25],[[583,622],25],[570,637],[[579,622],25],[[580,622],25],[[584,622],[[25,[24]]]],[[618,183],[[25,[622]]]],[621,588],[[623,101],[[25,[[22,[[581,[24]]]]]]]],[624,587],[596,44],[598,45],[599,340],[598,340],[[621,101],[[22,[[581,[584]]]]]],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[5,25],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[639,584]],[580],[584],[599,24],[598,25],[581],[[636,599],24],[[638,598],25],[[639,584,622],25],[[583,622],25],[570,638],[[580,622],25],[[584,622],[[25,[24]]]],[40,[[25,[587]]]],[40],[40],[40],[40],[40],[40],[577,62],[384,62],[459,62],[206,62],[464,62],[282,62],[568,62],[569,62],[263,62],[264,62],[265,62],[269,62],[266,62],[267,62],[268,62],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],0,0,[593],[101],[596],[598],[599],[611],[622],[577],[384],0,[[],[[13,[469,631]]]],0,[[],101],[[],101],[573,101],[625,101],0,0,0,0,[101,[[25,[101]]]],[622,184],[[282,12]],[[266,12]],[[267,12]],[[268,12]],0,0,[[282,12]],[[266,12]],[[267,12]],[[268,12]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[621],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[40],[40],[40],[40],[40],[[573,40]],[[572,40]],[40],[40],[40],0,[[574,40]],[[639,584,622],25],[[583,622],25],[[580,622],25],[[584,622,24],14],[[623,101,610],[[25,[610]]]],[624],[40],[574,574],[574,574],[574],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[577,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[384,10]]],[[11,[1,10]]]],[[[11,[459,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[206,10]]],[[11,[1,10]]]],[[[11,[464,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[282,10]]],[[11,[1,10]]]],[[[11,[568,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[569,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[263,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[264,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[265,10]]],[[11,[1,10]]]],[[[11,[269,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[266,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[267,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[268,10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[596,44],[469,167],[620,221],[581],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[577,10]]],[[11,[60,10]]]],[[[11,[384,10]]],[[11,[60,10]]]],[[[11,[459,10]]],[[11,[60,10]]]],[[[11,[206,10]]],[[11,[60,10]]]],[[[11,[464,10]]],[[11,[60,10]]]],[[[11,[282,10]]],[[11,[60,10]]]],[[[11,[568,10]]],[[11,[60,10]]]],[[[11,[569,10]]],[[11,[60,10]]]],[[[11,[263,10]]],[[11,[60,10]]]],[[[11,[264,10]]],[[11,[60,10]]]],[[[11,[265,10]]],[[11,[60,10]]]],[[[11,[269,10]]],[[11,[60,10]]]],[[[11,[266,10]]],[[11,[60,10]]]],[[[11,[267,10]]],[[11,[60,10]]]],[[[11,[268,10]]],[[11,[60,10]]]],[[],[[514,[90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[583,584],[624,623],[459,459],[206,206],[464,464],[568,568],[569,569],[263,263],[264,264],[265,265],[269,269],[[585,622],14],[459,14],[206,14],[464,14],[282,14],[568,14],[569,14],[263,14],[264,14],[265,14],[269,14],[266,14],[267,14],[268,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[459,14],[206,14],[464,14],[282,14],[568,14],[569,14],[263,14],[264,14],[265,14],[269,14],[266,14],[267,14],[268,14],[282,577],[266,213],[267,214],[268,215],[269,14],[282,184],[266,184],[267,184],[268,184],[101,14],[282,14],[269,14],[266,14],[267,14],[268,14],[576,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[639,584],137],[583,137],[579,137],[580,137],[584,137],0,0,[459,64],[206,64],[464,64],[282,64],[568,64],[569,64],[263,64],[264,64],[265,64],[266,64],[267,64],[268,64],[[639,584],137],[583,137],[580,137],[584,137],[[639,584,[23,[578]]],640],[[583,[23,[578]]],640],[[580,[23,[578]]],640],[[584,[23,[578]]],641],[585,642],[[[23,[578]]]],[[639,584,[23,[578]]],643],[[583,[23,[578]]],643],[[579,[23,[578]]]],[[579,[23,[578]]],643],[[580,[23,[578]]],643],[[580,[23,[578]]]],[[580,[23,[578]]]],[[584,[23,[578]]],644],[[585,578],645],[[182,182],171],[[182,182,182],172],[[182,182,182,182],173],[592,14],0,[[585,622]],[585,43],0,0,0,0,[584,646],0,0,0,[282,127],[269,291],[266,291],[267,291],[268,291],[282,127],[269,291],[266,291],[267,291],[268,291],[282,127],[269,291],[266,291],[267,291],[268,291],[[282,282,127],282],[[269,269,291],269],[[266,266,291],266],[[267,267,291],267],[[268,268,291],268],0,[[598,31,43]],[[169,169,169],206],[[267,267,267],569],[[267,267,267],265],[[169,169,169],206],[[267,267,267],569],[[267,267,267],265],[[169,169,169],206],[[267,267,267],569],[[267,267,267],265],[[169,169,169],206],[[267,267,267],569],[[267,267,267],265],[40],[586,586],[589,589],[[168,168],175],[[169,169,169],174],[[282,282,282],464],[[170,170,170,170],176],0,0,0,0,[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],0,[282,127],[266,291],[267,291],[268,291],0,0,[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],[282,127],[266,291],[267,291],[268,291],[592,593],0,[469],[469],[[469,127]],[[469,169]],[[469,170]],[[459,464]],[[459,174]],[[459,459]],[[206,176]],[[206,206]],[[464,282]],[[464,464]],[[464,459]],[[464,127]],[[464,169],169],[[282,282],282],[[282,127],282],[[568,568]],[[568,264]],[[569,569]],[[569,265]],[[263,263]],[[263,266]],[[263,291]],[[264,264]],[[264,267]],[[264,291]],[[264,568]],[[265,291]],[[265,265]],[[265,268]],[[265,569]],[[269,267]],[[269,269],269],[[269,291],269],[[266,291],266],[[266,266],266],[[267,267],267],[[267,291],267],[[268,291],268],[[268,268],268],[[282,282,282],282],[[266,266,266],266],[[267,267,267],267],[[268,268,268],268],[[469,170]],[469],[469],[[469,127]],[[469,169]],[[464,464]],[[464,127]],[[282,127]],[[282,282]],[[263,263]],[[263,291]],[[264,291]],[[264,264]],[[265,291]],[[265,265]],[[269,269]],[[266,291]],[[266,266]],[[267,291]],[[267,267]],[[268,268]],[[268,291]],[[263,263],263],[[464,464],464],[[264,264],264],[[265,265],265],[[269,269],269],[[464,127],464],[[263,291],263],[[264,291],264],[[265,291],265],[[263,266],266],[[464,169],169],[[264,267],267],[[269,267],267],[[464,282],282],[[265,268],268],[[]],[[],90],[[],90],[573,90],[572,5],[625,90],0,0,[[459,12],[[25,[5]]]],[[206,12],[[25,[5]]]],[[464,12],[[25,[5]]]],[[282,12],[[25,[5]]]],[[568,12],[[25,[5]]]],[[569,12],[[25,[5]]]],[[263,12],[[25,[5]]]],[[264,12],[[25,[5]]]],[[265,12],[[25,[5]]]],[[266,12],[[25,[5]]]],[[267,12],[[25,[5]]]],[[268,12],[[25,[5]]]],[464],[282,282],[263],[264],[265],[269,269],[266,266],[267,267],[268,268],[[],581],[[],591],[[193,593],592],[[],639],[307,576],[[],101],[[[25,[90]]],596],[[[25,[90]]],598],[[[25,[90]]],599],[[646,25],584],[[127,168,127,127],575],[[],610],[5,[[13,[611,612]]]],[[],573],[[[598,[615]]],617],[[183,168,[598,[615]]],618],[[184,184],622],[[],623],[[],624],[[],40],[[14,14,14],577],[[14,14,14,14],384],[[127,127,127],282],[[291,291],266],[[291,291,291],267],[[291,291,291,291],268],[647,610],[643,25],[640,25],[644,25],[641,25],[642,25],[645,25],0,0,0,[[],101],[282,282],[269,269],[266,266],[267,267],[268,268],[282,282],[266,266],[267,267],[268,268],[[596,41]],[577,577],[384,384],0,0,0,[[291,291,291,291,291,291],265],[[291,291,291,291,291,291],265],[[291,291,291,291,291,291],265],[[581,581],[[25,[383]]]],[[101,101],[[25,[383]]]],[[622,622],[[25,[383]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],0,0,0,[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],[591],[592],[576],[591,14],[592,14],0,0,[592,127],[592,127],[266,266],[[266,266],291],[[291,291,291],265],[[291,291,291],265],[[291,291,291],265],[[291,291,291],265],[[291,291,291,291],265],[[291,291,291,291],265],[[291,291,291,291],265],0,[[601,[598,[600]],127]],0,0,[[282,127],282],[[266,291],266],[[267,291],267],[[268,291],268],[[],459],[[],206],[[],464],[[],464],[[],282],[[],282],[[],568],[[],569],[[],263],[[],263],[[],264],[[],264],[[],265],[[],265],[[],269],[[],269],[[],266],[[],266],[[],267],[[],267],[[],268],[[],268],[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],[[265,267],267],[163],[163],[163],0,[[127,127,127,127],177],0,0,0,0,[469,127],[101,633],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[282,282],[266,266],[267,267],[268,268],[577,66],[384,66],[459,66],[206,66],[464,66],[282,66],[568,66],[569,66],[263,66],[264,66],[265,66],[269,66],[266,66],[267,66],[268,66],[[[11,[577,10]]],67],[[[11,[384,10]]],67],[[[11,[459,10]]],67],[[[11,[206,10]]],67],[[[11,[464,10]]],67],[[[11,[282,10]]],67],[[[11,[568,10]]],67],[[[11,[569,10]]],67],[[[11,[263,10]]],67],[[[11,[264,10]]],67],[[[11,[265,10]]],67],[[[11,[269,10]]],67],[[[11,[266,10]]],67],[[[11,[267,10]]],67],[[[11,[268,10]]],67],[[459,60],[[25,[14]]]],[[206,60],[[25,[14]]]],[[464,60],[[25,[14]]]],[[282,60],[[25,[14]]]],[[568,60],[[25,[14]]]],[[569,60],[[25,[14]]]],[[263,60],[[25,[14]]]],[[264,60],[[25,[14]]]],[[265,60],[[25,[14]]]],[[269,60],[[25,[14]]]],[[266,60],[[25,[14]]]],[[267,60],[[25,[14]]]],[[268,60],[[25,[14]]]],[577,68],[384,68],[459,68],[206,68],[464,68],[282,68],[568,68],[569,68],[263,68],[264,68],[265,68],[269,68],[266,68],[267,68],[268,68],[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],[[282,282],282],[[266,266],266],[[267,267],267],[[268,268],268],[[282,127],282],[[282,282],282],[[266,266],266],[[266,291],266],[[267,291],267],[[267,267],267],[[268,268],268],[[268,291],268],[[282,127]],[[282,282]],[[266,266]],[[266,291]],[[267,291]],[[267,267]],[[268,268]],[[268,291]],[592,193],[592,127],[[639,584,622],25],[[583,622],25],[570,[[11,[648,10]]]],[[580,622],25],[[584,622,[25,[24]]],14],[[623,101],[[25,[610]]]],0,[591],[592],[40,587],0,0,[[127,127,127],469],[[24,24,24],469],[[127,127,127,127],469],[[24,24,24,24],469],[[266,266],266],0,[282,282],[266,266],[267,267],[268,268],[[464,12],282],[[263,12],266],[[264,12],267],[[265,12],268],[40,[[13,[32]]]],[[574,40],[[13,[32]]]],[[573,40],[[13,[32]]]],[[572,40],[[13,[32]]]],0,[40,[[13,[32]]]],[40,[[13,[32]]]],0,[[577,282,282],282],[[213,266,266],266],[[214,267,267],267],[[215,268,268],268],[[601,602]],[[608,127]],[597,13],[598,13],[599,13],[605,13],[469,13],[611,13],[622,13],[577,13],[384,13],[459,13],[206,13],[464,13],[282,13],[568,13],[569,13],[263,13],[264,13],[265,13],[269,13],[266,13],[267,13],[268,13],[[618,183,[25,[622]]]],[[577,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[384,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[459,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[206,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[464,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[282,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[568,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[569,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[263,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[264,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[265,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[269,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[266,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[267,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[268,[11,[60,10]]],[[13,[[11,[60,10]]]]]],[[469,127],469],[[469,127],469],[[592,193]],[[591,193]],[[592,193]],[[469,127],469],[[592,593]],[[469,127],469],[282,282],[266,266],[267,267],[268,268],0,0,[[269,269,291],269],[631,[[25,[164]]]],0,[14,577],[14,384],[127,282],[291,266],[291,267],[291,268],0,0,0,0,[[464,464]],[[282,127],282],[[282,282],282],[[263,263]],[[264,264]],[[265,265]],[[269,269],269],[[266,291],266],[[266,266],266],[[267,291],267],[[267,267],267],[[268,291],268],[[268,268],268],[[464,464]],[[282,282]],[[282,127]],[[263,263]],[[264,264]],[[265,265]],[[266,266]],[[266,291]],[[267,291]],[[267,267]],[[268,291]],[[268,268]],[[263,263],263],[[464,464],464],[[264,264],264],[[265,265],265],[[],464],[[],464],[[],282],[[],282],[[],263],[[],263],[[],264],[[],264],[[],265],[[],265],[[],269],[[],269],[[],266],[[],266],[[],267],[[],267],[[],268],[[],268],0,[[],572],[572,572],0,0,[[591,193],591],[[592,193],592],0,0,0,0,[592,184],0,[101,21],[282],[269],[266],[267],[268],[269],[459],[206],[464],[568],[569],[263],[264],[265],[459],[206],[464],[568],[569],[263],[264],[265],[[269,250]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[206],[569],[265],[269,267],[101,[[13,[5,649]]]],[[],90],[[],90],[[],90],[[],90],[101,90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[459,168],168],[[464,168],168],[[568,266],266],[[264,266],266],[[206,169],169],[[569,267],267],[[265,267],267],[[206,282],282],[[459,168],168],[[464,168],168],[[568,266],266],[[264,266],266],[[206,169],169],[[569,267],267],[[265,267],267],[[206,282],282],0,0,0,0,0,[464,464],[263,263],[264,264],[265,265],0,[282,168],[267,266],[268,267],[581,[[13,[586,629]]]],[581,[[13,[589,630]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[5,[[13,[611]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[570,[[25,[637]]]],[621,[[13,[588,632]]]],[624,[[25,[587]]]],[[621,101],[[13,[[22,[[581,[584]]]],632]]]],[570,[[25,[638]]]],[621,[[13,[632]]]],[624,[[13,[632]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[282,[[25,[282]]]],[266,[[25,[266]]]],[267,[[25,[267]]]],[268,[[25,[268]]]],[570,[[25,[[11,[648,10]]]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[577,5],[384,5],[459,5],[206,5],[464,5],[282,5],[568,5],[569,5],[263,5],[264,5],[265,5],[269,5],[266,5],[267,5],[268,5],[599,598],0,[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[[],101],[591],[592],[576],[598,599],[624,623],0,0,0,0,[624,623],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[576],[[576,307]],[[184,184],183],[[184,184,184],185],[[184,184,184,184],186],0,0,0,[[127,127],168],[[127,127,127],169],[[127,127,127],282],[[127,127,127,127],170],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],574],[[],101],[[127,127,168,127,127],575],[459],[206],[464],[568],[569],[263],[264],[265],[282],[269],[266],[267],[268],[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[[]],[282,168],[266,266],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[[]],[282,168],[266,266],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[269,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,168],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[[]],[282,168],[266,266],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[[]],[282,168],[266,266],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[[]],[282,282],[266,267],[267,267],[268,267],[[]],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[[]],[282,170],[266,268],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,168],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[282,168],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,168],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,168],[267,266],[268,266],[[]],[268,267],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,282],[267,267],[268,267],[[]],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],[[]],[[]],[282,170],[267,268],[268,268],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[168,168],175],[[169,169,169],174],[[282,282,282],464],[[170,170,170,170],176],0,0,[[127,127,127,127],177],0,0,[[127,127],168],[[127,127,127],169],[[127,127,127],282],[[127,127,127,127],170],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[266,266],263],[[267,267,267],264],[[268,268,268,268],265],[[291,291,291,291],269],[[291,291],266],[[291,291,291],267],[[291,291,291,291],268],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[182,182],171],[[182,182,182],172],[[182,182,182,182],173],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[184,184],183],[[184,184,184],185],[[184,184,184,184],186],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[443,443],[444,444],[442,442],[447,447],[440,440],[650,650],[445,445],[448,448],[449,449],[441,441],[446,446],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],443],[[],444],[[],442],[[],447],[[],440],[[],650],[[],445],[[],448],[[],449],[[],441],[[],446],0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[168,442],[[443,19],[[13,[396]]]],[[444,19],[[13,[396]]]],[[442,19],[[13,[396]]]],[[447,19],[[13,[396]]]],[[440,19],[[13,[396]]]],[[650,19],[[13,[396]]]],[[445,19],[[13,[396]]]],[[448,19],[[13,[396]]]],[[449,19],[[13,[396]]]],[[441,19],[[13,[396]]]],[[446,19],[[13,[396]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[449,448],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[39],[40],[39],[39],[40],[39],[40],[40],[39],[39],[40],[39],[40],[39],[40],[39],[40],[40],[39],[39],[40],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,[127,443],[[127,127,127],444],[168,442],[[127,12],448],[127,449],0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[651],[430,430],[[[651,[13]]]],0,0,0,0,0,0,0,0,[39],[[652,39]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[653,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[654,28]],[[[25,[[51,[655]]]],389,[51,[81]]]],0,0,0,[[],142],[652,142],[12],[12],[12],[12],[655],[12],[12],[12],[12],[655],[12],[12],[[]],[[[11,[656]]],[[13,[[11,[656]],[11,[656]]]]]],[[]],[[]],[[]],[[]],[656,25],[[[23,[656]]],[[13,[[23,[656]],[23,[656]]]]]],[656,25],[12],[12],[12],[12],[12],[[[25,[[51,[655]]]],[50,[373]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,146],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[656,14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[],[[25,[12]]]],[652,[[25,[12]]]],[142,652],[[[50,[[55,[58]]]],[25,[[51,[655]]]]]],[[]],[652],[657],[151,152],[[652,151],152],0,[[[50,[151]],[25,[[51,[655]]]],[50,[[56,[7]]]],[50,[[56,[6]]]]],152],[[12,146]],[[652,12,146]],[[657,377,144]],[[657,377]],[657],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[39],[[]],[[]],[[]],[[]],[[]],[[],40],[655,40],0,0,0,0,0,0,0,0,0,0,0,[[658,659],658],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[],3],[[658,659],658],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[660,28]],[661,661],[662,662],[663,663],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,[[],[[666,[[0,[664,665]]]]]],[[],662],[[],663],[[],667],[12],[12],[12],[12],[12],[12],[12],[667],[668],[12],[12],[12],[12],[12],[12],[12],[667],[12],[668],[12],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[3,14],[15],0,[[661,661],14],[1,14],[[],14],[[661,19],20],[[662,19],20],[[663,19],20],[[]],[[]],[[]],[[]],[5,661],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[39],[40],[40],[39],[40],[39],[[],21],[[[50,[667]],[51,[180]],[389,[178]],[50,[[218,[239]]]],[51,[669]],[50,[662]],[51,[670]],[50,[[56,[8]]]]]],[661],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[5,661],0,[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],0,[[39,671,672,661]],0,[[658,659],658],[[]],[[]],[[]],[[658,659],658],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[[93,[[43,[[45,[29]]]]]],[51,[670]],[25,[[51,[668]]]],[25,[[50,[49]]]],[96,[[95,[29]]]],[50,[[53,[29]]]]]],[[[50,[49]],[51,[673]],[50,[180]],[389,[246,[674,[59]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,672,661]],[[662,659],658],0,[[661,5],661],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[675,28]],[[[51,[676]],[93,[14]],[51,[670]],[51,[677]],[50,[94]],[50,[[218,[239]]]],[51,[78]],[51,[678]],[25,[[51,[655]]]]]],[[],679],[[],676],[[],677],[[],678],[12],[12],[12],[676],[12],[12],[12],[12],[676],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[[93,[679]],[51,[670]],[51,[677]],[50,[680]],[50,[94]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[40],[39],[40],[39],[40],[39],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,[[[51,[677]],[51,[670]],[50,[94]]]],[[[25,[[51,[655]]]],[50,[676]]]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[681,28]],0,0,0,[[[25,[[51,[655]]]]]],0,[682,682],[683,683],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,0,0,0,[684],0,0,0,0,0,[685,686],0,[[],687],[[],688],[[],689],[[],682],[[],683],[[],690],[[],685],[[],691],[12],[12],[12],[12],[12],[682],[12],[12],[690],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[682],[12],[12],[12],[690],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[682]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[3,14],0,0,[39],0,[[685,685],14],[1,14],[[],14],[16,[[13,[17,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[40],[39],[40],[39],[39],[40],[40],[39],[40],[39],[39],[40],[40],[39],0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[687,14],[[672,692]],0,0,0,0,0,0,0,[[672,684]],0,0,0,[[672,693]],0,[[672,684]],0,0,0,[[672,5,5,127,187],694],0,[[24,24]],[[24,24]],[24],[24],[682,13],0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,671,672,661]],[[39,671,672,661]],[[39,671,672,661]],[[39,671,672,661]],0,[695,100],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[696,60]],[[],1],[[],1],[696,1],[[],1],[[],1],[[],1],[[],1],[696,1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[696,60],[696,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[697,28]],[[69,[389,[71,[674,[696]]]]]],[57,57],[696,61],[[]],[[],[[11,[9,10]]]],[696,[[11,[60]]]],0,[[37,38]],0,[[],57],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[696,5],[[25,[60]]]],[[696,12],[[25,[60]]]],[[696,12],[[25,[60]]]],[696,12],[[696,5],[[25,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],0,[[]],[5,25],[5,25],[696,62],[[],63],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[696]]],[[11,[1]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[[11,[696]]],[[11,[60]]]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[696,64],0,[39],0,0,0,0,[[696,12],[[25,[5]]]],0,[5,[[13,[60,65]]]],[5,[[13,[60,65]]]],0,0,[[24,24]],[24],[696,66],[[[11,[696]]],67],[[696,60],[[25,[14]]]],[696,68],[[696,[11,[60]]],[[13,[[11,[60]]]]]],0,[[69,[50,[49]],[50,[373]],657]],0,[[39,671,672,661]],[[39,671,672,661]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],62],[696,5],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,[[39,671,672,661]],0,[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],0,0,0,[[5,698,699,12],700],[[5,698,699,12],700],[[5,698,699,12],[[700,[90]]]],[[5,698,699,12],[[700,[701]]]],[[5,698,699,12],[[700,[702]]]],[[5,698,699,12],[[700,[90]]]],[[5,698,699,12],[[700,[703]]]],[[5,698,699,12],[[700,[704]]]],0,[[],1],[[],1],[2],[[]],[[]],[5,[[13,[701,705]]]],[12],[12],[[]],[12],[[]],[[]],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[],698],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[]],0,[[],1],[[],1],[2],[[]],[[]],0,0,[12],[12],[[]],[12],[[]],[[]],[[]],0,0,[706],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],0,0,0,0,0,0,0,0,[[39,671,672,661]],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],707],[[],708],[[],709],[[],710],[12],[12],[711],[12],[12],[12],[12],[12],[12],[12],[711],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[3,14],[3,14],[3,14],[[708,708],14],[[709,709],14],[[710,710],14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[39],[40],[39],[39],[40],[40],[39],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,671,672,661]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],712],[[],713],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[[714,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[39],[40],[39],0,0,[[12,88],714],[[714,80],90],[[12,80,88],[[25,[320]]]],[715],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,[[672,84,53,716]],0,0,0,0,0,0,[[39,671,672,661]],[[39,671,672,661,12]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[717,717],[[]],[[],[[11,[9,10]]]],0,0,0,0,[[],717],[[],718],[12],[718],[12],[12],[12],[718],[12],[12],[[]],[[]],[[]],[12],[12],[12],[3,14],[[717,717],14],[1,14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[39],[40],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],0,0,0,0,0,[[24,24]],[24],0,0,[[39,671,672,661]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],26],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[719,672,14]],[12],[12],[12],[12],[[]],[[]],[12],[12],[437,90],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[720,721],[[13,[[25,[437]]]]]],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],0,0,[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],25],[[],25],[[]],[[]],[[719,672,14]],[[672,49]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[722,28]],[723,723],[[]],[[],[[11,[9,10]]]],[[],723],[12],[12],[12],[12],[[]],[[]],[12],[12],[3,14],[[723,723],14],[1,14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[39],[40],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],[[69,[51,[670]],[50,[49]],[50,[94]],[389,[36]],[50,[[53,[361]]]],[51,[723]],657]],[39],[[69,[389,[178]]]],[[24,24]],[24],[[]],[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[69,[389,[178]],[51,[723]]]],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[],3],[[]],[[]],[[]],[[]],[[724,28]],[87,87],[[]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[[],[[13,[87]]]],[[]],[[]],[12],[12],[3,14],[15],[[87,87],14],[1,14],[[],14],[[87,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[12,[[25,[87]]]],[[],21],[87],[87,12],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],[[24,24]],[24],[[]],[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],25],[[],25],[[]],[[]],0,0,0,0,0,[[]],[672,659],[[118,5],659],0,[[],1],[[],1],[2],[[725,122],725],[[]],[[]],0,[12],[12],[[]],[12],[[725,14],725],0,[[]],[[]],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],14],[[725,726],725],0,[[725,727],725],0,[[[288,[728]]],725],[[725,[25,[122]]],725],0,[[725,[25,[122]]],725],0,[[725,726],725],0,[[725,729],725],0,[[725,672],659],0,[[121,[288,[730]]],725],[[]],[[],25],[[]],[[],13],[[],13],[[],26],[[725,672],659],[[],25],[[]],[[725,14],725],0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],0,[[731,672],732],0,[[731,14],731],0,[[731,127],731],0,[[]],[[]],[[]],[[]],0,[12],[12],[12],[12],[[]],[[]],[12],[12],[[732,672],659],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],[[731,726],731],0,[122,731],[[731,726],731],0,[[731,733],734],[[731,672,187],694],[[731,672,[11,[187]]],694],0,0,[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],26],[[],26],[[],25],[[],25],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[[]],[[]],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],14],[[],14],[735,[[13,[736]]]],[150,[[13,[736]]]],[735,[[13,[736]]]],[150,[[13,[736]]]],0,0,0,0,[735,[[13,[737]]]],[150,[[13,[737]]]],[735,[[13,[737]]]],[150,[[13,[737]]]],[[]],[[]],[[],25],[[],25],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[735,[[13,[738]]]],[150,[[13,[738]]]],[735,[[13,[739]]]],[150,[[13,[739]]]],[[],26],[[],26],[[],25],[[],25],[[]],[[]]],"p":[[8,"Any"],[3,"RenderAssets"],[8,"DynEq"],[4,"RollbackStage"],[15,"str"],[4,"EngineState"],[4,"InGameState"],[4,"GameEditorState"],[8,"TypeData"],[3,"Global"],[3,"Box"],[15,"usize"],[4,"Result"],[15,"bool"],[8,"Hasher"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Arc"],[3,"Rc"],[15,"u8"],[4,"Option"],[3,"TypeId"],[3,"JumpyAssetPlugin"],[3,"App"],[3,"EguiFont"],[3,"EguiFontLoader"],[3,"LoadContext"],[3,"Error"],[6,"BoxedFuture"],[3,"Uuid"],[8,"Asset"],[3,"AssetHandle"],[3,"Components"],[3,"Storages"],[3,"World"],[3,"World"],[3,"Path"],[3,"PathBuf"],[3,"Vec"],[3,"AssetPath"],[3,"Handle"],[3,"JumpyAudioPlugin"],[4,"MusicState"],[3,"ShuffledPlaylist"],[3,"GameMeta"],[3,"Res"],[3,"ResMut"],[3,"AudioInstance"],[3,"Assets"],[3,"MusicChannel"],[3,"AudioChannel"],[3,"CurrentState"],[4,"MenuPage"],[3,"EffectsChannel"],[3,"MenuCamera"],[8,"Reflect"],[3,"DynamicStruct"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"FieldIter"],[4,"ReflectPathError"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectRef"],[3,"Commands"],[3,"CoreMeta"],[3,"Entity"],[3,"Command"],[3,"EngineConfig"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"JumpyDebugPlugin"],[3,"WorldInspectorEnabled"],[3,"JumpyPlayerInputPlugin"],[4,"PlayerAction"],[3,"CurrentEditorInput"],[3,"JumpyLoadingPlugin"],[3,"GameMetaHandle"],[3,"PlayerMeta"],[3,"TextureAtlas"],[3,"GameLoader"],[4,"MenuAction"],[3,"InputMap"],[3,"JumpyLocalizationPlugin"],[3,"String"],[3,"Locale"],[3,"BundleAsset"],[3,"Local"],[3,"Localization"],[4,"AssetEvent"],[3,"EventReader"],[3,"MusicMeta"],[3,"MainMenuMeta"],[3,"ImageMeta"],[3,"Color32"],[3,"Ulid"],[3,"AssetLoader"],[3,"TranslationsMeta"],[3,"Settings"],[3,"PlayerControlMethods"],[3,"PlayerControls"],[3,"Storage"],[4,"Cow"],[3,"ButtonStylesMeta"],[3,"UiThemeEditorIcons"],[3,"UIThemeMeta"],[3,"UiThemeEditor"],[3,"UiThemeColors"],[3,"UiThemeWidgets"],[3,"WidgetStyle"],[3,"FontStylesMeta"],[3,"FontFamily"],[3,"FontMeta"],[3,"HudThemeMeta"],[3,"PanelThemeMeta"],[3,"ButtonThemeMeta"],[3,"BorderImageMeta"],[3,"ProgressBarMeta"],[3,"ButtonBordersMeta"],[3,"MarginMeta"],[3,"ColorMeta"],[15,"f32"],[3,"FontId"],[3,"Widgets"],[3,"WidgetVisuals"],[3,"NetworkingPlugin"],[3,"GgrsConfig"],[6,"Result"],[3,"SkipServerVerification"],[3,"Certificate"],[4,"ServerName"],[8,"Iterator"],[3,"SystemTime"],[3,"ServerCertVerified"],[4,"Error"],[3,"LanSessionRunner"],[3,"CoreSession"],[3,"LanMatchmaker"],[3,"LanSessionInfo"],[3,"LanSocket"],[3,"PlayerControl"],[3,"DensePlayerControl"],[4,"LanMatchmakerRequest"],[4,"LanMatchmakerResponse"],[3,"BiChannelServer"],[3,"Time"],[4,"ShouldRun"],[3,"Message"],[3,"DynamicTupleStruct"],[3,"DenseMoveDirection"],[15,"u16"],[3,"TupleStructFieldIter"],[8,"Fail"],[3,"JumpyPlatformPlugin"],[4,"StorageError"],[3,"Error"],[3,"SaveTask"],[3,"Demand"],[8,"Error"],[4,"StorageRequest"],[3,"Sender"],[4,"Color"],[3,"Vec2"],[3,"Vec3"],[3,"Vec4"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Mat3"],[3,"Mat2"],[3,"Mat4"],[3,"Quat"],[3,"ActionState"],[3,"ActionData"],[3,"Windows"],[3,"Window"],[15,"i32"],[3,"UVec2"],[15,"u32"],[3,"UVec3"],[3,"UVec4"],[8,"FnOnce"],[3,"ChildBuilder"],[8,"IntoSystemDescriptor"],[3,"Schedule"],[3,"StateTransitionStage"],[3,"SystemSet"],[3,"Duration"],[8,"StageLabel"],[8,"Stage"],[3,"AssetServer"],[3,"FixedTimestepStage"],[8,"AppLabel"],[8,"Fn"],[3,"SystemStage"],[3,"RunCriteriaDescriptor"],[3,"Rect"],[3,"TextureAtlasBuilder"],[3,"Image"],[3,"GlobalTransform"],[3,"Affine3A"],[8,"RunCriteriaLabel"],[8,"AsSystemLabel"],[3,"SystemDescriptor"],[3,"ConditionSet"],[8,"SystemLabel"],[3,"RenderLayers"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[4,"CompositeAlphaMode"],[3,"Touches"],[3,"Input"],[8,"IntoIterator"],[3,"Name"],[3,"Transform"],[3,"Children"],[3,"Parent"],[3,"Gamepad"],[3,"Timer"],[4,"TimerMode"],[4,"GamepadEventType"],[3,"ColorMaterial"],[3,"GamepadEvent"],[3,"ClearColor"],[3,"Camera2d"],[4,"GamepadButtonType"],[3,"Camera3d"],[3,"GamepadButton"],[4,"GamepadAxisType"],[3,"GamepadAxis"],[3,"Sprite"],[3,"TextureAtlasSprite"],[4,"KeyCode"],[3,"ScanCode"],[4,"MouseButton"],[3,"Camera"],[4,"Projection"],[3,"TouchInput"],[3,"PerspectiveProjection"],[3,"OrthographicProjection"],[3,"Visibility"],[3,"ComputedVisibility"],[3,"Msaa"],[4,"EulerRot"],[3,"ReflectComponent"],[3,"ReflectResource"],[3,"FixedTimestep"],[3,"Access"],[3,"Archetypes"],[3,"VirtualDPad"],[3,"BindGroupLayout"],[3,"RenderDevice"],[3,"FallbackImage"],[3,"PreparedBindGroup"],[4,"AsBindGroupError"],[3,"ColorMaterialUniform"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"DQuat"],[3,"BorrowedFd"],[3,"FilelikeView"],[3,"StageLabelId"],[3,"SystemLabelId"],[3,"RunCriteriaLabelId"],[3,"NonSendMut"],[3,"Mut"],[3,"QueryState"],[3,"SocketlikeView"],[4,"CoreStage"],[3,"StartupSchedule"],[4,"StartupStage"],[3,"Vec3A"],[3,"EventWriter"],[8,"AssetIo"],[19,"MaybeUninit"],[3,"Mesh"],[3,"MeshVertexAttributeId"],[8,"Into"],[4,"VertexAttributeValues"],[3,"DualAxisData"],[15,"f64"],[3,"PluginGroupBuilder"],[3,"DefaultPlugins"],[3,"MinimalPlugins"],[3,"GilrsPlugin"],[3,"WindowPlugin"],[3,"CorePlugin"],[3,"ValidParentCheckPlugin"],[3,"TransformPlugin"],[3,"JumpyCoreAssetsPlugin"],[3,"HierarchyPlugin"],[3,"AudioPlugin"],[3,"InputManagerPlugin"],[3,"AssetPlugin"],[3,"ImagePlugin"],[3,"NewRenoConfig"],[3,"Instant"],[8,"Controller"],[3,"BbrConfig"],[3,"CubicConfig"],[3,"Bundles"],[3,"NonZeroU64"],[8,"Filter"],[3,"Metadata"],[3,"Interest"],[3,"WorldCell"],[4,"MonitorSelection"],[3,"DynamicAudioChannels"],[3,"DynamicAudioChannel"],[4,"UserInput"],[3,"Events"],[3,"State"],[3,"Ray"],[3,"TaskPoolOptions"],[4,"CursorIcon"],[3,"AppTypeRegistry"],[3,"TransformBundle"],[3,"AudioTween"],[4,"PlaybackState"],[3,"AudioSettings"],[3,"NextState"],[3,"SpriteBundle"],[3,"SpriteSheetBundle"],[3,"AudioSource"],[3,"CursorMoved"],[3,"CursorEntered"],[3,"CursorLeft"],[3,"ReceivedCharacter"],[3,"ChangeTrackers"],[3,"HandleUntyped"],[3,"ActionStateDriver"],[4,"FileDragAndDrop"],[4,"EditorInput"],[3,"WindowMoved"],[3,"SingleAxis"],[3,"DualAxis"],[4,"MouseWheelAxisType"],[3,"ElementMeta"],[3,"ElementEditorMeta"],[4,"MouseWheelDirection"],[3,"BulletMeta"],[4,"ClashStrategy"],[4,"WindowMode"],[4,"WindowPosition"],[3,"WindowDescriptor"],[3,"PhantomData"],[4,"Modifier"],[4,"BuiltinElementKind"],[3,"ReflectSerialize"],[3,"ReflectDeserialize"],[3,"MapMeta"],[3,"BackgroundMeta"],[3,"ParallaxLayerMeta"],[3,"MapLayerMeta"],[3,"ElementSpawn"],[3,"MapTileMeta"],[3,"PlayerLayersMeta"],[3,"PlayerBodyLayerMeta"],[3,"BodyAnimationsMeta"],[3,"PlayerLayerMeta"],[3,"PlayerStatsMeta"],[3,"PlayerSoundsMeta"],[3,"CoreMetaArc"],[3,"CameraMeta"],[3,"PhysicsMeta"],[3,"CoreConfigMeta"],[3,"CoreSessionInfo"],[3,"GameSessionPlayerInfo"],[3,"Shader"],[3,"ReflectDefault"],[3,"DynamicEnum"],[3,"Id"],[4,"Ordering"],[3,"BVec4A"],[3,"ParallelCommands"],[3,"ComponentId"],[3,"Aabb"],[3,"Gamepads"],[3,"Query"],[4,"TextureFormat"],[3,"Reader"],[3,"FixedTimesteps"],[3,"FixedTimestepInfo"],[3,"Current"],[4,"CursorGrabMode"],[3,"Error"],[3,"Lazy"],[3,"Axis"],[3,"Camera2dBundle"],[3,"Camera3dBundle"],[3,"ToggleActions"],[3,"InputManagerBundle"],[3,"SpatialBundle"],[3,"VisibilityBundle"],[3,"NonSend"],[3,"Rotation"],[8,"Plugin"],[3,"Weak"],[3,"PlayAudioCommand"],[3,"TweenCommand"],[3,"Metadata"],[3,"Context"],[3,"Entities"],[3,"EntityCommands"],[3,"EntityRef"],[3,"EntityMut"],[3,"Event"],[3,"FadeIn"],[3,"FadeOut"],[4,"TextureAtlasBuilderError"],[3,"DespawnRecursive"],[3,"DespawnChildrenRecursive"],[3,"AddChild"],[3,"InsertChildren"],[3,"PushChildren"],[3,"WorldChildBuilder"],[4,"AudioCommandError"],[8,"System"],[3,"RunCriteria"],[8,"FnMut"],[4,"ShaderRef"],[3,"Direction"],[3,"StaticSoundHandle"],[4,"CommandError"],[3,"RandomState"],[3,"HashMap"],[4,"InputKind"],[3,"VirtualAxis"],[4,"MouseMotionDirection"],[3,"Capsule"],[3,"Torus"],[3,"Quad"],[3,"Cube"],[3,"Box"],[3,"Icosphere"],[3,"UVSphere"],[3,"Plane"],[3,"RegularPolygon"],[3,"Circle"],[3,"OsStr"],[3,"Vec1"],[3,"CString"],[3,"CStr"],[15,"never"],[3,"OsString"],[3,"Const"],[3,"Matrix"],[3,"OPoint"],[3,"Affine2"],[3,"Complex"],[3,"Unit"],[3,"Similarity"],[3,"Isometry"],[3,"Mat3A"],[3,"Translation"],[3,"ArrayStorage"],[3,"Rotation"],[3,"Quaternion"],[4,"Color"],[3,"__m128"],[3,"ConditionSystemSet"],[3,"NavNode"],[4,"ImageType"],[3,"CompressedImageFormats"],[4,"TextureError"],[4,"DynamicImage"],[3,"OwnedFd"],[4,"ShaderStage"],[4,"AxisType"],[4,"GenerateTangentsError"],[4,"QueryEntityError"],[3,"PetitSet"],[3,"WindowId"],[3,"Ptr"],[4,"QueryComponentError"],[8,"Struct"],[8,"TupleStruct"],[4,"LoadState"],[8,"ExactSizeIterator"],[3,"InnerMeshVertexBufferLayout"],[3,"FixedState"],[3,"Hashed"],[3,"MutUntyped"],[3,"SystemMeta"],[3,"Touch"],[3,"ManualEventReader"],[4,"Serializable"],[4,"QuerySingleError"],[3,"AppLabelId"],[3,"InputStreams"],[4,"HexColorError"],[4,"HandleId"],[3,"WorldId"],[4,"ShaderImport"],[4,"Indices"],[3,"ComponentDescriptor"],[3,"ChangeTrackersFetch"],[3,"MeshVertexAttribute"],[3,"OwningPtr"],[3,"ComponentInfo"],[4,"RunCriteriaDescriptorOrLabel"],[3,"ConditionalSystemDescriptor"],[3,"RemovedComponents"],[4,"Resettable"],[3,"QueryIter"],[3,"Iter"],[3,"Cloned"],[8,"DoubleEndedIterator"],[3,"AncestorIter"],[3,"QueryCombinationIter"],[3,"DescendantIter"],[3,"VariantFieldIter"],[3,"QueryManyIter"],[4,"AssetServerError"],[3,"Record"],[3,"EntityMap"],[4,"MapEntitiesError"],[3,"LevelFilter"],[3,"HashSet"],[4,"Easing"],[3,"RawHandleWrapper"],[8,"ParallelSystemExecutor"],[3,"CommandQueue"],[4,"PrimitiveTopology"],[3,"Extent3d"],[4,"TextureDimension"],[3,"ReflectComponentFns"],[3,"ReflectResourceFns"],[3,"Archetype"],[3,"Attributes"],[4,"StateError"],[3,"ParamSet"],[8,"Send"],[8,"Sync"],[8,"Clone"],[3,"Pin"],[3,"PipeSystem"],[8,"IntoSystem"],[4,"PrepareAssetError"],[4,"PresentMode"],[3,"RawInputs"],[3,"Record"],[3,"WindowResizeConstraints"],[3,"Table"],[15,"i16"],[15,"i8"],[8,"Bundle"],[3,"SpawnBatchIter"],[3,"AxisConversionError"],[3,"AllocError"],[3,"FilteredAccess"],[4,"VariantType"],[3,"ActionIter"],[8,"IntoRunCriteria"],[3,"RemoveChildren"],[3,"RemoveParent"],[3,"Writer"],[3,"DAffine2"],[3,"DAffine3"],[3,"AssetProviders"],[3,"CommandQueue"],[3,"System"],[3,"SimpleSystemStage"],[3,"SystemStages"],[3,"CameraShake"],[3,"Time"],[3,"BVec3A"],[3,"BitSetVec"],[3,"AtomicComponentStoreRef"],[3,"AtomicComponentStoreRefMut"],[3,"AtomicRefCell"],[3,"BitFmt"],[3,"ComponentStore"],[3,"UntypedComponentStore"],[3,"Entities"],[3,"AtomicRef"],[3,"AtomicResource"],[3,"AtomicComponentStore"],[3,"AtomicRefMut"],[3,"BevyWorld"],[3,"Stopwatch"],[3,"Timer"],[4,"TimerMode"],[3,"Window"],[3,"AssetProvidersResource"],[3,"AssetPath"],[3,"AnimatedSprite"],[3,"Handle"],[3,"UntypedHandle"],[3,"AudioSource"],[3,"AudioEvents"],[4,"AudioEvent"],[3,"Camera"],[3,"Viewport"],[3,"AnimationBankSprite"],[3,"ClearColor"],[3,"ShakeNoise"],[3,"CameraTraumaEvents"],[3,"FrameTime"],[3,"UntypedResource"],[3,"Key"],[4,"KeyError"],[3,"Path2d"],[3,"Image"],[3,"Atlas"],[3,"Sprite"],[3,"AtlasSprite"],[3,"TileLayer"],[3,"Tile"],[3,"Transform"],[3,"ComponentStores"],[3,"Entity"],[3,"UntypedResources"],[3,"Resources"],[4,"CoreStage"],[3,"Res"],[3,"ResMut"],[3,"Commands"],[3,"BorrowError"],[3,"BorrowMutError"],[4,"HexColorError"],[4,"EcsError"],[15,"u128"],[4,"FromHexError"],[4,"DecodeError"],[8,"AssetProvider"],[3,"AssetProviderRef"],[3,"AssetProviderMut"],[3,"TypedComponentOps"],[3,"ComponentBitsetIteratorMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"EntitiesIterWith"],[3,"ComponentBitsetIterator"],[3,"UntypedComponentBitsetIterator"],[3,"EntityIterator"],[3,"Layout"],[3,"UntypedResourceInfo"],[8,"UntypedAssetProvider"],[4,"EncodeError"],[4,"CapsuleUvProfile"],[3,"In"],[3,"LocalSessionRunner"],[4,"SessionStage"],[3,"JumpySessionPlugin"],[3,"Session"],[8,"SessionRunner"],[3,"SessionManager"],[3,"WidgetAdjacencyEntry"],[3,"Response"],[3,"JumpyUiPlugin"],[3,"WidgetId"],[3,"WidgetAdjacencies"],[3,"WidgetAdjacency"],[8,"Default"],[8,"WidgetSystem"],[3,"StateInstances"],[3,"DisableMenuInput"],[3,"EguiFontDefinitions"],[3,"EguiRenderInputContainer"],[3,"EguiContext"],[3,"SystemState"],[3,"Ui"],[3,"EguiSettings"],[3,"With"],[3,"DebugToolsPlugin"],[3,"CoreDebugSettings"],[3,"ShowDebugWindows"],[3,"BonesSnapshot"],[3,"FrameDiagState"],[3,"Diagnostics"],[3,"EditorPlugin"],[3,"UserMapStorage"],[3,"EditorCameraPos"],[3,"EditorCentralPanel"],[4,"EditorTool"],[4,"CursorIcon"],[3,"MapCreateInfo"],[3,"EditorCursor"],[3,"EditorState"],[3,"EditorMapExport"],[3,"LayerCreateInfo"],[3,"EditorRightToolbar"],[3,"EditorTopBar"],[3,"InnerResponse"],[4,"TileCollisionKind"],[3,"MainMenuBackground"],[3,"MainMenuPlugin"],[3,"ParseState"],[3,"ErrorState"],[4,"RuleResult"],[3,"Credits"],[3,"CreditsEntry"],[3,"CreditsHandle"],[3,"CreditsSection"],[3,"ParseError"],[3,"MapSelectMenu"],[3,"State"],[4,"Status"],[4,"MatchKind"],[4,"LanMode"],[3,"Pinger"],[3,"PlayerSelectState"],[3,"PlayerSlot"],[3,"PlayerActionMap"],[3,"PlayerSelectMenu"],[3,"PlayerAtlasEguiTextures"],[4,"SettingsTab"],[3,"ModifiedSettings"],[3,"SettingsMenu"],[3,"ControlInputBindingEvents"],[4,"BindingKind"],[3,"PausePlugin"],[4,"PauseMenuPage"],[3,"UiInputPlugin"],[3,"BorderedButton"],[3,"Margin"],[3,"Vec2"],[4,"WidgetText"],[3,"Sense"],[3,"RichText"],[3,"BorderedFrame"],[3,"BorderedFramePrepared"],[3,"Rect"],[4,"Shape"],[3,"BiChannelClient"],[3,"RecvError"],[3,"SendError"],[4,"TryRecvError"],[4,"TrySendError"],[13,"Fight"],[3,"PlayerInputCollector"],[8,"LocalizationExt"],[8,"ColorMetaExt"],[13,"JoinServer"],[13,"StartServer"],[13,"GameStarting"],[13,"Save"],[13,"Load"],[8,"SystemParam"],[8,"DetectChanges"],[8,"Actionlike"],[8,"Component"],[8,"Deref"],[8,"TypeUlid"],[8,"AddAsset"],[8,"AudioApp"],[8,"BuildChildren"],[8,"AppLooplessStateExt"],[8,"ScheduleLooplessStateExt"],[8,"AppLooplessFixedTimestepExt"],[8,"ScheduleLooplessFixedTimestepExt"],[8,"AddConditionalToSet"],[8,"RunCriteriaDescriptorCoercion"],[3,"MainTrack"],[3,"AnyOf"],[3,"Without"],[3,"Or"],[3,"Added"],[3,"Changed"],[8,"PluginGroup"],[8,"Deserialize"],[8,"DespawnRecursiveExt"],[8,"FromReflect"],[8,"FromWorld"],[8,"GetField"],[8,"GetTupleStructField"],[8,"BuildWorldChildren"],[8,"BonesBevyAsset"],[8,"IntoConditionalSystem"],[8,"AudioControl"],[8,"HierarchyQueryExt"],[8,"BonesBevyAssetLoad"],[8,"IntoPipeSystem"],[8,"MockInput"],[8,"SystemParamFunction"],[8,"ConditionHelpers"],[8,"Serialize"],[8,"AudioInstanceAssetsExt"],[13,"Created"],[13,"Modified"],[13,"Removed"],[13,"Grenade"],[13,"Sword"],[13,"KickBomb"],[13,"Musket"],[13,"Mine"],[13,"AnimatedDecoration"],[13,"Crab"],[13,"Snail"],[13,"Sproinger"],[13,"Crate"],[13,"SlipperySeaweed"],[13,"Slippery"],[13,"FishSchool"],[13,"Urchin"],[13,"StompBoots"],[13,"Rgba"],[13,"RgbaLinear"],[13,"Hsla"],[13,"SetTile"],[13,"MoveLayer"],[13,"MoveEntity"],[13,"DeleteEntity"],[13,"SpawnElement"],[13,"SetTilemap"],[13,"CreateLayer"],[13,"RenameLayer"],[13,"DeleteLayer"],[13,"RenameMap"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"HoveredFileCancelled"],[13,"Paused"],[13,"Pausing"],[13,"Playing"],[13,"Stopping"],[8,"QueryItem"],[8,"SystemParam"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"SystemStage"],[8,"BitSet"],[8,"FromWorld"],[8,"StageLabel"],[8,"IntoBevy"],[8,"RawFns"],[8,"IntoSystem"],[8,"UnwrapMany"],[13,"PlaySound"],[13,"Rgba"],[3,"EditorLeftToolbar"],[3,"MapTilesetEguiTextureinfo"],[3,"MapTilesetEguiTextures"],[3,"MainMenu"],[3,"HomeMenu"],[13,"MapSelect"],[3,"CreditsMenu"],[3,"ServerInfo"],[3,"MatchmakingMenu"],[13,"Host"],[3,"PlayerSelectPanel"],[8,"EguiContextExt"],[8,"EguiResponseExt"],[8,"EguiUiExt"]],"a":{"&*":[2981],"*":[2981],"cross":[13130,13131,22708],"determinant":[13130,13131,22708],"magnitude":[12468,12469,12470,12471,22430,22431,22432,22433,22434],"magnitude2":[12476,12477,12478,12479,22440,22441,22442,22443,22444],"mix":[12480,12481,12482,12483,22445,22446,22447,22448,22449],"mouse position":[6423],"repeating":[23064],"scale":[9099,9100,9101,21084,21085,21086,21087],"set_vsync":[14290],"vsync":[13181,13183],"wedge":[13130,13131,22708],"world_to_screen":[17018]}},\
"jumpy_core":{"doc":"Jumpy Core","t":[17,17,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,2,2,2,2,2,0,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,13,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,18,18,3,3,3,3,3,3,3,8,3,3,3,18,3,3,3,3,4,3,3,6,6,3,3,3,3,4,3,3,3,3,3,3,3,3,3,24,24,13,8,4,3,3,3,3,4,18,18,18,18,18,13,3,8,18,18,3,13,4,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,8,8,16,3,4,13,13,3,3,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,16,3,13,13,13,3,8,18,18,8,13,3,6,3,3,13,3,3,3,8,16,3,3,13,8,6,8,3,18,18,18,18,18,18,3,3,3,3,4,13,3,8,24,13,3,8,18,3,3,3,3,6,8,3,3,3,3,3,3,3,8,13,3,16,16,8,3,16,16,3,8,3,16,16,8,3,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,10,10,10,10,10,10,10,10,10,11,11,10,10,10,11,11,10,10,10,10,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,10,10,11,11,12,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,5,5,5,11,14,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,12,12,11,11,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,3,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,12,12,5,12,12,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,5,5,5,12,12,12,12,12,12,12,12,12,16,16,8,16,16,8,16,16,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,13,13,3,3,3,4,3,3,3,5,5,5,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,13,4,13,13,3,3,3,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,3,3,3,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,13,3,3,4,3,3,3,3,3,3,13,13,3,3,3,13,13,3,13,3,3,3,13,13,13,3,3,3,3,3,3,3,13,3,13,13,13,13,13,13,13,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,13,2,4,2,3,2,2,13,2,12,11,11,11,11,11,12,11,12,11,11,11,0,11,11,11,11,11,12,11,12,11,11,11,11,12,12,12,11,5,11,11,11,11,12,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,12,11,12,12,12,3,13,3,4,3,3,3,13,3,13,3,3,13,3,13,4,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,12,12,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,18,17,18,6,13,3,3,3,13,6,6,13,6,16,16,16,16,16,16,16,16,16,13,13,13,6,13,13,3,6,3,4,3,18,18,18,18,18,18,18,18,6,13,13,3,13,4,3,13,3,3,3,4,3,6,3,4,3,3,3,3,3,6,4,4,3,3,3,13,13,6,3,3,6,3,3,3,3,13,13,13,6,6,13,13,13,13,13,17,18,18,18,17,6,18,6,18,18,18,6,8,3,4,3,3,13,13,13,6,13,13,13,13,13,18,18,18,18,18,18,18,13,13,8,18,18,18,18,18,18,13,4,13,3,3,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,3,18,3,13,13,6,13,13,6,8,16,18,3,13,3,3,3,3,3,3,3,6,18,6,6,6,3,4,4,3,3,18,18,13,13,18,18,18,18,18,18,3,17,18,18,18,18,18,13,13,3,13,13,6,13,13,4,3,3,3,13,3,3,3,13,18,3,18,18,18,18,13,13,13,13,13,13,6,13,18,18,18,18,3,3,16,16,8,3,6,6,3,8,3,13,13,6,3,3,16,16,3,3,3,4,18,18,18,18,18,18,6,6,6,3,3,3,13,3,4,3,3,3,3,3,3,3,6,3,3,3,3,3,4,3,3,3,6,6,13,13,6,13,13,3,6,13,13,18,18,17,17,18,18,17,6,6,13,13,4,13,8,4,3,6,8,6,13,3,3,6,13,16,13,8,13,13,6,18,18,18,18,17,18,18,6,3,3,3,4,3,6,6,13,13,3,3,8,3,6,13,13,4,4,4,8,18,6,13,6,13,13,18,13,18,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,12,12,12,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,12,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,11,11,12,10,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12,12,12,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,10,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,14,11,11,11,12,11,11,11,11,12,12,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,11,12,14,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,8,6,6,3,3,6,16,3,8,8,8,8,3,3,8,3,16,6,6,6,6,6,6,6,6,6,6,3,8,8,6,8,8,6,8,6,8,8,8,6,8,8,6,8,6,8,6,6,8,6,6,6,8,8,6,3,3,6,16,3,8,3,3,8,8,8,3,6,6,6,6,3,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,16,8,6,3,6,3,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,3,3,6,6,6,6,6,6,6,6,6,3,3,6,16,8,8,8,16,3,6,6,6,6,6,6,16,8,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,6,6,6,6,8,3,6,6,6,6,6,6,3,8,16,8,8,8,16,8,3,6,6,6,6,16,8,6,6,6,8,8,8,8,3,3,4,8,8,4,4,8,8,3,6,6,3,6,6,6,6,6,6,16,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,3,18,3,6,6,3,6,6,6,6,6,6,6,6,6,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,3,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,5,10,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,12,12,11,11,11,11,11,11,10,10,11,11,11,11,10,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,5,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,5,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,11,10,10,11,10,11,10,11,10,11,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,5,10,10,10,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,5,10,10,10,11,11,11,11,11,10,11,11,11,11,10,11,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,5,5,5,5,5,5,5,11,11,11,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,12,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,16,3,16,6,6,6,6,6,6,6,6,6,6,3,8,8,6,8,8,6,8,6,8,8,8,6,8,8,6,8,6,8,6,6,8,6,6,6,8,8,6,3,6,3,8,8,8,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,16,8,6,6,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6,16,8,8,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,16,8,6,6,6,8,8,8,8,16,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,18,3,6,6,3,6,6,6,6,6,6,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,3,10,10,0,10,10,10,10,0,0,12,0,10,0,10,10,10,10,11,11,11,11,11,11,11,11,0,10,11,10,0,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,11,11,10,0,10,10,8,16,16,8,8,6,6,8,10,11,10,10,10,8,8,16,16,16,16,8,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,16,8,8,6,8,8,6,8,6,8,8,8,6,8,8,6,8,6,8,6,6,8,6,6,6,8,6,3,6,8,8,16,16,16,16,16,16,16,16,16,16,16,16,8,8,16,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,6,17,18,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,8,8,16,16,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,16,8,16,6,6,6,16,8,8,8,6,8,8,10,10,10,11,11,11,11,11,11,11,11,10,10,11,10,10,10,10,10,11,11,3,8,3,16,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,6,6,3,3,6,6,6,6,3,3,3,6,6,6,6,6,6,6,6,6,3,3,6,6,6,6,6,6,16,3,6,6,3,6,6,6,6,6,6,3,6,6,6,6,8,8,4,8,8,4,4,3,6,6,3,6,6,6,6,6,6,6,6,6,10,12,12,12,11,10,10,10,10,11,10,12,12,12,10,10,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,0,12,12,12,0,0,12,5,12,12,12,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,3,18,18,18,3,3,3,3,3,3,3,3,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,8,3,3,8,16,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,12,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,3,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FPS","MAX_PLAYERS","attachment","bevy_prelude","bullet","camera","damage","debug","editor","elements","globals","input","install_modules","item","lifetime","map","metadata","physics","player","random","session","utils","Attachment","HadPlayerBodyAttachmentMarker","PlayerBodyAttachment","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","entity","fmt","from","from","from","from_subset","from_subset","from_subset","init","init","init","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","offset","offset","player","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","sync_animation","sync_animation","sync_color","sync_color","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ulid","ulid","ulid","upcast","upcast","upcast","update_attachments","vzip","vzip","vzip","CoreSession","CoreSessionInfo","EditorInput","GameSessionPlayerInfo","MAX_PLAYERS","bones","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","Affine2","Affine3A","AlreadyBorrowed","AnimatedSprite","AnimationBankSprite","AssetPath","AssetProvider","AssetProviderMut","AssetProviderRef","AssetProviders","AssetProvidersResource","Atlas","AtlasSprite","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","AtomicRef","AtomicRefCell","AtomicRefMut","AtomicResource","AudioEvent","AudioEvents","AudioSource","BLACK","BLUE","BVec2","BVec3","BVec3A","BVec4","BVec4A","BevyWorld","BitFmt","BitSet","BitSetVec","BorrowError","BorrowMutError","CYAN","Camera","CameraShake","CameraTraumaEvents","ClearColor","Color","CommandQueue","Commands","Comp","CompMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","CoreStage","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","Deref","DerefMut","DispatcherExecutionFailed","EcsData","EcsError","Entities","EntitiesIterWith","Entity","EntityIterator","EulerRot","FALSE","FALSE","FALSE","FALSE","FALSE","First","FrameTime","FromWorld","GRAY","GREEN","Handle","Hex","HexColorError","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","IVec4","Image","IntoBevy","IntoSystem","Iter","Key","KeyError","Last","Length","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NONE","NotAscii","NotInitialized","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ORANGE","Once","Param","Path2d","PlaySound","PostUpdate","PreUpdate","Quat","QueryItem","RAND_BITS","RED","RawFns","Repeating","Res","ResAssetProviders","ResMut","Resources","Rgba","ShakeNoise","SimpleSystemStage","Sprite","StageLabel","State","Stopwatch","System","SystemError","SystemParam","SystemResult","SystemStage","SystemStages","TIME_BITS","TRUE","TRUE","TRUE","TRUE","TRUE","Tile","TileLayer","Time","Timer","TimerMode","TooLong","Transform","TypeUlid","TypeUlid","TypeUlidCollision","TypedComponentOps","TypedEcsData","ULID","UVec2","UVec3","UVec4","Ulid","UlidMap","UntypedAssetProvider","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","UntypedHandle","UntypedResource","UntypedResourceInfo","UntypedResources","UnwrapMany","Update","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","Viewport","W","W","W","W","WHITE","Window","World","X","X","X","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YELLOW","YXZ","YZX","Z","Z","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","a","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","active","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat2","add_mat3","add_mat3","add_mat3","add_mat4","add_mat4","add_system","add_system","add_system_to_stage","add_trauma","advance_exact","all","all","all","all","all","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","animations","any","any","any","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_bitset","apply_bitset","apply_bitset","apply_bitset","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat2","as_dmat3","as_dmat3","as_dmat4","as_dvec2","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_f64","as_ivec2","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_rgba","as_rgba_f32","as_uvec2","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec3a","as_vec4","as_vec4","as_vec4","atlas","atlas","b","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_superset","bit_test","bit_xor","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitset","bitset","bitset","bitset","bitset","bitset","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","ceil","ceil","ceil","cell","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clear_killed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fn","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","cmp","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col","col","col","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","color","color","color","components","conjugate","conjugate","contains","contains","contains","contains","contains","create","create_bitset","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","cross","cross","cross","cross","cross","current","datetime","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decay_rate","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delta","delta_seconds","delta_seconds_f64","depth_max","depth_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_fn","duration","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds_f64","elapsed_secs","elapsed_secs","elapsed_secs_f64","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","exp","exp","exp","exp","extend","extend","extend","extend","extend","extend","extend","extend","extend","f32","f64","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_map","filter_map","finished","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_type","fps","fract","fract","fract","fract","fract","fract","fract","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_components","from_components_unsafe","from_components_unsafe","from_datetime","from_datetime_with_source","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_scaled_axis","from_seconds","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_str","from_string","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","from_xyzw","g","generation","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_bevy_asset_path","get_bevy_handle","get_bevy_handle","get_bevy_handle_untyped","get_by_uuid","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_many_mut","get_many_mut","get_many_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_resource","get_state","get_state","get_state","get_state","get_state","get_state","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","grid_size","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","hex","i32","id","id","id","id","id","idx","image","impl_bitset","increment","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_resource","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize_systems","insert","insert","insert","insert","insert","insert","insert_resource","insert_stage_after","insert_stage_before","install","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bevy","into_bevy","into_bevy","into_bevy","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_untyped","into_untyped","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_alive","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_nil","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_paused","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_with","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","ivec2","ivec3","ivec4","just_finished","key","kill","killed","label","last_animation","layout","layout","length","length","length","length","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","line_breaks","load","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","look_to_rh","maintain","map","map","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max","max","max","max","max","max","max","max","max","max_angle_rad","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_offset","min","min","min","min","min","min","min","min","min","min","min","min","min","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","mode","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat2","mul_mat3","mul_mat3","mul_mat3","mul_mat4","mul_mat4","mul_quat","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec3a","mul_vec4","mul_vec4","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_raw","next","next","next","next","next","next","nil","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_relative_to","not","not","not","not","not","not","not","not","not","not","not","orthographic_lh","orthographic_lh","orthographic_rh","orthographic_rh","orthographic_rh_gl","orthographic_rh_gl","partial_cmp","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","pause","pause","pause","paused","paused","percent","percent_left","perp","perp","perp","perp_dot","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_infinite_rh","perspective_lh","perspective_lh","perspective_rh","perspective_rh","perspective_rh_gl","perspective_rh_gl","play","points","position","powf","powf","powf","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","project_point3","provide","provide","provide","quat","queue","queue","queue","r","random","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","recip","recip","recip","recip","recip","recip","recip","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","remaining","remaining_secs","remove","remove","remove","remove","remove","remove","repeat","reset","reset","resource","rgb","rgb_u8","rgba","rgba_u8","rotate","rotate","rotate","rotation","round","round","round","round","round","round","round","row","row","row","row","row","row","row","run","run","run","run","run","run_initialized_system","run_system","scale","select","select","select","select","select","select","select","select","select","select","select","select","select","send","send","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_a","set_b","set_duration","set_elapsed","set_elapsed","set_g","set_mode","set_r","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","size","size","slerp","slerp","source","speed","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","stages","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat2","sub_mat3","sub_mat3","sub_mat3","sub_mat4","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","system","system","systems","thickness","tick","tick","tile_size","tiles","time","timer","times_finished_this_tick","timestamp_ms","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_scaled_axis","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transform_point2","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3","transform_point3a","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","transform_vector3a","translation","translation","translation","translation","translation","transpose","transpose","transpose","transpose","transpose","transpose","transpose","trauma","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_get_by_uuid","try_get_mut","try_init","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","typed","u32","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","unpause","unpause","unpause","untyped","untyped","untyped_mut","unwrap_many","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_with_instant","uvec2","uvec3","uvec4","vec2","vec3","vec3a","vec4","viewport","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w_axis","w_axis","with_core_stages","with_source","with_trauma","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","ww","ww","www","www","www","www","www","wwww","wwww","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wwzz","wwzz","wx","wx","wx","wx","wx","wxw","wxw","wxw","wxw","wxw","wxww","wxww","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wxzz","wxzz","wy","wy","wy","wy","wy","wyw","wyw","wyw","wyw","wyw","wyww","wyww","wyww","wyww","wyww","wywx","wywx","wywx","wywx","wywx","wywy","wywy","wywy","wywy","wywy","wywz","wywz","wywz","wywz","wywz","wyx","wyx","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wyzz","wyzz","wz","wz","wz","wz","wz","wzw","wzw","wzw","wzw","wzw","wzww","wzww","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xw","xw","xw","xww","xww","xww","xww","xww","xwww","xwww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxw","xxw","xxww","xxww","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyw","xyw","xyww","xyww","xyww","xyww","xyww","xywx","xywx","xywx","xywx","xywx","xywy","xywy","xywy","xywy","xywy","xywz","xywz","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzw","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzw","xzw","xzww","xzww","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yw","yw","yw","yww","yww","yww","yww","yww","ywww","ywww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxw","yxw","yxww","yxww","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyw","yyw","yyww","yyww","yyww","yyww","yyww","yywx","yywx","yywx","yywx","yywx","yywy","yywy","yywy","yywy","yywy","yywz","yywz","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzw","yzw","yzww","yzww","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zw","zw","zw","zww","zww","zww","zww","zww","zwww","zwww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxw","zxw","zxww","zxww","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyw","zyw","zyww","zyww","zyww","zyww","zyww","zywx","zywx","zywx","zywx","zywx","zywy","zywy","zywy","zywy","zywy","zywz","zywz","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzw","zzw","zzww","zzww","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","sound_source","volume","alpha","blue","green","red","BVec2","BVec3","BVec3A","BVec4","BVec4A","w","x","x","x","y","y","y","z","z","Affine2","Affine3A","Mat2","Mat3","Mat3A","Mat4","Quat","Vec2","Vec3","Vec3A","Vec4","mat2","mat3","mat3a","mat4","matrix2","matrix3","quat","translation","translation","vec2","vec3","vec3a","vec4","w_axis","x","x","x_axis","x_axis","x_axis","y","y","y_axis","y_axis","y_axis","z","z_axis","z_axis","z_axis","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","IVec2","IVec3","IVec4","ivec2","ivec3","ivec4","w","x","x","x","y","y","y","z","z","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","Once","Repeating","Stopwatch","Time","Timer","TimerMode","UVec2","UVec3","UVec4","uvec2","uvec3","uvec4","w","x","x","x","y","y","y","z","z","Bullet","BulletHandle","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","direction","downcast","downcast","drop","drop","fmt","from","from","from_subset","from_subset","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","owner","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","CameraState","ParallaxBackgroundSprite","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","disable_controller","downcast","downcast","drop","drop","fmt","from","from","from_subset","from_subset","from_world","from_world","idx","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","meta","player_camera_rects","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","DamageRegion","DamageRegionOwner","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","collider_rect","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","size","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","DebugSettings","RapierDebugContext","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_subset","from_subset","from_world","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","show_damage_regions","show_kinematic_colliders","show_pathfinding_lines","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","install","DehydrateOutOfBounds","ElementHandle","MapElementHydrated","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","crab","crate_item","decoration","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fish_school","from","from","from","from_subset","from_subset","from_subset","from_world","from_world","grenade","init","init","init","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","kick_bomb","mine","musket","player_spawner","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","slippery","slippery_seaweed","snail","sproinger","stomp_boots","sword","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ulid","ulid","ulid","upcast","upcast","upcast","urchin","vzip","vzip","vzip","CrabCritter","CrabState","Despawning","Fleeing","Paused","Spawning","Walking","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","left","scared_of","install","install","Fish","FishSchool","FishState","Moving","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","from_world","from_world","hydrate","init","init","init","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ulid","ulid","upcast","upcast","upcast","update_fish_schools","vzip","vzip","vzip","from","to","IdleGrenade","LitGrenade","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","fuse_time","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","IdleKickBomb","LitKickBomb","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","IdleMine","ThrownMine","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","Musket","ammo","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","cooldown","default","deref","deref_mut","downcast","drop","fmt","from","from_subset","from_world","from_world","init","install","into","into_any","into_any_arc","into_any_rc","is_in_subset","raw_clone","raw_drop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","vzip","CurrentSpawner","PlayerSpawner","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","Slippery","as_any","as_any_mut","as_bind_group_shader_type","body_friction","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_subset","from_world","from_world","init","install","into","into_any","into_any_arc","into_any_rc","is_in_subset","player_slide","raw_clone","raw_drop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","update","vzip","SlipperySeaweed","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_subset","from_world","from_world","init","install","into","into_any","into_any_arc","into_any_rc","is_in_subset","raw_clone","raw_drop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","update","vzip","Hiding","Moving","Snail","UnHiding","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","fmt","from","from_subset","init","install","into","into_any","into_any_arc","into_any_rc","is_in_subset","raw_clone","raw_drop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","vzip","anim_index","attempted_x","frame_timer","Sproinger","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","frame","from","from_subset","from_world","from_world","init","install","into","into_any","into_any_arc","into_any_rc","is_in_subset","raw_clone","raw_drop","sproinging","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","vzip","StompBoots","WearingStompBoots","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from_subset","from_subset","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","Cooldown","Idle","Swinging","Sword","SwordState","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dropped_time","fmt","fmt","from","from","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","state","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","upcast","upcast","vzip","vzip","frame","frame","Urchin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","deref","deref_mut","downcast","drop","fmt","from","from_subset","from_world","from_world","init","install","into","into_any","into_any_arc","into_any_rc","is_in_subset","raw_clone","raw_drop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","vzip","INVINCIBILITY_ALPHA_RANGE","CreateLayer","DeleteEntity","DeleteLayer","EditorInput","MoveEntity","MoveLayer","PlayerControl","PlayerInput","PlayerInputs","RenameLayer","RenameMap","SetTile","SetTilemap","SpawnElement","active","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","control","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","editor_input","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","grab_just_pressed","grab_pressed","init","init","init","init","install","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_ai","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jump_just_pressed","jump_pressed","just_moved","move_direction","moving","players","previous_control","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","selected_player","serialize","shoot_just_pressed","shoot_pressed","slide_just_pressed","slide_pressed","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ulid","ulid","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","collision","down","entity","entity","handle","handle","id","layer","layer","layer","layer","layer","layer","name","name","pos","pos","tilemap_tile_idx","translation","Inv","Inventory","Item","ItemDropped","ItemGrab","ItemGrabbed","ItemThrow","ItemUsed","PlayerInventories","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","fin_anim","fmt","fmt","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","get_state","grab_items","grab_offset","init","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","inventory","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","player","player","player","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","strength","sync_animation","throw_dropped_items","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","velocity_from_control","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_spin","with_system","Invincibility","Lifetime","age","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","from","from","from_subset","from_subset","from_world","from_world","from_world","from_world","init","init","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","lifetime","new","new","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","LoadedMap","MAP_LAYERS_GAP_DEPTH","MAP_LAYERS_MIN_DEPTH","MapSpawned","NavGraph","NavGraphEdge","NavGraphInner","NavNode","SpawnedMapLayerMeta","SpawnedMapMeta","above","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","background","background_color","below","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distance","distance","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get_hash","grid_size","hash","init","init","init","init","init","init","init","inputs","install","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","layer_idx","layer_names","left","name","partial_cmp","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","right","tile_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","z_depth_for_map_layer","AnimatedDecoration","BackgroundMeta","BodyAnimationsMeta","BuiltinElementKind","BulletMeta","CameraMeta","ColorMeta","CoreConfigMeta","CoreMeta","CoreMetaArc","Crab","Crate","ElementEditorMeta","ElementMeta","ElementSpawn","FishSchool","Grenade","JumpyCoreAssetsPlugin","KickBomb","MapLayerMeta","MapMeta","MapTileMeta","Mine","Musket","None","ParallaxLayerMeta","PhysicsMeta","PlayerBodyLayerMeta","PlayerLayerMeta","PlayerLayersMeta","PlayerMeta","PlayerSoundsMeta","PlayerSpawner","PlayerStatsMeta","Slippery","SlipperySeaweed","Snail","Sproinger","StompBoots","Sword","Urchin","accel_air_speed","accel_walk_speed","air_speed","animations","animations","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","atlas","atlas","background","background_color","body","body_diameter","body_offsets","body_size","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builtin","camera","category","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collision","config","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_height","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_volume","editor","element","elements","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","experimental_maps","explosion_atlas","explosion_fps","explosion_frames","explosion_lifetime","explosion_sound","explosion_volume","face","fin","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frames","friction_lerp","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","grab","grab_offset","grab_size","grab_volume","gravity","gravity","grid_size","id","idx","image","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","install_asset","install_asset","install_asset","install_asset","install_asset","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_out_of_bounds","jump","jump_speed","jump_volume","land","land_volume","layers","layers","layers","lifetime","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","map_elements","map_tilesets","min_camera_size","move_lerp_factor","name","name","name","offset","offset","physics","player_camera_box_size","players","pos","pos","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","respawn_invincibility_time","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialize","show_name","size","slide_body_size","slow_fall_speed","slowdown","sounds","speed","stable_maps","stats","stop_threshold","terminal_velocity","tile_size","tilemap","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","velocity","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_speed","zoom_in_lerp_factor","zoom_out_lerp_factor","angular_velocity","angular_velocity","angular_velocity","angular_velocity","arm_delay","arm_delay","arm_sound","arm_sound_volume","armed_fps","armed_frames","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","base_count","body_diameter","body_diameter","body_diameter","body_diameter","body_friction","body_size","body_size","body_size","body_size","body_size","body_size","body_size","body_size","body_size","bounce_sound","bounce_sound_volume","bounciness","bounciness","bounciness","bounciness","bounciness","bounciness","bounciness","bounciness","break_sound","break_sound_volume","break_timeout","breaking_anim_fps","breaking_anim_frames","breaking_atlas","bullet_meta","can_rotate","can_rotate","can_rotate","can_rotate","comfortable_scared_distance","comfortable_spawn_distance","cooldown","cooldown_frames","count_variation","crate_break_state_1","crate_break_state_2","crawl_frames","damage_region_lifetime","damage_region_lifetime","damage_region_lifetime","damage_region_size","damage_region_size","damage_region_size","empty_shoot_sound","empty_shoot_sound_volume","end_frame","end_frame","explosion_atlas","explosion_atlas","explosion_atlas","explosion_fps","explosion_fps","explosion_fps","explosion_frames","explosion_frames","explosion_frames","explosion_lifetime","explosion_lifetime","explosion_lifetime","explosion_sound","explosion_sound","explosion_sound","explosion_volume","explosion_volume","explosion_volume","fin_anim","fin_anim","fin_anim","fin_anim","fin_anim","fin_anim","flee_range","fps","fps","fps","fps","fuse_sound","fuse_sound","fuse_sound_volume","fuse_sound_volume","fuse_time","fuse_time","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","gravity","gravity","hide_frames","hide_time","hit_speed","hit_speed","image","kick_velocity","killing_speed","kinds","map_icon","max_ammo","move_frame_indexes","player_decoration","player_slide","run_speed","same_level_threshold","school_size","shoot_atlas","shoot_fps","shoot_frames","shoot_lifetime","shoot_sound","shoot_sound_volume","sound","sound","sound_volume","sound_volume","spawn_frames","spawn_range","spin","spring_velocity","start_frame","start_frame","throw_velocity","throw_velocity","throw_velocity","throw_velocity","throw_velocity","throw_velocity","timer_delay_max","uncomfortable_respawn_time","walk_frames","walk_speed","Actor","Circle","Collider","ColliderShape","CollisionWorld","KinematicBody","RapierContext","RapierUserData","Rectangle","TileCollisionKind","angular_velocity","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bounciness","bounding_box","can_rotate","clone","clone_into","clone_type_data","collisions","default","deref","deref_mut","downcast","drop","fall_through","fmt","frame_friction_override","from","from_subset","from_world","from_world","gravity","has_friction","has_mass","init","install","into","into_any","into_any_arc","into_any_rc","is_deactivated","is_in_subset","is_on_ground","is_on_platform","is_spawning","raw_clone","raw_drop","shape","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","ulid","upcast","velocity","vzip","was_on_ground","diameter","size","Actor","Circle","Collider","ColliderShape","ColliderShapeCache","CollisionCache","CollisionWorld","Empty","EntityHasher","JumpThrough","RapierContext","RapierUserData","Rectangle","Solid","Solid","TileCollisionKind","TileRapierHandle","actor_collisions","actor_collisions_filtered","actors","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broad_phase","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","collider_set","collider_shape_cache","colliders","collision_cache","collision_pipeline","collisions","compute_aabb","ctx","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descent","descent","deserialize","disabled","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_hash","entities","entity","eq","eq","equivalent","equivalent","erased_serialize","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","get","get_collider","get_hash","get_state","handle_collision_event","handle_contact_force_event","handle_teleport","hash","init","init","init","init","init","init","init","init","init","init","init","init","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","is_valid_bit_pattern","move_horizontal","move_vertical","narrow_phase","partial_cmp","query_pipeline","rapier","rapier_handle","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","rigid_body_set","seen_wood","serialize","shape","shared_shape","shared_shape","solid_at","solids","spawned_map_layer_metas","tile_collision","tile_collision_filtered","tile_collision_kinds","tile_collision_point","tile_layers","tile_rapier_handles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update_tile","update_tiles","update_tiles_with_filter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","diameter","size","ALL","ANG_AXES","ANG_DIM","ANG_X","Aabb","AccelerationBased","ActiveCollisionTypes","ActiveEvents","ActiveHooks","AddPair","AngDim","AngVector","AngX","AngularInertia","ArrayIdx","ArrayPoint","ArrayTopoFace","ArrayTopoHalfEdge","ArrayTopoVertex","ArrayU32","ArrayUsize","ArrayVector","ArrayVectorTriple","Average","BadAdjascentTrianglesOrientation","BadTriangle","Ball","Ball","Ball","BodyPair","BodyStatus","BroadPhase","BroadPhasePairEvent","CCDSolver","COLLIDERS","COLLIDER_AABBS","COLLIDER_SHAPES","COLLISION_EVENTS","COMPUTE_IMPULSES","CONNECTED_COMPONENTS","CONTACTS","CONTACT_FORCE_EVENTS","Capsule","Capsule","Capsule","ChannelEventCollector","Clockwise","CoefficientCombineRule","Collider","Collider","ColliderBroadPhaseData","ColliderBuilder","ColliderChanges","ColliderEnabled","ColliderFlags","ColliderGraphIndex","ColliderHandle","ColliderMassProps","ColliderMaterial","ColliderPair","ColliderParent","ColliderPosition","ColliderSet","ColliderShape","ColliderType","CollisionEvent","CollisionEventFlags","CollisionPipeline","Compound","Compound","Compound","Contact","ContactData","ContactForceEvent","ContactManifold","ContactManifoldData","ContactModificationContext","ContactPair","ConvexPolygon","ConvexPolygon","ConvexPolygon","CounterClockwise","CrossMatrix","Cuboid","Cuboid","Cuboid","CurrentPosition","Custom","Custom","DEFAULT_EPSILON","DELETE_BAD_TOPOLOGY_TRIANGLES","DELETE_DEGENERATE_TRIANGLES","DELETE_DUPLICATE_TRIANGLES","DIM","DMatrix","DOMINANCE","DVector","DYNAMIC_DYNAMIC","DYNAMIC_FIXED","DYNAMIC_KINEMATIC","DebugColor","DebugRenderBackend","DebugRenderMode","DebugRenderObject","DebugRenderPipeline","DebugRenderStyle","Degenerate","DeletePair","Density","Dim","Disabled","Disabled","DisabledByAttachedBody","DisabledByParent","Dynamic","ENABLED_OR_DISABLED","ENABLED_OR_DISABLED","EXCLUDE_DYNAMIC","EXCLUDE_FIXED","EXCLUDE_KINEMATIC","EXCLUDE_SENSORS","EXCLUDE_SOLIDS","Enabled","Enabled","EventHandler","FILTER_CONTACT_PAIRS","FILTER_INTERSECTION_PAIR","FIXED_FIXED","FREE_FIXED_AXES","FREE_PRISMATIC_AXES","FREE_REVOLUTE_AXES","Face","FeatureId","Fixed","FixedJoint","FixedJointBuilder","ForceBased","GROUPS","GROUP_1","GROUP_10","GROUP_11","GROUP_12","GROUP_13","GROUP_14","GROUP_15","GROUP_16","GROUP_17","GROUP_18","GROUP_19","GROUP_2","GROUP_20","GROUP_21","GROUP_22","GROUP_23","GROUP_24","GROUP_25","GROUP_26","GROUP_27","GROUP_28","GROUP_29","GROUP_3","GROUP_30","GROUP_31","GROUP_32","GROUP_4","GROUP_5","GROUP_6","GROUP_7","GROUP_8","GROUP_9","GenericHeightField","GenericJoint","GenericJointBuilder","GenericTriMesh","Group","HALF_EDGE_TOPOLOGY","HalfSpace","HalfSpace","HalfSpace","HeightField","HeightField","HeightField","HeightFieldCellStatus","HeightFieldStorage","Heights","IMPULSE_JOINTS","ImpulseJoint","ImpulseJoint","ImpulseJointHandle","ImpulseJointSet","IntegrationParameters","InteractionGraph","InteractionGroups","IntersectionPair","IslandManager","Isometry","JOINTS","Jacobian","JacobianView","JacobianViewMut","JointAxesMask","JointAxis","JointEnabled","JointLimits","JointMotor","KINEMATIC_FIXED","KINEMATIC_KINEMATIC","KinematicPositionBased","KinematicVelocityBased","LIN_AXES","LOCAL_MASS_PROPERTIES","LOCAL_MASS_PROPERTIES","LOCKED_FIXED_AXES","LOCKED_PRISMATIC_AXES","LOCKED_REVOLUTE_AXES","LockedAxes","MAX_MANIFOLD_POINTS","MERGE_DUPLICATE_VERTICES","MODIFIED","MODIFIED","MODIFY_SOLVER_CONTACTS","MULTIBODY_JOINTS","Mass","Mass","MassProperties","MassProperties","MassProps","Matrix","Max","Min","MotorModel","Multibody","MultibodyIndex","MultibodyJoint","MultibodyJoint","MultibodyJointHandle","MultibodyJointSet","MultibodyLink","Multiply","NONE","NarrowPhase","ONLY_DYNAMIC","ONLY_FIXED","ONLY_KINEMATIC","ORIENTED","OnEdge","OnEdge","OnFace","OnSolid","OnVertex","OnVertex","Orientation","Other","PARENT","PARENT_EFFECTIVE_DOMINANCE","POSITION","POSITION","PackedFeatureId","PairFilterContext","PartId","PartShape","PhysicsHooks","PhysicsPipeline","Point","PointProjection","PolygonalFeature","PolygonalFeatureMap","Polyline","Polyline","Polyline","PrincipalAngularInertia","PrismaticJoint","PrismaticJointBuilder","QbvhStorage","QbvhStorage","QueryFilter","QueryFilterFlags","QueryPipeline","QueryPipelineMode","REMOVED","RIGID_BODY_AXES","ROTATION_LOCKED","ROTATION_LOCKED_X","ROTATION_LOCKED_Y","ROTATION_LOCKED_Z","Ray","RayIntersection","Real","RevoluteJoint","RevoluteJointBuilder","RigidBody","RigidBody","RigidBodyActivation","RigidBodyAdditionalMassProps","RigidBodyBuilder","RigidBodyCcd","RigidBodyChanges","RigidBodyColliders","RigidBodyDamping","RigidBodyDominance","RigidBodyForces","RigidBodyGraphIndex","RigidBodyHandle","RigidBodyIds","RigidBodyMassProps","RigidBodyPosition","RigidBodySet","RigidBodyType","RigidBodyVelocity","RopeJoint","RopeJointBuilder","Rotation","RoundConvexPolygon","RoundConvexPolygon","RoundConvexPolygon","RoundCuboid","RoundCuboid","RoundCuboid","RoundShape","RoundTriangle","RoundTriangle","RoundTriangle","SENSOR","SHAPE","SIMD_LAST_INDEX","SIMD_WIDTH","SLEEP","SOLVER_CONTACTS","SPATIAL_DIM","SdpMatrix","Segment","Segment","Segment","SegmentPointLocation","Sensor","Shape","ShapeType","SharedShape","SimdBool","SimdCompositeShape","SimdReal","Solid","SolverContact","SolverFlags","SpacialVector","Started","Status","Stopped","SupportMap","SweepTestWithNextPosition","SweepTestWithPredictedPosition","TOI","TRANSLATION_LOCKED","TRANSLATION_LOCKED_X","TRANSLATION_LOCKED_Y","TRANSLATION_LOCKED_Z","TWO_DIM","TYPE","TYPE","TemporaryInteractionIndex","TopoFace","TopoHalfEdge","TopoVertex","TopologyError","TrackedContact","Translation","TriMesh","TriMesh","TriMesh","TriMeshConnectedComponents","TriMeshFlags","TriMeshStorage","TriMeshTopology","Triangle","Triangle","Triangle","TriangleOrientation","TrianglePointLocation","TypedShape","TypedSimdCompositeShape","UNKNOWN","UnitVector","Unknown","Vector","Vertex","X","X","Y","Y","aabb","aabb","aabb","aabb","aabb","aabbs","abs_diff_eq","activation","activation_mut","active","active_collision_types","active_collision_types","active_collision_types","active_collision_types","active_dynamic_bodies","active_events","active_events","active_events","active_events","active_hooks","active_hooks","active_hooks","active_hooks","active_kinematic_bodies","add","add","add_assign","add_assign","add_collider","add_force","add_force_at_point","add_torque","additional_local_mprops","additional_mass","additional_mass_properties","all","all","all","all","all","all","all","all","all","all","all","all","all","all","allowed_linear_error","angular_damping","angular_damping","angular_damping","angular_damping","angular_threshold","angvel","angvel","angvel","angvel","append","apply_damping","apply_displacement","apply_displacements","apply_force_at_point","apply_impulse","apply_impulse","apply_impulse_at_point","apply_impulse_at_point","apply_torque_impulse","apply_torque_impulse","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ball","as_ball_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_capsule","as_capsule_mut","as_composite_shape","as_composite_shape","as_composite_shape","as_composite_shape","as_composite_shape","as_compound","as_compound_mut","as_convex_polygon","as_convex_polygon_mut","as_cuboid","as_cuboid_mut","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_fixed","as_fixed_mut","as_halfspace","as_halfspace_mut","as_heightfield","as_heightfield_mut","as_mut","as_mut_slice","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polygonal_feature_map","as_polyline","as_polyline_mut","as_prismatic","as_prismatic_mut","as_ref","as_ref","as_revolute","as_revolute_mut","as_rope","as_rope_mut","as_round_convex_polygon","as_round_convex_polygon_mut","as_round_cuboid","as_round_cuboid_mut","as_round_triangle","as_round_triangle_mut","as_segment","as_segment_mut","as_shape","as_shape_mut","as_slice","as_support_map","as_support_map","as_support_map","as_support_map","as_support_map","as_support_map","as_triangle","as_triangle_mut","as_trimesh","as_trimesh_mut","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_typed_shape","as_vector","as_vector_mut","attach_collider","attached_bodies","attached_enabled_joints","attached_joints","attached_joints","ball","ball","barycentric_coordinates","barycentric_coordinates","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bodies","bodies","bodies_attached_with_enabled_joint","body1","body1","body2","body2","body_to_parent","body_type","border_radius","border_subdivisions","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_sphere","bounding_sphere","bounding_sphere","bounding_sphere","bounding_sphere","build","build","build","build","build","build","build","can_sleep","can_sleep","cannot_sleep","capsule","capsule_x","capsule_x","capsule_y","capsule_y","cast_local_ray","cast_local_ray","cast_local_ray","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_local_ray_and_get_normal","cast_ray","cast_ray_and_get_normal","cast_shape","ccd_active","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_angular_thickness","ccd_enabled","ccd_enabled","ccd_enabled","ccd_max_dist","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","ccd_thickness","cell_at_point","cell_width","center_of_mass","cfm_factor","clamp_motions","cleanup_removed_rigid_bodies","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_box","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collider1","collider1","collider1","collider1","collider1","collider1","collider2","collider2","collider2","collider2","collider2","collider2","collider_aabb_color","collider_dynamic_color","collider_fixed_color","collider_kinematic_color","collider_parentless_color","colliders","colliders","colliders","colliders_with_aabb_intersecting_aabb","collision_groups","collision_groups","collision_groups","collision_groups","combine_coefficients","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compound","compound","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_aabb","compute_bounding_sphere","compute_bounding_sphere","compute_effective_force_and_torque","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_aabb","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_local_bounding_sphere","compute_swept_aabb","compute_swept_aabb","compute_swept_aabb","connected_components","contact_depth_color","contact_force_event_threshold","contact_force_event_threshold","contact_force_event_threshold","contact_graph","contact_normal_color","contact_normal_length","contact_pair","contact_pair_at_index","contact_pair_unknown_gen","contact_pairs","contacts","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_enabled","contacts_with","contacts_with_unknown_gen","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_local_point","contains_local_point","contains_local_point","contains_local_point","contains_local_point","convex_decomposition","convex_decomposition","convex_decomposition_with_params","convex_decomposition_with_params","convex_hull","convex_hull","convex_polyline","convex_polyline","copy_geometry_from","counters","coupled_axes","coupled_axes","cuboid","cuboid","damping","damping","damping_mut","damping_ratio","data","data","data","data","data","data","data","data","data","data","decompose_trimesh","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_angular_threshold","default_damping","default_density","default_epsilon","default_friction","default_linear_threshold","default_max_relative","default_time_until_sleep","delta","density","density","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detach_collider","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dist","dist","distance_to_local_point","dominance_group","dominance_group","dominance_group","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","draw_line","draw_line_strip","draw_polyline","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dt","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dynamic","effective_angular_inertia","effective_dominance_group","effective_group","effective_inv_mass","effective_mass","effective_world_inv_inertia_sqrt","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","enable_ccd","enabled","enabled","enabled","enabled","enabled","enabled","enabled_translations","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erp","erp_inv_dt","exclude_collider","exclude_collider","exclude_dynamic","exclude_fixed","exclude_kinematic","exclude_rigid_body","exclude_rigid_body","exclude_sensors","exclude_solids","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extract_connected_components","face","face","face_colors","face_face_contacts","face_vertex_contacts","faces","feature_normal","feature_normal_at_point","feature_normal_at_point","feature_normal_at_point","fid","fid1","fid2","filter","filter_contact_pair","filter_intersection_pair","find_deepest_contact","find_first_impact","fixed","flags","flags","flags","flat_indices","flat_indices","flipped","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","forward_kinematics","friction","friction","friction","friction","friction","friction_combine_rule","friction_combine_rule","friction_combine_rule","friction_combine_rule","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ball","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_capsule","from_compound","from_contact_pair","from_convex_hull","from_convex_polygon","from_convex_polyline","from_cuboid","from_i64","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_polygon","from_raw_parts","from_raw_parts","from_raw_parts","from_raw_parts","from_slice","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_triangle","from_trimesh","from_u64","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","generalized_acceleration","generalized_velocity","generalized_velocity_mut","get","get","get","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_multibody","get_multibody_mut_internal","get_mut","get_mut","get_mut","get_mut","get_mut_internal","get_unknown_gen","get_unknown_gen","get_unknown_gen","get_unknown_gen","get_unknown_gen_mut","get_unknown_gen_mut","get_unknown_gen_mut","gravitational_potential_energy","gravity_scale","gravity_scale","gravity_scale","gravity_scale","grouped_faces","groups","groups","half_edge","half_edge","half_edges","halfspace","halfspace","handle","handle_collision_event","handle_collision_event","handle_contact_force_event","handle_contact_force_event","handle_user_changes","has_any_active_contact","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height_at_point","heightfield","heightfield","heights","identity","impulse","impulse","impulse","impulse_joint_anchor_color","impulse_joint_separation_color","impulses","inactive","index","index","index","index","index","index","index","index","index_interaction","index_mut","index_mut","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_shape","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_with_parent","integrate","integrate","integrate","integrate_forces_and_velocities","interaction_pair","interaction_pair_mut","interactions","interactions_with","interactions_with_endpoints","interactions_with_mut","interleave_restitution_and_friction_resolution","interpolate_velocity","intersecting","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection_graph","intersection_pair","intersection_pair_unknown_gen","intersection_pairs","intersection_with_shape","intersections_with","intersections_with_point","intersections_with_ray","intersections_with_shape","intersections_with_unknown_gen","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw_parts","into_raw_parts","into_raw_parts","into_raw_parts","inv_augmented_mass","inv_dt","inv_mass","inv_principal_inertia_sqrt","invalid","invalid","invalid","invalid","invalid_handle","is","is_active","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_backface","is_bouncy","is_ccd_active","is_ccd_enabled","is_convex","is_convex","is_convex","is_convex","is_convex","is_convex","is_convex","is_convex_polyhedron","is_dynamic","is_dynamic","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_enabled","is_face","is_fixed","is_fixed","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_kinematic","is_kinematic","is_moving","is_moving_fast","is_new","is_on_face","is_root","is_rotation_locked","is_segment_removed","is_sensor","is_sensor","is_sensor","is_sleeping","is_translation_locked","is_unknown","is_vertex","is_zero","is_zero","iter","iter","iter","iter","iter_enabled","iter_enabled_mut","iter_mut","iter_mut","iter_mut","jacobian","jacobian_mul_coordinates","joint","joint","joint_between","joint_cfm_coeff","joint_damping_ratio","joint_erp","joint_erp_inv_dt","joint_graph","joints_between","kinematic_position_based","kinematic_velocity_based","kinetic_energy","kinetic_energy","len","len","len","limit_axes","limits","limits","limits","limits","limits","limits","limits","limits","limits","linear_damping","linear_damping","linear_damping","linear_damping","linear_threshold","link","link_id","link_mut","links","links_mut","linvel","linvel","linvel","linvel","local_aabb","local_aabb","local_aabb","local_aabb","local_aabb","local_aabb","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor1","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_anchor2","local_axis1","local_axis1","local_axis1","local_axis1","local_axis1","local_axis1","local_axis2","local_axis2","local_axis2","local_axis2","local_axis2","local_axis2","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_bounding_sphere","local_com","local_frame1","local_frame1","local_frame1","local_frame1","local_frame2","local_frame2","local_frame2","local_frame2","local_mprops","local_p1","local_p2","local_support_feature","local_support_feature","local_support_point","local_support_point","local_support_point","local_support_point_toward","local_support_point_toward","local_support_point_toward","local_to_parent","local_to_world","lock_axes","lock_rotations","lock_rotations","lock_translations","lock_translations","locked_axes","locked_axes","locked_axes","locked_axes","make_mut","manifold","manifolds","map_attached_joints_mut","map_elements_in_local_aabb","map_part_at","map_part_at","map_part_at","map_part_at","map_typed_part_at","map_typed_part_at","map_typed_part_at","map_typed_part_at","map_typed_part_at","map_untyped_part_at","map_untyped_part_at","map_untyped_part_at","map_untyped_part_at","map_untyped_part_at","mass","mass","mass","mass","mass","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","mass_properties","material","max","max_ccd_substeps","max_force","max_force_direction","max_force_magnitude","max_impulse","max_penetration_correction","max_point_velocity","max_stabilization_iterations","max_velocity_friction_iterations","max_velocity_iterations","memberships","min","min_ccd_dt","min_island_size","mode","model","modify_solver_contacts","motor","motor","motor","motor","motor","motor_axes","motor_max_force","motor_max_force","motor_max_force","motor_max_force","motor_model","motor_model","motor_model","motor_model","motor_model","motor_position","motor_position","motor_position","motor_position","motor_velocity","motor_velocity","motor_velocity","motor_velocity","motors","mul","multibodies","multibody_joint_anchor_color","multibody_joint_separation_color","ndofs","ndofs","needs_broad_phase_update","needs_narrow_phase_update","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_kinematic_position_based","new_kinematic_velocity_based","new_static","next","next_position","next_position","none","nonlinear_cast_shape","normal","normal","normal","normals","not","not","not","not","not","not","not","not","not","not","not","not","not","num_active_contacts","num_cells","num_connected_components","num_links","num_segments","num_triangles","num_velocity_constraints","num_vertices","offsetted","only_dynamic","only_fixed","only_kinematic","parent","parent_id","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","point","point","points","polyline","polyline","pos_wrt_parent","position","position","position","position","position","position","position","position_wrt_parent","position_wrt_parent","predicate","predicate","predict_impacts_at_next_positions","predict_position_using_velocity_and_forces","prediction_distance","principal_inertia","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_feature","project_local_point_and_get_location","project_local_point_and_get_location","project_local_point_and_get_location","project_local_point_and_get_location_with_max_dist","project_local_point_assuming_solid_interior_ccw","project_local_point_with_max_dist","project_local_point_with_max_dist","project_point","project_point_and_get_feature","propagate_modified_body_positions_to_colliders","provide","pseudo_kinetic_energy","qbvh","qbvh","qbvh","qbvh","qbvh","qbvh","query_dispatcher","query_dispatcher","ranges","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_graph","recompute_mass_properties_from_colliders","recompute_mass_properties_from_colliders","relative_dominance","relative_eq","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_joints_attached_to_rigid_body","remove_joints_attached_to_rigid_body","remove_multibody_articulations","removed","render","render_all","render_colliders","render_contacts","render_joints","render_rigid_bodies","reset_forces","reset_torques","restitution","restitution","restitution","restitution","restitution","restitution_combine_rule","restitution_combine_rule","restitution_combine_rule","restitution_combine_rule","restrict_rotations","restrict_translations","restrict_translations","reverse","reverse","rigid_body1","rigid_body1","rigid_body1","rigid_body2","rigid_body2","rigid_body2","rigid_body_axes_length","rigid_body_handle","rigid_body_link","root","root_aabb","root_mut","rotation","rotation","rotation","rotation","round_convex_decomposition","round_convex_decomposition","round_convex_decomposition_with_params","round_convex_decomposition_with_params","round_convex_hull","round_convex_hull","round_convex_polyline","round_convex_polyline","round_cuboid","round_cuboid","round_triangle","round_triangle","scale","scaled","scaled","scaled","scaled","scaled","segment","segment","segment","segment_at","segment_feature_to_polyline_feature","segments","segments","sensor","sensor","set","set","set","set","set","set","set","set","set","set","set","set","set","set_active_collision_types","set_active_events","set_active_hooks","set_additional_mass","set_additional_mass_properties","set_angular_damping","set_angvel","set_body_type","set_collision_groups","set_contact_force_event_threshold","set_contacts_enabled","set_contacts_enabled","set_contacts_enabled","set_contacts_enabled","set_contacts_enabled","set_density","set_dominance_group","set_dt","set_enabled","set_enabled","set_enabled","set_enabled_rotations","set_enabled_translations","set_flags","set_friction","set_friction_combine_rule","set_gravity_scale","set_inv_dt","set_limits","set_limits","set_limits","set_limits","set_linear_damping","set_linvel","set_local_anchor1","set_local_anchor1","set_local_anchor1","set_local_anchor1","set_local_anchor1","set_local_anchor2","set_local_anchor2","set_local_anchor2","set_local_anchor2","set_local_anchor2","set_local_axis1","set_local_axis1","set_local_axis1","set_local_axis2","set_local_axis2","set_local_axis2","set_local_frame1","set_local_frame1","set_local_frame2","set_local_frame2","set_locked_axes","set_mass","set_mass","set_mass_properties","set_motor","set_motor","set_motor","set_motor","set_motor","set_motor","set_motor","set_motor_max_force","set_motor_max_force","set_motor_max_force","set_motor_max_force","set_motor_model","set_motor_model","set_motor_model","set_motor_model","set_motor_position","set_motor_position","set_motor_position","set_motor_position","set_motor_velocity","set_motor_velocity","set_motor_velocity","set_motor_velocity","set_next_kinematic_position","set_next_kinematic_rotation","set_next_kinematic_translation","set_parent","set_position","set_position","set_position_wrt_parent","set_restitution","set_restitution_combine_rule","set_rotation","set_rotation","set_rotation_wrt_parent","set_scale","set_segment_removed","set_sensor","set_shape","set_solver_groups","set_translation","set_translation","set_translation_wrt_parent","shape","shape","shape_mut","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shape_type","shapes","shared_shape","sleep","sleep","sleep_color_multiplier","sleeping","sleeping","sleeping","solver_contacts","solver_contacts","solver_flags","solver_groups","solver_groups","solver_groups","solver_groups","start_x","started","step","step","stiffness","stopped","style","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subdivisions","sum","support_feature_id_toward","support_point","support_point","support_point_toward","support_point_toward","swap","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tangent_impulse","tangent_velocity","target_pos","target_vel","test","test","test","test","time_since_can_sleep","time_until_sleep","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_polyline","to_polyline","to_polyline","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","torque","total_force","total_force_magnitude","total_impulse","total_impulse_magnitude","transform_by","transform_by","transform_vertices","transformed","translation","translation","translation","translation","triangle","triangle","triangle","triangles","trimesh","trimesh","trimesh_with_flags","trimesh_with_flags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twin","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed_qbvh","typed_qbvh","typed_qbvh","typed_qbvh","typed_qbvh","unclamped_elements_range_in_local_aabb","union","union","union","union","union","union","union","union","union","union","union","union","union","unit_cell_width","unit_joint_limit_constraint","unit_joint_motor_constraint","unpack","unwrap_face","unwrap_vertex","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update_as_oneway_platform","update_ccd_active_flags","update_incremental","update_positions","update_with_mode","update_world_mass_properties","user_data","user_data","user_data","user_data","user_data","user_data","user_data","user_data","user_force","user_force","user_torque","user_torque","vector","velocity_at_point","velocity_at_point","velocity_constraints","vertex","vertex","vertices","vertices","vertices","vertices","vids","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wake_up","wake_up","wake_up","with_filter","with_flags","with_memberships","with_query_dispatcher","with_query_dispatcher","with_query_dispatcher","world_com","world_com","world_inv_inertia_sqrt","zero","zero","zero","zero","dt","edge","triangle1","triangle2","AbstractRotation","Affine2","Affine3","ArrayStorage","Bidiagonal","CStride","CStride","Cholesky","ClosedAdd","ClosedDiv","ClosedMul","ClosedSub","ColPivQR","Complex","ComplexField","Const","Const","DMatrix","DMatrixSlice","DMatrixSliceMut","DMatrixView","DMatrixViewMut","DVector","DVectorSlice","DVectorSliceMut","DVectorView","DVectorViewMut","DefaultAllocator","Dim","DimAdd","DimDiff","DimDiv","DimMax","DimMaximum","DimMin","DimMinimum","DimMul","DimName","DimNameAdd","DimNameDiff","DimNameDiv","DimNameMax","DimNameMaximum","DimNameMin","DimNameMinimum","DimNameMul","DimNameProd","DimNameQuot","DimNameSub","DimNameSum","DimProd","DimQuot","DimRange","DimSub","DimSum","DualQuaternion","Dyn","Dynamic","Element","EuclideanNorm","Field","FullPivLU","Hessenberg","IsContiguous","IsDynamic","IsNotStaticOne","Isometry","Isometry2","Isometry3","IsometryMatrix2","IsometryMatrix3","LU","LpNorm","Matrix","Matrix1","Matrix1x2","Matrix1x3","Matrix1x4","Matrix1x5","Matrix1x6","Matrix1xX","Matrix2","Matrix2x1","Matrix2x3","Matrix2x4","Matrix2x5","Matrix2x6","Matrix2xX","Matrix3","Matrix3x1","Matrix3x2","Matrix3x4","Matrix3x5","Matrix3x6","Matrix3xX","Matrix4","Matrix4x1","Matrix4x2","Matrix4x3","Matrix4x5","Matrix4x6","Matrix4xX","Matrix5","Matrix5x1","Matrix5x2","Matrix5x3","Matrix5x4","Matrix5x6","Matrix5xX","Matrix6","Matrix6x1","Matrix6x2","Matrix6x3","Matrix6x4","Matrix6x5","Matrix6xX","MatrixCross","MatrixMN","MatrixN","MatrixSlice","MatrixSlice1","MatrixSlice1x2","MatrixSlice1x3","MatrixSlice1x4","MatrixSlice1x5","MatrixSlice1x6","MatrixSlice1xX","MatrixSlice2","MatrixSlice2x1","MatrixSlice2x3","MatrixSlice2x4","MatrixSlice2x5","MatrixSlice2x6","MatrixSlice2xX","MatrixSlice3","MatrixSlice3x1","MatrixSlice3x2","MatrixSlice3x4","MatrixSlice3x5","MatrixSlice3x6","MatrixSlice3xX","MatrixSlice4","MatrixSlice4x1","MatrixSlice4x2","MatrixSlice4x3","MatrixSlice4x5","MatrixSlice4x6","MatrixSlice4xX","MatrixSlice5","MatrixSlice5x1","MatrixSlice5x2","MatrixSlice5x3","MatrixSlice5x4","MatrixSlice5x6","MatrixSlice5xX","MatrixSlice6","MatrixSlice6x1","MatrixSlice6x2","MatrixSlice6x3","MatrixSlice6x4","MatrixSlice6x5","MatrixSlice6xX","MatrixSliceMut","MatrixSliceMut1","MatrixSliceMut1x2","MatrixSliceMut1x3","MatrixSliceMut1x4","MatrixSliceMut1x5","MatrixSliceMut1x6","MatrixSliceMut1xX","MatrixSliceMut2","MatrixSliceMut2x1","MatrixSliceMut2x3","MatrixSliceMut2x4","MatrixSliceMut2x5","MatrixSliceMut2x6","MatrixSliceMut2xX","MatrixSliceMut3","MatrixSliceMut3x1","MatrixSliceMut3x2","MatrixSliceMut3x4","MatrixSliceMut3x5","MatrixSliceMut3x6","MatrixSliceMut3xX","MatrixSliceMut4","MatrixSliceMut4x1","MatrixSliceMut4x2","MatrixSliceMut4x3","MatrixSliceMut4x5","MatrixSliceMut4x6","MatrixSliceMut4xX","MatrixSliceMut5","MatrixSliceMut5x1","MatrixSliceMut5x2","MatrixSliceMut5x3","MatrixSliceMut5x4","MatrixSliceMut5x6","MatrixSliceMut5xX","MatrixSliceMut6","MatrixSliceMut6x1","MatrixSliceMut6x2","MatrixSliceMut6x3","MatrixSliceMut6x4","MatrixSliceMut6x5","MatrixSliceMut6xX","MatrixSliceMutMN","MatrixSliceMutN","MatrixSliceMutXx1","MatrixSliceMutXx2","MatrixSliceMutXx3","MatrixSliceMutXx4","MatrixSliceMutXx5","MatrixSliceMutXx6","MatrixSliceXx1","MatrixSliceXx2","MatrixSliceXx3","MatrixSliceXx4","MatrixSliceXx5","MatrixSliceXx6","MatrixSum","MatrixVec","MatrixView","MatrixView1","MatrixView1x2","MatrixView1x3","MatrixView1x4","MatrixView1x5","MatrixView1x6","MatrixView1xX","MatrixView2","MatrixView2x1","MatrixView2x3","MatrixView2x4","MatrixView2x5","MatrixView2x6","MatrixView2xX","MatrixView3","MatrixView3x1","MatrixView3x2","MatrixView3x4","MatrixView3x5","MatrixView3x6","MatrixView3xX","MatrixView4","MatrixView4x1","MatrixView4x2","MatrixView4x3","MatrixView4x5","MatrixView4x6","MatrixView4xX","MatrixView5","MatrixView5x1","MatrixView5x2","MatrixView5x3","MatrixView5x4","MatrixView5x6","MatrixView5xX","MatrixView6","MatrixView6x1","MatrixView6x2","MatrixView6x3","MatrixView6x4","MatrixView6x5","MatrixView6xX","MatrixViewMut","MatrixViewMut1","MatrixViewMut1x2","MatrixViewMut1x3","MatrixViewMut1x4","MatrixViewMut1x5","MatrixViewMut1x6","MatrixViewMut1xX","MatrixViewMut2","MatrixViewMut2x1","MatrixViewMut2x3","MatrixViewMut2x4","MatrixViewMut2x5","MatrixViewMut2x6","MatrixViewMut2xX","MatrixViewMut3","MatrixViewMut3x1","MatrixViewMut3x2","MatrixViewMut3x4","MatrixViewMut3x5","MatrixViewMut3x6","MatrixViewMut3xX","MatrixViewMut4","MatrixViewMut4x1","MatrixViewMut4x2","MatrixViewMut4x3","MatrixViewMut4x5","MatrixViewMut4x6","MatrixViewMut4xX","MatrixViewMut5","MatrixViewMut5x1","MatrixViewMut5x2","MatrixViewMut5x3","MatrixViewMut5x4","MatrixViewMut5x6","MatrixViewMut5xX","MatrixViewMut6","MatrixViewMut6x1","MatrixViewMut6x2","MatrixViewMut6x3","MatrixViewMut6x4","MatrixViewMut6x5","MatrixViewMut6xX","MatrixViewMutXx1","MatrixViewMutXx2","MatrixViewMutXx3","MatrixViewMutXx4","MatrixViewMutXx5","MatrixViewMutXx6","MatrixViewXx1","MatrixViewXx2","MatrixViewXx3","MatrixViewXx4","MatrixViewXx5","MatrixViewXx6","MatrixXx1","MatrixXx2","MatrixXx3","MatrixXx4","MatrixXx5","MatrixXx6","Norm","Norm","Normed","OMatrix","OPoint","OVector","Orthographic3","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Owned","OwnedUninit","PermutationSequence","Perspective3","Point","Point1","Point2","Point3","Point4","Point5","Point6","Projective2","Projective3","QR","Quaternion","RStride","RStride","RawStorage","RawStorageMut","RealField","RealField","Reflection","Reflection1","Reflection2","Reflection3","Reflection4","Reflection5","Reflection6","Representative","ReshapableStorage","Rotation","Rotation2","Rotation3","RowDVector","RowOVector","RowSVector","RowVector","RowVector1","RowVector2","RowVector3","RowVector4","RowVector5","RowVector6","SMatrix","SMatrixSlice","SMatrixSliceMut","SMatrixView","SMatrixViewMut","SVD","SVector","SVectorSlice","SVectorSliceMut","SVectorView","SVectorViewMut","SameShapeStorage","Scalar","Scale","Scale1","Scale2","Scale3","Scale4","Scale5","Scale6","Schur","SimdBool","SimdBool","SimdComplexField","SimdPartialOrd","SimdRealField","SimdRealField","SimdValue","Similarity","Similarity2","Similarity3","SimilarityMatrix2","SimilarityMatrix3","Size","SliceRange","SliceStorage","SliceStorageMut","SquareMatrix","Storage","StorageMut","SubTCategoryOf","SuperTCategoryOf","SymmetricEigen","SymmetricTridiagonal","TAffine","TCategory","TCategoryMul","TGeneral","TProjective","ToConst","ToTypenum","Transform","Transform2","Transform3","Translation","Translation1","Translation2","Translation3","Translation4","Translation5","Translation6","Typenum","U0","U0","U1","U1","U10","U10","U100","U100","U101","U101","U102","U102","U103","U103","U104","U104","U105","U105","U106","U106","U107","U107","U108","U108","U109","U109","U11","U11","U110","U110","U111","U111","U112","U112","U113","U113","U114","U114","U115","U115","U116","U116","U117","U117","U118","U118","U119","U119","U12","U12","U120","U120","U121","U121","U122","U122","U123","U123","U124","U124","U125","U125","U126","U126","U127","U127","U13","U13","U14","U14","U15","U15","U16","U16","U17","U17","U18","U18","U19","U19","U2","U2","U20","U20","U21","U21","U22","U22","U23","U23","U24","U24","U25","U25","U26","U26","U27","U27","U28","U28","U29","U29","U3","U3","U30","U30","U31","U31","U32","U32","U33","U33","U34","U34","U35","U35","U36","U36","U37","U37","U38","U38","U39","U39","U4","U4","U40","U40","U41","U41","U42","U42","U43","U43","U44","U44","U45","U45","U46","U46","U47","U47","U48","U48","U49","U49","U5","U5","U50","U50","U51","U51","U52","U52","U53","U53","U54","U54","U55","U55","U56","U56","U57","U57","U58","U58","U59","U59","U6","U6","U60","U60","U61","U61","U62","U62","U63","U63","U64","U64","U65","U65","U66","U66","U67","U67","U68","U68","U69","U69","U7","U7","U70","U70","U71","U71","U72","U72","U73","U73","U74","U74","U75","U75","U76","U76","U77","U77","U78","U78","U79","U79","U8","U8","U80","U80","U81","U81","U82","U82","U83","U83","U84","U84","U85","U85","U86","U86","U87","U87","U88","U88","U89","U89","U9","U9","U90","U90","U91","U91","U92","U92","U93","U93","U94","U94","U95","U95","U96","U96","U97","U97","U98","U98","U99","U99","UDU","USIZE","UniformNorm","UninitMatrix","UninitVector","Unit","UnitComplex","UnitDualQuaternion","UnitQuaternion","UnitVector1","UnitVector2","UnitVector3","UnitVector4","UnitVector5","UnitVector6","VecStorage","Vector","Vector1","Vector2","Vector3","Vector4","Vector5","Vector6","VectorN","VectorSlice","VectorSlice1","VectorSlice2","VectorSlice3","VectorSlice4","VectorSlice5","VectorSlice6","VectorSliceMut","VectorSliceMut1","VectorSliceMut2","VectorSliceMut3","VectorSliceMut4","VectorSliceMut5","VectorSliceMut6","VectorSum","VectorView","VectorView1","VectorView2","VectorView3","VectorView4","VectorView5","VectorView6","VectorViewMut","VectorViewMut1","VectorViewMut2","VectorViewMut3","VectorViewMut4","VectorViewMut5","VectorViewMut6","ViewStorage","ViewStorageMut","a","a_axis","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","absolute_transform_vector","absolute_transform_vector","acos","acos","acos","acosh","acosh","acosh","ad_mul","ad_mul_to","ad_solve_lower_triangular","ad_solve_lower_triangular_mut","ad_solve_lower_triangular_unchecked","ad_solve_lower_triangular_unchecked_mut","ad_solve_upper_triangular","ad_solve_upper_triangular_mut","ad_solve_upper_triangular_unchecked","ad_solve_upper_triangular_unchecked_mut","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_scalar","add_scalar_mut","add_to","adjoint","adjoint_mut","adjoint_to","all","allocate_from_iterator","allocate_from_iterator","allocate_from_iterator","allocate_uninit","allocate_uninit","allocate_uninit","amax","amin","and","angle","angle","angle","angle","angle","angle_to","angle_to","angle_to","angle_to","any","append_axisangle_linearized","append_nonuniform_scaling","append_nonuniform_scaling_mut","append_permutation","append_rotation_mut","append_rotation_mut","append_rotation_wrt_center_mut","append_rotation_wrt_center_mut","append_rotation_wrt_point_mut","append_rotation_wrt_point_mut","append_scaling","append_scaling","append_scaling_mut","append_scaling_mut","append_translation","append_translation_mut","append_translation_mut","append_translation_mut","apply","apply","apply_into","apply_metric_distance","apply_norm","argmax","argmin","argument","argument","as_","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bytes","as_bytes","as_bytes","as_bytes","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_matrix","as_matrix","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_mut_slice","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_slice_unchecked","as_mut_unchecked","as_projective","as_projective","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","as_slice","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_slice_unchecked","as_vec","as_vec_mut","as_vector","as_vector_mut","as_view","as_view_mut","asin","asin","asin","asinh","asinh","asinh","aspect","assume_init","assume_init","assume_init","assume_init","atan","atan","atan","atan2","atanh","atanh","atanh","axcpy","axis","axis","axis","axis_angle","axis_angle","axis_angle","axpy","b","b_axis","base","begin","bias","bidiagonalize","bitmask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","camax","camin","cap_magnitude","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cbrt","cbrt","cdpy","ceil","ceil","center","check_homogeneous_invariants","check_homogeneous_invariants","check_homogeneous_invariants","check_homogeneous_invariants","cholesky","clamp","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned","clone_owned_sum","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","cmpy","col_piv_qr","column","column_iter","column_iter_mut","column_mean","column_mut","column_part","column_part_mut","column_product","column_sum","column_variance","columns","columns_generic","columns_generic_mut","columns_generic_with_step","columns_generic_with_step_mut","columns_mut","columns_range","columns_range_mut","columns_range_pair","columns_range_pair_mut","columns_with_step","columns_with_step_mut","complex","complex_eigenvalues","complex_eigenvalues","component_div","component_div_assign","component_div_mut","component_mul","component_mul_assign","component_mul_mut","compress_columns","compress_rows","compress_rows_tr","conj","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_mut","conjugate_transform_mut","conjugate_transpose","conjugate_transpose_to","convert","convert_ref","convert_ref_unchecked","convert_unchecked","convolve_full","convolve_same","convolve_valid","coords","coords","copy_from","copy_from_slice","copy_sign_to","copy_sign_to","copy_sign_to","copy_sign_to","copysign","cos","cos","cos","cos_angle","cosc","cosh","cosh","cosh","coshc","cross","cross_matrix","d","d","d_matrix","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determinant","determinant","determinant","determinant","determinant","determinant","diagonal","diagonal","diagonal","diff_conj1_2","diff_conj1_2","dim","dim","distance","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmatrix","dot","dot","dotc","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dual","dual_quaternion","dvector","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","e","eigenvalues","eigenvalues","eigenvalues","eigenvectors","encode_hex","encode_hex_upper","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","euler_angles","euler_angles","exp","exp","exp","exp","exp","exp2","exp2","exp_eps","exp_m1","exp_m1","extend","extend","extend","extend","extend","extend","extend","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","extract_unchecked","face_towards","face_towards","face_towards","face_towards","face_towards","face_towards","face_towards","fill","fill_column","fill_diagonal","fill_lower_triangle","fill_lower_triangle_with_upper_triangle","fill_row","fill_upper_triangle","fill_upper_triangle_with_lower_triangle","fill_with","fill_with_identity","fixed_columns","fixed_columns_mut","fixed_columns_with_step","fixed_columns_with_step_mut","fixed_resize","fixed_rows","fixed_rows_mut","fixed_rows_with_step","fixed_rows_with_step_mut","fixed_slice","fixed_slice_mut","fixed_slice_with_steps","fixed_slice_with_steps_mut","fixed_view","fixed_view_mut","fixed_view_with_steps","fixed_view_with_steps_mut","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold_with","fovy","frac_1_pi","frac_2_pi","frac_2_sqrt_pi","frac_pi_2","frac_pi_3","frac_pi_4","frac_pi_6","frac_pi_8","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_array_storage","from_axis_angle","from_axis_angle","from_axis_angle","from_basis_unchecked","from_basis_unchecked","from_basis_unchecked","from_basis_unchecked","from_column_slice","from_column_slice","from_column_slice","from_column_slice","from_column_slice_generic","from_columns","from_complex","from_complex_and_get","from_coordinates","from_cos_sin_unchecked","from_data","from_data_statically_unchecked","from_diagonal","from_diagonal_element","from_diagonal_element","from_diagonal_element","from_diagonal_element","from_diagonal_element_generic","from_element","from_element","from_element","from_element","from_element_generic","from_euler_angles","from_euler_angles","from_euler_angles","from_f32","from_f64","from_fn","from_fn","from_fn","from_fn","from_fn_generic","from_fov","from_homogeneous","from_homogeneous","from_i128","from_i16","from_i32","from_i64","from_i8","from_imag","from_isize","from_isometry","from_isometry","from_iterator","from_iterator","from_iterator","from_iterator","from_iterator_generic","from_matrix","from_matrix","from_matrix","from_matrix","from_matrix_eps","from_matrix_eps","from_matrix_eps","from_matrix_eps","from_matrix_unchecked","from_matrix_unchecked","from_matrix_unchecked","from_matrix_unchecked","from_partial_diagonal","from_partial_diagonal","from_partial_diagonal","from_partial_diagonal","from_partial_diagonal_generic","from_parts","from_parts","from_parts","from_parts","from_polar_decomposition","from_quaternion","from_raw_parts","from_raw_parts","from_real","from_real","from_real","from_real","from_real_and_dual","from_ref_unchecked","from_rotation","from_rotation_matrix","from_rotation_matrix","from_row_iterator","from_row_iterator","from_row_iterator","from_row_iterator","from_row_iterator_generic","from_row_slice","from_row_slice","from_row_slice","from_row_slice","from_row_slice_generic","from_rows","from_scaled_axis","from_scaled_axis","from_scaled_axis","from_scaled_axis","from_scaled_axis","from_scaled_axis_eps","from_scaling","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_simd_real","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_generic","from_slice_generic","from_slice_generic_unchecked","from_slice_generic_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_unchecked","from_slice_with_strides","from_slice_with_strides","from_slice_with_strides","from_slice_with_strides","from_slice_with_strides_generic","from_slice_with_strides_generic","from_slice_with_strides_generic_unchecked","from_slice_with_strides_generic_unchecked","from_slice_with_strides_mut","from_slice_with_strides_mut","from_slice_with_strides_mut","from_slice_with_strides_mut","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_slice_with_strides_unchecked","from_str","from_str_radix","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_superset_unchecked","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","from_usize","from_usize","from_usize","from_vec","from_vec","from_vec","from_vec","from_vec_generic","from_vec_storage","from_vec_storage","from_vec_storage","from_vector","from_vector","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","full_piv_lu","ge","ge","gemm","gemm_ad","gemm_tr","gemv","gemv_ad","gemv_tr","generic_slice","generic_slice_mut","generic_slice_with_steps","generic_slice_with_steps_mut","generic_view","generic_view_mut","generic_view_with_steps","generic_view_with_steps_mut","geometry","ger","ger_symm","gerc","get","get","get_address_unchecked","get_address_unchecked_linear","get_address_unchecked_linear_mut","get_address_unchecked_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut","get_unchecked","get_unchecked","get_unchecked","get_unchecked_linear","get_unchecked_linear_mut","get_unchecked_mut","get_unchecked_mut","get_unchecked_mut","gt","gt","h","half","has_normalizer","has_normalizer","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hegemv","hegerc","hermitian_part","hessenberg","hypot","hypot","i","iamax","iamax_full","iamin","icamax","icamax_full","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity_generic","identity_generic","if_else","if_else2","if_else3","im","imag","imaginary","imaginary","imax","imin","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","inf","inf","inf","inf_sup","inf_sup","inf_sup","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","insert_column","insert_column","insert_columns","insert_columns_generic_uninitialized","insert_fixed_columns","insert_fixed_rows","insert_row","insert_rows","insert_rows_generic_uninitialized","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned_sum","into_slice","into_slice","into_slice_mut","inv","inv","inv","inv_mul","inv_permute_columns","inv_permute_rows","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_mut","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_point","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_unit_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_transform_vector","inverse_unchecked","is","is_contiguous","is_contiguous","is_contiguous","is_contiguous","is_contiguous","is_contiguous","is_convertible","is_empty","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_identity","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_infinite","is_invertible","is_invertible","is_invertible","is_invertible","is_invertible","is_nan","is_normal","is_one","is_orthogonal","is_pure","is_sign_negative","is_sign_positive","is_special_orthogonal","is_square","is_upper_diagonal","is_zero","is_zero","is_zero","is_zero","isometry","isometry_to","iter","iter","iter_mut","iter_mut","ith","ith_axis","kronecker","l","l","l","l1_norm","l_dirty","l_unpack","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","lanes","le","le","left","left_div","len","len","len","len","len","lerp","lerp","lerp","lerp","lerp","lerp_slerp","lerp_slerp","lerp_slerp","lerp_slerp","linalg","linear_index","ln","ln","ln","ln","ln_10","ln_1p","ln_1p","ln_2","ln_determinant","log","log","log10","log10","log10_e","log2","log2","log2_e","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","lower_triangle","lp_norm","lt","lt","lu","magnitude","magnitude","magnitude_squared","magnitude_squared","map","map","map_diagonal","map_lanes","map_with_location","matrix","matrix","matrix","matrix_mut","matrix_mut","matrix_mut_unchecked","matrix_mut_unchecked","max","max","max","max","max","max","max","max","max","max_value","max_value","max_value","max_value","max_value","mean","mean_of","metric_distance","metric_distance","metric_distance","metric_distance","metric_distance","min","min","min","min","min","min","min","min","min","min_value","min_value","min_value","min_value","min_value","modulus","modulus","modulus_squared","modulus_squared","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_to","name","name","ncols","ncols","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg_mut","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_and_get","new_containing_point","new_eps","new_nonuniform_scaling","new_nonuniform_scaling_wrt_point","new_nonuniform_scaling_wrt_point","new_normalize","new_observer_frame","new_observer_frame","new_observer_frame","new_observer_frames","new_observer_frames","new_observer_frames","new_observer_frames","new_orthographic","new_perspective","new_rotation","new_rotation","new_rotation_wrt_point","new_scaling","new_translation","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unordered","new_with_strides_unchecked","new_with_strides_unchecked","new_with_substitute","new_with_workspace","nlerp","nlerp","none","norm","norm","norm","norm","norm","norm","norm","norm","norm","norm","norm","norm1","norm1","norm_sqr","norm_squared","norm_squared","norm_squared","norm_squared","norm_squared","norm_squared","norm_squared","normalize","normalize","normalize","normalize_mut","normalize_mut","normalize_mut","nrows","nrows","off_diagonal","off_diagonal","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","or","origin","orthonormal_basis","orthonormal_basis","orthonormal_subspace_basis","orthonormal_vector","orthonormal_vector","orthonormalize","outer","p","p","p","pack_dirty","partial_clamp","partial_cmp","partial_cmp","partial_cmp","partial_ge","partial_gt","partial_le","partial_lt","partial_max","partial_min","partial_sort2","permute_columns","permute_rows","perp","pi","point","polar","polar_decomposition","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow_mut","powc","powc","powf","powf","powf","powf","powf","powf","powf","powi","powi","powi","powu","prepend_nonuniform_scaling","prepend_nonuniform_scaling_mut","prepend_scaling","prepend_scaling","prepend_scaling_mut","prepend_scaling_mut","prepend_translation","prepend_translation_mut","product","product","product","product","product","project","project_point","project_point","project_vector","project_vector","pseudo_inverse","pseudo_inverse","pseudo_inverse","ptr","ptr","ptr","ptr","ptr","ptr","ptr_mut","ptr_mut","ptr_mut","ptr_mut","ptr_mut","pure","push","q","q","q","q","q","q_tr_mul","q_tr_mul","qr","quadform","quadform_tr","quadform_tr_with_workspace","quadform_with_workspace","quaternion","r","r","rank","rank","rank_one_update","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","re","real","real","real","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","reallocate_copy","recip","recip","recompose","recompose","recompose","reflect","reflect_rows","reflect_rows_with_sign","reflect_with_sign","reject","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","remove_column","remove_column","remove_columns","remove_columns_at","remove_columns_generic","remove_fixed_columns","remove_fixed_rows","remove_row","remove_rows","remove_rows_at","remove_rows_generic","renormalize","renormalize","renormalize","renormalize_fast","repeat","repeat","repeat","repeat","repeat_generic","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","replace_unchecked","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","reshape_generic","resize","resize","resize_generic","resize_horizontally","resize_horizontally_mut","resize_mut","resize_vertically","resize_vertically_mut","right","right_div","rotation","rotation","rotation","rotation","rotation","rotation","rotation_between","rotation_between","rotation_between","rotation_between","rotation_between_axis","rotation_between_axis","rotation_to","rotation_to","rotation_to","rotation_to","rotation_wrt_point","rotation_wrt_point","round","round","row","row_iter","row_iter_mut","row_mean","row_mean_tr","row_mut","row_part","row_part_mut","row_product","row_product_tr","row_sum","row_sum_tr","row_variance","row_variance_tr","rows","rows_generic","rows_generic_mut","rows_generic_with_step","rows_generic_with_step_mut","rows_mut","rows_range","rows_range_mut","rows_range_pair","rows_range_pair_mut","rows_with_step","rows_with_step_mut","scalar","scale","scale","scale","scale","scale_mut","scale_mut","scale_mut","scale_mut","scale_mut","scale_mut","scaled_axis","scaled_axis","scaled_axis","scaled_axis","scaled_rotation_between","scaled_rotation_between","scaled_rotation_between","scaled_rotation_between","scaled_rotation_between_axis","scaled_rotation_between_axis","scaling","schur","sclerp","select","select","select","select","select","select","select","select","select","select","select","select","select","select_columns","select_rows","set","set_aspect","set_bottom","set_bottom_and_top","set_category","set_column","set_diagonal","set_fovy","set_left","set_left_and_right","set_magnitude","set_one","set_partial_diagonal","set_right","set_row","set_scaling","set_top","set_zero","set_zfar","set_zfar","set_znear","set_znear","set_znear_and_zfar","set_znear_and_zfar","shape","shape","shape","shape","shape","shape","shape","shape_generic","signum","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_abs","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acos","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_acosh","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_argument","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asin","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_asinh","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan","simd_atan2","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_atanh","simd_cap_magnitude","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_cbrt","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_ceil","simd_clamp","simd_clamp","simd_clamp","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_conjugate","simd_copysign","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cos","simd_cosc","simd_cosc","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_cosh","simd_coshc","simd_coshc","simd_default_epsilon","simd_e","simd_eq","simd_eq","simd_eq","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp2","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_exp_m1","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_floor","simd_frac_1_pi","simd_frac_2_pi","simd_frac_2_sqrt_pi","simd_frac_pi_2","simd_frac_pi_3","simd_frac_pi_4","simd_frac_pi_6","simd_frac_pi_8","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_fract","simd_ge","simd_ge","simd_ge","simd_gt","simd_gt","simd_gt","simd_horizontal_max","simd_horizontal_max","simd_horizontal_max","simd_horizontal_min","simd_horizontal_min","simd_horizontal_min","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_product","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_horizontal_sum","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_hypot","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_imaginary","simd_le","simd_le","simd_le","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln","simd_ln_10","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_1p","simd_ln_2","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10","simd_log10_e","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2","simd_log2_e","simd_lt","simd_lt","simd_lt","simd_max","simd_max","simd_max","simd_min","simd_min","simd_min","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_modulus_squared","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_mul_add","simd_ne","simd_ne","simd_ne","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_norm1","simd_pi","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powc","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powf","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_powi","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_real","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_recip","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_round","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_scale","simd_signum","simd_signum","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sin_cos","simd_sinc","simd_sinc","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinh_cosh","simd_sinhc","simd_sinhc","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_sqrt","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tan","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_tanh","simd_to_exp","simd_to_exp","simd_to_polar","simd_to_polar","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_trunc","simd_try_inverse","simd_try_normalize","simd_try_normalize_mut","simd_two_pi","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","simd_unscale","sin","sin","sin","sin_angle","sin_cos","sin_cos","sinc","singular_values","singular_values","singular_values_unordered","sinh","sinh","sinh","sinh_cosh","sinh_cosh","sinhc","size","slerp","slerp","slerp","slerp","slerp","slerp","slice","slice_mut","slice_range","slice_range_mut","slice_with_steps","slice_with_steps_mut","solve","solve","solve","solve","solve","solve","solve_lower_triangular","solve_lower_triangular_mut","solve_lower_triangular_unchecked","solve_lower_triangular_unchecked_mut","solve_lower_triangular_with_diag_mut","solve_lower_triangular_with_diag_unchecked_mut","solve_mut","solve_mut","solve_mut","solve_mut","solve_mut","solve_upper_triangular","solve_upper_triangular_mut","solve_upper_triangular_unchecked","solve_upper_triangular_unchecked_mut","sort_by_singular_values","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","sqrt","sqrt","sqrt","squared","stride","strides","strides","strides","strides","strides","strides","strides","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_to","sum","sum","sum","sum","sum","sum","sum","sup","sup","sup","svd","svd_unordered","swap","swap_columns","swap_rows","swap_unchecked","swap_unchecked","swap_unchecked","swap_unchecked_linear","sygemv","syger","symmetric_eigen","symmetric_eigenvalues","symmetric_part","symmetric_tridiagonalize","tan","tan","tan","tanh","tanh","tanh","to_euler_angles","to_euler_angles","to_exp","to_f32","to_f64","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_homogeneous","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_isometry","to_matrix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_polar","to_polar","to_projective","to_projective","to_rotation_matrix","to_rotation_matrix","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_superset","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","top","tr_copy_from","tr_dot","tr_mul","tr_mul_to","tr_solve_lower_triangular","tr_solve_lower_triangular_mut","tr_solve_lower_triangular_unchecked","tr_solve_lower_triangular_unchecked_mut","tr_solve_upper_triangular","tr_solve_upper_triangular_mut","tr_solve_upper_triangular_unchecked","tr_solve_upper_triangular_unchecked_mut","trace","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_point","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","transform_vector","translation","translation","translation","translation","translation","translation","transpose","transpose","transpose_mut","transpose_mut","transpose_to","trunc","trunc","try_cast","try_convert","try_convert_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse","try_inverse_mut","try_inverse_mut","try_inverse_mut","try_inverse_mut","try_inverse_mut","try_inverse_to","try_inverse_transform_point","try_invert_to","try_lerp_slerp","try_lerp_slerp","try_new","try_new","try_new","try_new","try_new_and_get","try_new_unordered","try_normalize","try_normalize_mut","try_polar","try_schur","try_sclerp","try_set_magnitude","try_slerp","try_slerp","try_slerp","try_sqrt","try_sqrt","try_svd","try_svd_unordered","try_symmetric_eigen","try_to_usize","try_to_usize","try_to_usize","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u","u","u","udu","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","uninit","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack_dirty","unpack_h","unpack_r","unpack_r","unpack_tridiagonal","unproject_point","unproject_point","unscale","unscale","unscale","unscale","unscale_mut","unscale_mut","unscale_mut","unscale_mut","unscale_mut","unscale_mut","unwrap","unwrap","unwrap","unwrap","unwrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upper_triangle","v_t","v_t","value","value","value","variance","vector","vector","vector","vector","vector_mut","vector_to_matrix_index","vget_unchecked","vget_unchecked_mut","view","view_mut","view_range","view_range_mut","view_with_steps","view_with_steps_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w_axis","wilkinson_shift","wrap","x","x_axis","xor","xx","xx","xxx","xxx","xxy","xxy","xxz","xxz","xy","xy","xyx","xyx","xyy","xyy","xyz","xyz","xz","xz","xzx","xzx","xzy","xzy","xzz","xzz","y","y_axis","yx","yx","yxx","yxx","yxy","yxy","yxz","yxz","yy","yy","yyx","yyx","yyy","yyy","yyz","yyz","yz","yz","yzx","yzx","yzy","yzy","yzz","yzz","z","z_axis","zero","zero","zero","zero","zero","zero","zero","zero","zero","zeros","zeros","zeros","zeros","zeros_generic","zfar","zfar","zip_apply","zip_fold","zip_map","zip_map_lanes","zip_zip_apply","zip_zip_map","znear","znear","zx","zx","zxx","zxx","zxy","zxy","zxz","zxz","zy","zy","zyx","zyx","zyy","zyy","zyz","zyz","zz","zz","zzx","zzx","zzy","zzy","zzz","zzz","ArrayStorage","CStride","CStride","Const","Const","DMatrix","DMatrixSlice","DMatrixSliceMut","DMatrixView","DMatrixViewMut","DVector","DVectorSlice","DVectorSliceMut","DVectorView","DVectorViewMut","DefaultAllocator","Dim","DimAdd","DimDiff","DimDiv","DimMax","DimMaximum","DimMin","DimMinimum","DimMul","DimName","DimNameAdd","DimNameDiff","DimNameDiv","DimNameMax","DimNameMaximum","DimNameMin","DimNameMinimum","DimNameMul","DimNameProd","DimNameQuot","DimNameSub","DimNameSum","DimProd","DimQuot","DimRange","DimSub","DimSum","Dyn","Dynamic","EuclideanNorm","IsContiguous","IsDynamic","IsNotStaticOne","LpNorm","Matrix","Matrix1","Matrix1x2","Matrix1x3","Matrix1x4","Matrix1x5","Matrix1x6","Matrix1xX","Matrix2","Matrix2x1","Matrix2x3","Matrix2x4","Matrix2x5","Matrix2x6","Matrix2xX","Matrix3","Matrix3x1","Matrix3x2","Matrix3x4","Matrix3x5","Matrix3x6","Matrix3xX","Matrix4","Matrix4x1","Matrix4x2","Matrix4x3","Matrix4x5","Matrix4x6","Matrix4xX","Matrix5","Matrix5x1","Matrix5x2","Matrix5x3","Matrix5x4","Matrix5x6","Matrix5xX","Matrix6","Matrix6x1","Matrix6x2","Matrix6x3","Matrix6x4","Matrix6x5","Matrix6xX","MatrixCross","MatrixMN","MatrixN","MatrixSlice","MatrixSlice1","MatrixSlice1x2","MatrixSlice1x3","MatrixSlice1x4","MatrixSlice1x5","MatrixSlice1x6","MatrixSlice1xX","MatrixSlice2","MatrixSlice2x1","MatrixSlice2x3","MatrixSlice2x4","MatrixSlice2x5","MatrixSlice2x6","MatrixSlice2xX","MatrixSlice3","MatrixSlice3x1","MatrixSlice3x2","MatrixSlice3x4","MatrixSlice3x5","MatrixSlice3x6","MatrixSlice3xX","MatrixSlice4","MatrixSlice4x1","MatrixSlice4x2","MatrixSlice4x3","MatrixSlice4x5","MatrixSlice4x6","MatrixSlice4xX","MatrixSlice5","MatrixSlice5x1","MatrixSlice5x2","MatrixSlice5x3","MatrixSlice5x4","MatrixSlice5x6","MatrixSlice5xX","MatrixSlice6","MatrixSlice6x1","MatrixSlice6x2","MatrixSlice6x3","MatrixSlice6x4","MatrixSlice6x5","MatrixSlice6xX","MatrixSliceMut","MatrixSliceMut1","MatrixSliceMut1x2","MatrixSliceMut1x3","MatrixSliceMut1x4","MatrixSliceMut1x5","MatrixSliceMut1x6","MatrixSliceMut1xX","MatrixSliceMut2","MatrixSliceMut2x1","MatrixSliceMut2x3","MatrixSliceMut2x4","MatrixSliceMut2x5","MatrixSliceMut2x6","MatrixSliceMut2xX","MatrixSliceMut3","MatrixSliceMut3x1","MatrixSliceMut3x2","MatrixSliceMut3x4","MatrixSliceMut3x5","MatrixSliceMut3x6","MatrixSliceMut3xX","MatrixSliceMut4","MatrixSliceMut4x1","MatrixSliceMut4x2","MatrixSliceMut4x3","MatrixSliceMut4x5","MatrixSliceMut4x6","MatrixSliceMut4xX","MatrixSliceMut5","MatrixSliceMut5x1","MatrixSliceMut5x2","MatrixSliceMut5x3","MatrixSliceMut5x4","MatrixSliceMut5x6","MatrixSliceMut5xX","MatrixSliceMut6","MatrixSliceMut6x1","MatrixSliceMut6x2","MatrixSliceMut6x3","MatrixSliceMut6x4","MatrixSliceMut6x5","MatrixSliceMut6xX","MatrixSliceMutMN","MatrixSliceMutN","MatrixSliceMutXx1","MatrixSliceMutXx2","MatrixSliceMutXx3","MatrixSliceMutXx4","MatrixSliceMutXx5","MatrixSliceMutXx6","MatrixSliceXx1","MatrixSliceXx2","MatrixSliceXx3","MatrixSliceXx4","MatrixSliceXx5","MatrixSliceXx6","MatrixSum","MatrixVec","MatrixView","MatrixView1","MatrixView1x2","MatrixView1x3","MatrixView1x4","MatrixView1x5","MatrixView1x6","MatrixView1xX","MatrixView2","MatrixView2x1","MatrixView2x3","MatrixView2x4","MatrixView2x5","MatrixView2x6","MatrixView2xX","MatrixView3","MatrixView3x1","MatrixView3x2","MatrixView3x4","MatrixView3x5","MatrixView3x6","MatrixView3xX","MatrixView4","MatrixView4x1","MatrixView4x2","MatrixView4x3","MatrixView4x5","MatrixView4x6","MatrixView4xX","MatrixView5","MatrixView5x1","MatrixView5x2","MatrixView5x3","MatrixView5x4","MatrixView5x6","MatrixView5xX","MatrixView6","MatrixView6x1","MatrixView6x2","MatrixView6x3","MatrixView6x4","MatrixView6x5","MatrixView6xX","MatrixViewMut","MatrixViewMut1","MatrixViewMut1x2","MatrixViewMut1x3","MatrixViewMut1x4","MatrixViewMut1x5","MatrixViewMut1x6","MatrixViewMut1xX","MatrixViewMut2","MatrixViewMut2x1","MatrixViewMut2x3","MatrixViewMut2x4","MatrixViewMut2x5","MatrixViewMut2x6","MatrixViewMut2xX","MatrixViewMut3","MatrixViewMut3x1","MatrixViewMut3x2","MatrixViewMut3x4","MatrixViewMut3x5","MatrixViewMut3x6","MatrixViewMut3xX","MatrixViewMut4","MatrixViewMut4x1","MatrixViewMut4x2","MatrixViewMut4x3","MatrixViewMut4x5","MatrixViewMut4x6","MatrixViewMut4xX","MatrixViewMut5","MatrixViewMut5x1","MatrixViewMut5x2","MatrixViewMut5x3","MatrixViewMut5x4","MatrixViewMut5x6","MatrixViewMut5xX","MatrixViewMut6","MatrixViewMut6x1","MatrixViewMut6x2","MatrixViewMut6x3","MatrixViewMut6x4","MatrixViewMut6x5","MatrixViewMut6xX","MatrixViewMutXx1","MatrixViewMutXx2","MatrixViewMutXx3","MatrixViewMutXx4","MatrixViewMutXx5","MatrixViewMutXx6","MatrixViewXx1","MatrixViewXx2","MatrixViewXx3","MatrixViewXx4","MatrixViewXx5","MatrixViewXx6","MatrixXx1","MatrixXx2","MatrixXx3","MatrixXx4","MatrixXx5","MatrixXx6","Norm","Norm","Normed","OMatrix","OVector","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Owned","OwnedUninit","RStride","RStride","RawStorage","RawStorageMut","ReshapableStorage","RowDVector","RowOVector","RowSVector","RowVector","RowVector1","RowVector2","RowVector3","RowVector4","RowVector5","RowVector6","SMatrix","SMatrixSlice","SMatrixSliceMut","SMatrixView","SMatrixViewMut","SVector","SVectorSlice","SVectorSliceMut","SVectorView","SVectorViewMut","SameShapeStorage","Scalar","Size","SliceRange","SliceStorage","SliceStorageMut","SquareMatrix","Storage","StorageMut","ToConst","ToTypenum","Typenum","U0","U0","U1","U1","U10","U10","U100","U100","U101","U101","U102","U102","U103","U103","U104","U104","U105","U105","U106","U106","U107","U107","U108","U108","U109","U109","U11","U11","U110","U110","U111","U111","U112","U112","U113","U113","U114","U114","U115","U115","U116","U116","U117","U117","U118","U118","U119","U119","U12","U12","U120","U120","U121","U121","U122","U122","U123","U123","U124","U124","U125","U125","U126","U126","U127","U127","U13","U13","U14","U14","U15","U15","U16","U16","U17","U17","U18","U18","U19","U19","U2","U2","U20","U20","U21","U21","U22","U22","U23","U23","U24","U24","U25","U25","U26","U26","U27","U27","U28","U28","U29","U29","U3","U3","U30","U30","U31","U31","U32","U32","U33","U33","U34","U34","U35","U35","U36","U36","U37","U37","U38","U38","U39","U39","U4","U4","U40","U40","U41","U41","U42","U42","U43","U43","U44","U44","U45","U45","U46","U46","U47","U47","U48","U48","U49","U49","U5","U5","U50","U50","U51","U51","U52","U52","U53","U53","U54","U54","U55","U55","U56","U56","U57","U57","U58","U58","U59","U59","U6","U6","U60","U60","U61","U61","U62","U62","U63","U63","U64","U64","U65","U65","U66","U66","U67","U67","U68","U68","U69","U69","U7","U7","U70","U70","U71","U71","U72","U72","U73","U73","U74","U74","U75","U75","U76","U76","U77","U77","U78","U78","U79","U79","U8","U8","U80","U80","U81","U81","U82","U82","U83","U83","U84","U84","U85","U85","U86","U86","U87","U87","U88","U88","U89","U89","U9","U9","U90","U90","U91","U91","U92","U92","U93","U93","U94","U94","U95","U95","U96","U96","U97","U97","U98","U98","U99","U99","USIZE","UniformNorm","UninitMatrix","UninitVector","Unit","UnitVector1","UnitVector2","UnitVector3","UnitVector4","UnitVector5","UnitVector6","VecStorage","Vector","Vector1","Vector2","Vector3","Vector4","Vector5","Vector6","VectorN","VectorSlice","VectorSlice1","VectorSlice2","VectorSlice3","VectorSlice4","VectorSlice5","VectorSlice6","VectorSliceMut","VectorSliceMut1","VectorSliceMut2","VectorSliceMut3","VectorSliceMut4","VectorSliceMut5","VectorSliceMut6","VectorSum","VectorView","VectorView1","VectorView2","VectorView3","VectorView4","VectorView5","VectorView6","VectorViewMut","VectorViewMut1","VectorViewMut2","VectorViewMut3","VectorViewMut4","VectorViewMut5","VectorViewMut6","ViewStorage","ViewStorageMut","add","add","allocator","as_mut_slice_unchecked","as_slice_unchecked","begin","clone_owned","constraint","coordinates","data","default_allocator","dim","dimension","div","div","end","from_usize","get_address_unchecked","get_address_unchecked_linear","get_address_unchecked_linear_mut","get_address_unchecked_mut","get_unchecked","get_unchecked_linear","get_unchecked_linear_mut","get_unchecked_mut","indexing","into_owned","is","is_contiguous","iter","linear_index","max","max","metric_distance","min","min","mul","mul","name","norm","norm","norm_squared","ptr","ptr_mut","reshape_generic","scale_mut","shape","size","storage","strides","sub","sub","swap_unchecked","swap_unchecked_linear","try_to_usize","uninit","unscale_mut","value","Allocator","Buffer","BufferUninit","Reallocator","SameShapeAllocator","SameShapeC","SameShapeR","SameShapeVectorAllocator","allocate_from_iterator","allocate_from_row_iterator","allocate_uninit","assume_init","reallocate_copy","AreMultipliable","DimEq","Representative","Representative","Representative","Representative","SameDimension","SameNumberOfColumns","SameNumberOfRows","ShapeConstraint","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","raw_clone","raw_drop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","upcast","vzip","IJKW","M2x2","M2x3","M2x4","M2x5","M2x6","M3x2","M3x3","M3x4","M3x5","M3x6","M4x2","M4x3","M4x4","M4x5","M4x6","M5x2","M5x3","M5x4","M5x5","M5x6","M6x2","M6x3","M6x4","M6x5","M6x6","X","XY","XYZ","XYZW","XYZWA","XYZWAB","a","a","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","i","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","j","k","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m11","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m12","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m13","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m14","m15","m15","m15","m15","m15","m15","m15","m15","m15","m15","m16","m16","m16","m16","m16","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m21","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m22","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m23","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m24","m25","m25","m25","m25","m25","m25","m25","m25","m25","m25","m26","m26","m26","m26","m26","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m31","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m32","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m33","m34","m34","m34","m34","m34","m34","m34","m34","m34","m34","m34","m34","m35","m35","m35","m35","m35","m35","m35","m35","m36","m36","m36","m36","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m41","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m42","m43","m43","m43","m43","m43","m43","m43","m43","m43","m43","m43","m43","m44","m44","m44","m44","m44","m44","m44","m44","m44","m45","m45","m45","m45","m45","m45","m46","m46","m46","m51","m51","m51","m51","m51","m51","m51","m51","m51","m51","m52","m52","m52","m52","m52","m52","m52","m52","m52","m52","m53","m53","m53","m53","m53","m53","m53","m53","m54","m54","m54","m54","m54","m54","m55","m55","m55","m55","m56","m56","m61","m61","m61","m61","m61","m62","m62","m62","m62","m62","m63","m63","m63","m63","m64","m64","m64","m65","m65","m66","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","x","x","x","x","x","x","y","y","y","y","y","z","z","z","z","DefaultAllocator","Const","Const","Dim","DimAdd","DimDiff","DimDiv","DimMax","DimMaximum","DimMin","DimMinimum","DimMul","DimName","DimNameAdd","DimNameDiff","DimNameDiv","DimNameMax","DimNameMaximum","DimNameMin","DimNameMinimum","DimNameMul","DimNameProd","DimNameQuot","DimNameSub","DimNameSum","DimProd","DimQuot","DimSub","DimSum","Dyn","Dynamic","IsDynamic","IsNotStaticOne","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","Output","ToConst","ToTypenum","Typenum","U0","U0","U1","U1","U10","U10","U100","U100","U101","U101","U102","U102","U103","U103","U104","U104","U105","U105","U106","U106","U107","U107","U108","U108","U109","U109","U11","U11","U110","U110","U111","U111","U112","U112","U113","U113","U114","U114","U115","U115","U116","U116","U117","U117","U118","U118","U119","U119","U12","U12","U120","U120","U121","U121","U122","U122","U123","U123","U124","U124","U125","U125","U126","U126","U127","U127","U13","U13","U14","U14","U15","U15","U16","U16","U17","U17","U18","U18","U19","U19","U2","U2","U20","U20","U21","U21","U22","U22","U23","U23","U24","U24","U25","U25","U26","U26","U27","U27","U28","U28","U29","U29","U3","U3","U30","U30","U31","U31","U32","U32","U33","U33","U34","U34","U35","U35","U36","U36","U37","U37","U38","U38","U39","U39","U4","U4","U40","U40","U41","U41","U42","U42","U43","U43","U44","U44","U45","U45","U46","U46","U47","U47","U48","U48","U49","U49","U5","U5","U50","U50","U51","U51","U52","U52","U53","U53","U54","U54","U55","U55","U56","U56","U57","U57","U58","U58","U59","U59","U6","U6","U60","U60","U61","U61","U62","U62","U63","U63","U64","U64","U65","U65","U66","U66","U67","U67","U68","U68","U69","U69","U7","U7","U70","U70","U71","U71","U72","U72","U73","U73","U74","U74","U75","U75","U76","U76","U77","U77","U78","U78","U79","U79","U8","U8","U80","U80","U81","U81","U82","U82","U83","U83","U84","U84","U85","U85","U86","U86","U87","U87","U88","U88","U89","U89","U9","U9","U90","U90","U91","U91","U92","U92","U93","U93","U94","U94","U95","U95","U96","U96","U97","U97","U98","U98","U99","U99","USIZE","add","add","dim","div","div","from_usize","is","max","max","min","min","mul","mul","name","sub","sub","try_to_usize","value","MatrixIndex","MatrixIndexMut","Output","OutputMut","ColumnIter","ColumnIterMut","MatrixIter","MatrixIterMut","RowIter","RowIterMut","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","count","count","count","count","count","count","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","raw_clone","raw_clone","raw_drop","raw_drop","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","CStride","CStride","IsContiguous","Output","Owned","OwnedUninit","RStride","RStride","RawStorage","RawStorageMut","ReshapableStorage","SameShapeStorage","Storage","StorageMut","as_mut_slice_unchecked","as_slice_unchecked","clone_owned","get_address_unchecked","get_address_unchecked_linear","get_address_unchecked_linear_mut","get_address_unchecked_mut","get_unchecked","get_unchecked_linear","get_unchecked_linear_mut","get_unchecked_mut","into_owned","is_contiguous","linear_index","ptr","ptr_mut","reshape_generic","shape","strides","swap_unchecked","swap_unchecked_linear","Init","InitStatus","Uninit","Value","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","assume_init_mut","assume_init_mut","assume_init_mut","assume_init_ref","assume_init_ref","assume_init_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_subset","from_subset","init","init","init","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","AbstractRotation","Affine2","Affine3","DualQuaternion","Isometry","Isometry2","Isometry3","IsometryMatrix2","IsometryMatrix3","OPoint","Orthographic3","Perspective3","Point","Point1","Point2","Point3","Point4","Point5","Point6","Projective2","Projective3","Quaternion","Reflection","Reflection1","Reflection2","Reflection3","Reflection4","Reflection5","Reflection6","Representative","Rotation","Rotation2","Rotation3","Scale","Scale1","Scale2","Scale3","Scale4","Scale5","Scale6","Similarity","Similarity2","Similarity3","SimilarityMatrix2","SimilarityMatrix3","SubTCategoryOf","SuperTCategoryOf","TAffine","TCategory","TCategoryMul","TGeneral","TProjective","Transform","Transform2","Transform3","Translation","Translation1","Translation2","Translation3","Translation4","Translation5","Translation6","UnitComplex","UnitDualQuaternion","UnitQuaternion","check_homogeneous_invariants","coords","coords","dual","has_normalizer","identity","inverse","inverse_mut","inverse_transform_point","inverse_transform_unit_vector","inverse_transform_vector","isometry","real","rotation","transform_point","transform_vector","translation","vector","vector","Bidiagonal","Cholesky","ColPivQR","FullPivLU","Hessenberg","LU","PermutationSequence","QR","SVD","Schur","SymmetricEigen","SymmetricTridiagonal","UDU","balancing","d","eigenvalues","eigenvectors","givens","householder","singular_values","try_invert_to","u","u","v_t","wilkinson_shift","balance_parlett_reinsch","unbalance","GivensRotation","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","c","cancel_x","cancel_y","clone","clone_into","clone_type_data","deref","deref_mut","downcast","drop","fmt","from","from_subset","identity","init","into","into_any","into_any_arc","into_any_rc","inverse","is_in_subset","new","new_unchecked","raw_clone","raw_drop","rotate","rotate_rows","s","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_new","type_id","upcast","vzip","AiPlayer","Alarm","Emote","EmoteRegion","FACE_Z_OFFSET","FIN_Z_OFFSET","ID","PathfindingDebugLines","PlayerCommand","PlayerIdx","PlayerKilled","PlayerLayers","PlayerState","PlayerStateStage","PlayerStateStageImpl","active","add_player_state_transition_system","add_player_state_update_system","add_system","age","animation_key","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","current","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","despawn","direction_sensitive","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","emote","entities","eq","equivalent","face_anim","face_ent","fin_anim","fin_ent","fin_offset","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","hit_from","id","id","init","init","init","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kill","last","name","name","new","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","run","set_inventory","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","use_item","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AtomicRng","ForkableCore","GenCore","GlobalRng","Rng","SecureCore","Seed","SeededCore","TurboCore","TurboRand","alphabetic","alphabetic","alphanumeric","alphanumeric","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","bool","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chance","chance","char","char","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","digit","digit","downcast","downcast","downcast","drop","drop","drop","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","f32","f32","f32_normalized","f32_normalized","f64","f64","f64_normalized","f64_normalized","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fork","fork","fork","from","from","from","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","from_world","from_world","gen","gen","gen","gen_i128","gen_i16","gen_i32","gen_i64","gen_i8","gen_isize","gen_u128","gen_u16","gen_u32","gen_u64","gen_u8","gen_usize","i128","i128","i16","i16","i32","i32","i64","i64","i8","i8","init","init","init","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","isize","isize","lowercase","lowercase","new","new","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","reseed","reseed","reseed","reseed_local","sample","sample","sample_iter","sample_iter","sample_multiple","sample_multiple","sample_multiple_iter","sample_multiple_iter","sample_multiple_mut","sample_multiple_mut","sample_mut","sample_mut","shuffle","shuffle","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","ulid","upcast","upcast","upcast","uppercase","uppercase","usize","usize","vzip","vzip","vzip","weighted_sample","weighted_sample","weighted_sample_mut","weighted_sample_mut","with_seed","with_seed","with_seed","CoreSession","CoreSessionInfo","GameSessionPlayerInfo","advance","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","export_map","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","handle","info","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_ai","is_in_subset","is_in_subset","is_in_subset","map_meta","meta","new","player_info","raw_clone","raw_clone","raw_drop","raw_drop","restart","restore","scratch_world","set_metadata","snapshot","stages","time_step","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","update_input","vzip","vzip","vzip","world","Cubic","Ease","EaseFunction","Quadratic","Rect","Sinusoidial","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_left","bottom_right","center","clone","clone_into","clone_type_data","contains","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","ease_in","ease_out","fmt","from","from","from","from_subset","from_subset","from_subset","from_world","from_world","from_world","from_world","function","height","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","left","max","max","min","min","new","output","overlaps","progress","raw_clone","raw_drop","right","sine_between","size","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","top","top_left","top_right","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","width"],"q":["jumpy_core","","","","","","","","","","","","","","","","","","","","","","jumpy_core::attachment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::bevy_prelude","","","","","","jumpy_core::bevy_prelude::bonesjumpy_core::bevy_prelude::bones::AudioEvent","","jumpy_core::bevy_prelude::bones::Color","","","","jumpy_core::bevy_prelude::bones::bool","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::f32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::f64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::i32","","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::swizzlesjumpy_core::bevy_prelude::bones::time","","","","","","jumpy_core::bevy_prelude::bones::u32","","","","","","","","","","","","","","","jumpy_core::bullet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::damage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::editor","jumpy_core::elements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::crab","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::crab::CrabState","","jumpy_core::elements::crate_item","jumpy_core::elements::decoration","jumpy_core::elements::fish_school","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::fish_school::FishState","","jumpy_core::elements::grenade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::kick_bomb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::mine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::musket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::player_spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::slippery","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::slippery_seaweed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::snail","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::snail::Snail","","","jumpy_core::elements::sproinger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::stomp_boots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::sword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::sword::SwordState","","jumpy_core::elements::urchin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::globals","jumpy_core::inputjumpy_core::input::EditorInput","","","","","","","","","","","","","","","","","","","jumpy_core::itemjumpy_core::lifetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::mapjumpy_core::metadatajumpy_core::metadata::BuiltinElementKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::ColliderShape","","jumpy_core::physics::collisionsjumpy_core::physics::collisions::ColliderShape","","jumpy_core::physics::collisions::rapierjumpy_core::physics::collisions::rapier::QueryPipelineMode","jumpy_core::physics::collisions::rapier::TopologyError","","","jumpy_core::physics::collisions::rapier::nalgebra","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::basejumpy_core::physics::collisions::rapier::nalgebra::base::allocator","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::base::constraint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::base::coordinatesjumpy_core::physics::collisions::rapier::nalgebra::base::default_allocator","jumpy_core::physics::collisions::rapier::nalgebra::base::dimensionjumpy_core::physics::collisions::rapier::nalgebra::base::indexing","","","","jumpy_core::physics::collisions::rapier::nalgebra::base::iterjumpy_core::physics::collisions::rapier::nalgebra::base::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::base::uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::linalg","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions::rapier::nalgebra::linalg::balancing","","jumpy_core::physics::collisions::rapier::nalgebra::linalg::givens","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::playerjumpy_core::randomjumpy_core::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The target fixed frames-per-second that the game …","","Utilities for attaching entities to other entities.","Prelude for use outside the crate","","","Systems and components related to damage/kill zones","","","","","","Install game modules into the session.","","Module providing entity lifetime components and systems","","Core game metadata","","","","","","Component for attaching an entity to another entity.","","A component for attaching an entity to the player’s body.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The entity to attach to.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The offset to the attached entity.","The offset relative to the center of the player’s sprite.","The player to attach to","","","","","","","Synchronize <code>AtlasSprite</code> animation with entity animation","Whether or not to automatically play the same animation …","Synchronize <code>Sprite</code> color with entity color","Whether or not to automatically sync the color of the …","","","","","","","","","","","","","","","","","","","","","","","","","System to update the transforms of entities with the …","","","","","","","","","Bones lib prelude","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","The requested resource is already borrowed.","Component that may be added to entities with an <code>AtlasSprite</code>…","Component that may be added to an <code>AtlasSprite</code> to control …","A path to an asset.","Trait for asset providers.","A mutable borrow of an <code>AssetProvider</code>.","A borrow of an <code>AssetProvider</code>.","A resource that may be used to access <code>AssetProvider</code>s for …","The type of the <code>AssetProviders</code> resource.","An atlas image asset type, contains no data, but …","An animated sprite component.","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","A handle to a resource from a <code>Resources</code> collection.","An audio event that may be sent to the <code>AudioEvents</code> …","Resource containing the audio event queue.","The audio source asset type, contains no data, but …","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","Resource that contains a bevy world.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","","Makes an entity behave like a camera.","Component for an entity with camera shake.","Queue that can be used to send camera trauma events.","Resource for controlling the clear color.","Color type.","A resource containing the <code>Commands</code> command queue.","A <code>SystemParam</code> that can be used to schedule systems that …","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","A <code>StageLabel</code> for the 5 core stages.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","Holds a list of alive entities.","Iterator over entities returned by <code>Entities::iter_with</code>.","An entity index.","Iterator over entities using the provided bitset.","Euler rotation sequences.","All false.","All false.","All false.","All false.","All false.","The first stage","This is a resource that stores the game’s fixed frame …","Creates an instance of the type this trait is implemented …","","","A typed handle to an asset.","Error for hex crate errors","Error type for hex color decoding","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Image asset type, contains no data, but <code>Handle&lt;Image&gt;</code> is …","Helper trait for converting bones types to Bevy types.","Converts a function into a <code>System</code>.","The type of iterator this query item creates","A small ascii byte array stored on the stack and used …","An error that may be caused when creating a <code>Key</code>.","The fifth stage","Error for unexpected length of hex string","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","","The key is not ASCII.","A resource was not initialized in the <code>World</code> but the <code>System</code> …","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","","Run once and stop.","The type of the parameter, ranging over the lifetime of …","A component for rendering a 2D line path, made up of a …","Play a sound.","The fourth stage","The second stage","A quaternion representing an orientation.","A type representing a component-joining entity query.","The number of bits in a Ulid’s random portion","","Helper trait that is auto-implemented for all <code>Clone</code>-able …","Reset when finished.","<code>SystemParam</code> for getting read access to a resource.","Type alias for getting the <code>AssetProviders</code> resource.","<code>SystemParam</code> for getting mutable access to a resource.","A collection of resources.","sRGBA color","Resource providing a noise source for <code>CameraShake</code> entities …","A collection of systems that will be run in order.","A 2D sprite component","Trait for things that may be used to identify a system …","The intermediate state for the parameter, that may be …","A Stopwatch is a struct that track elapsed time when …","Struct used to run a system function using the world.","This variant is for user-defined errors.","Trait used to implement parameters for <code>System</code> functions.","The result of a <code>System</code>’s execution.","Trait for system stages. A stage is a","An ordered collection of <code>SystemStage</code>s.","The number of bits in a Ulid’s time portion","All true.","All true.","All true.","All true.","All true.","A tilemap tile component.","A tilemap layer component.","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","The key is too long.","The main transform component.","Associates a <code>Ulid</code> ID to a Rust type.","Derive macro for the <code>TypeUlid</code> trait.","This happens when two Rust types have the same <code>TypeUlid</code>, …","Implements typed operations on top of a …","Helper trait that is auto-implemented for anything that …","The type’s <code>Ulid</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A Ulid is a unique 128-bit lexicographically sortable …","Faster hash map using <code>FxHashMap</code> and a ULID key.","Trait implemented for asset providers that can return …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","An untyped handle to an asset.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","Helper trait for unwraping each item in an array.","The third stage","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector with SIMD support.","","A 4-dimensional vector with SIMD support.","","","","A custom viewport specification for a <code>Camera</code>.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","","Information about the window the game is running in.","The <code>World</code> is simply a collection of <code>Resources</code>, and …","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Get alpha.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Whether or not the camera is enabled and rendering.","Add an asset provider for a specific asset type.","","Add a system to be run at the end of the stage.","","","","","","","","","Adds two quaternions.","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Adds two 4x4 matrices.","Add a system to this stage.","","Add a <code>System</code> to the stage with the given label.","Adds trauma to the camera, capping it at 1.0","Advance the time exactly by the given duration.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","The collection of animations in this animation bank.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modify the iteration bitset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a raw pointer to the underlying data in this cell.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","The atlas handle.","The texture atlas to use for the layer","Get blue in sRGB colorspace.","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","","","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","Shorthand for combining bitsets with bit_or.","","","","","","Read the bitset containing the list of entites with this …","Read the bitset containing the list of entites with this …","Get the bitset representing which entities have this …","Returns the bitset indicating which entity indices have a …","Returns a bitset where each index where the bit is set to …","Shorthand for setting bits on the bitset container.","","","","","","","","","","","","","","","","","","","","","","","<code>bool</code> vector mask types. ","This is used create an instance of the system parame, …","Immutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for reading.","","","","","","","","","","","","","","","","","","","Borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for read-writing.","","","","","","","","","","","","","","","","","Mutably borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Cell containing the raw pointer to the resource’s data","The camera will always restore to this position.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Clears the killed entity list.","","","","","","Copies an <code>AtomicRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function that may be called to clone the resource from …eturns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","The color of the path.","The sprite’s color tint","The sprite’s color tint","Stores the world components.","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not the bitset contains the given entity.","Check whether or not a resource is in the store.","Creates a new <code>Entity</code> and returns it.","Creates a bitset big enough to contain the index of each …","","","","","","","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","The current animation.","Gets the datetime of when this Ulid was created accurate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The the length of time in seconds for the camera trauma to …","Free-standing, shorter equivalent to <code>Default::default()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much time has advanced since the last <code>update</code>, …","Returns how much time has advanced since the last <code>update</code>, …","Returns how much time has advanced since the last <code>update</code>, …","The maximum depth to render (on a scale from 0.0 to 1.0).","The minimum depth to render (on a scale from 0.0 toeturns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An optional function that will be called to drop the …","Returns the duration of the timer.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer. Guaranteed to be …","Returns how much time has advanced since <code>startup</code>, as …","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","Returns the elapsed time since the last <code>reset</code> of the …","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns the elapsed time since the last <code>reset</code> of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new <code>AtomicRef</code> for an optional component of the …","Make a new <code>AtomicRefMut</code> for an optional component of the …","Returns <code>true</code> if the timer has reached its duration at …","Whether or not the flip the sprite horizontally.","Whether or not the flip the sprite horizontally.","Whether or not to flip the tile horizontally.","Whether or not the flip the sprite vertically.","Whether or not the flip the sprite vertically.","Whether or not to flip tile vertically.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an <code>UntypedComponentStore</code> that is valid for the …","The frames per second to play the animation at.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","The frames in the animation.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Safety","Creates a new Ulid with the given datetime","Creates a new Ulid with the given datetime and random …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Create a Ulid from separated parts.","","","","","","","","","","","","","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a transform from a rotation.","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Create a transform from a scale.","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a new timer with a given duration in seconds.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","Creates a Ulid from a Crockford Base32 encoded string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a transform from a translation.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion from a 4D vector.","Creates <code>Self</code> using data from the given <code>World</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","Creates a new rotation quaternion.","Get green in sRGB colorspace.","Returns the generation of this <code>Entity</code>.","Returns a read-only pointer to the asset for the given …","Get a reference to an asset, if it exists in the store.","","Get an asset, given it’s handle","Get an asset, given it’s handle","Borrow a component in the store, if it exists for the …","Gets an immutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Get a read-only pointer to the component for the given …","Get’s the tile at the given position in the layer, …","Get the components of a certain type","Get a cell containing the resource data pointer for the …","Get a resource handle from the store.","Get the equivalent [<code>bevy_asset::AssetPath</code>] from this Bones …","Get a Bevy weak <code>Handle</code> from from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get the untyped component storage by the component’s UUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get mutable pointers to the component data for multiple …","Get mutable pointers to the component data for multiple …","Get mutable pointers to the component data for multiple …","Returns a mutable-only pointer to the asset for the given …","Get a mutable reference to an asset, if it exists in the …","Returns a mutable reference to the wrapped value.","","Get an asset, given it’s handle","Mutably borrow a component in the store, if it exists for …","Gets a mutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets a mutable reference to the component of <code>Entity</code>.","Get a mutable pointer to the component for the given <code>Entity</code>","Gets a resource handle from the store if it exists.","This is called to produce the intermediate state of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the layer in tiles.","","","","","","","","","","","","","","","","","","","","The height of the camera in in-game pixels.","New <code>Color</code> from sRGB colorspace.","<code>i32</code> vector types. ","The unique identifier for the stage.","Returns a unique identifier for the stage.","","","The unique identifier for the stage.","The tile index in the tilemap texture.","The sprite image handle.","Implements the <code>BitSet</code> trait members for your type through …","Increment the random number, make sure that the ts millis …","Returns the index of this <code>Entity</code>.","","","","","","","","","","","","","","The current frame in the animation.","This is the current index in the animation, with an <code>idx</code> of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize component storage for type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a resource of type <code>T</code> by inserting it’s …","Initialize the contained systems for the given <code>world</code>.","This will be called to give the parameter a chance to …","","","","Initializes the resources required to run this system …","","","","This should be called once to initialize the system, …","Initialize the systems in the stages agains the <code>World</code>.","Insert a component into the store.","Inserts a component for the given <code>Entity</code> index. Returns …","Inserts a component for the given <code>Entity</code> index.","Returns true if the entity already had a component of this …","Insert a new resource","Insert a resource.","Insert a resource.","Insert a new stage, after another existing stage","Insert a new stage, before another existing stage","Install the camera utilities on the given <code>SystemStages</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert the type to a Bevy type.","","","","Consumes the <code>AtomicRefCell</code>, returning the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to the internal, untyped <code>ComponentStore</code>.","Consume <code>Resources</code> and extract the underlying …","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Checks if the <code>Entity</code> is still alive.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Test if the Ulid is nil","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns <code>true</code> if the clock is currently paused.","","","","","","","","","","","","","","","","","","","","","Iterate over all components in the store.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","Iterates immutably over all components of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably iterate over all components in the store.","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Iterates mutably over all components of this type.","Mutably iterate over all the components in the store that …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterate over the entities and components in the given …","Return an iterator over the provided bitset.","Iterate over all the components in the store that match …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","","","","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","Iterates over entities using the provided bitset.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Returns <code>true</code> only on the tick the timer reached its …","Create a new const <code>Key</code> parsed at compile time.","Kill an entity.","Returns entities in the killed list.","The optional sub-asset label","The last animation that was playing.","Get the layout of the components stored.","The memory layout of the resource","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","List of indexes into the <code>points</code> vector, for which that …","","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Remove the component info for dead entities.","Make a new <code>AtomicRef</code> for a component of the borrowed data.","Make a new <code>AtomicRefMut</code> for a component of the borrowed …","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum offset angle in radians that the camera shake …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","The maximum offset position that the camera shake can …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the mode of the timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion by a scalar value.","Multiplies a quaternion and a 3D vector, returning the …","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","Transforms a 4D vector.","The human-readable name for the stage, used for error …","Returns the human-readable name of the label, used in …","","Returns the underlying type name of the system.","","The human-readable name for the stage, used for error …","A best-effort name for the system, for diagnostic purposes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AtomicRefCell</code> containing <code>value</code>.","Create a new unpaused <code>Stopwatch</code> with no elapsed time.","Creates a new timer with a given duration.","Safety","Constructs a new <code>Time</code> instance with a specific startup …","Creates a new Ulid with the current time (UTC)","Create a new asset path.","Create a new asset handle, from it’s path and label.","Create a new handle from it’s path and label.","Create a arbitrary <code>UntypedComponentStore</code>.","Create a new <code>CameraShake</code> component with the provided …","Creates a new <code>UntypedResource</code> from an instance of a Rust …","Create a <code>Key</code> from a string.","Create a new, empty stage, for the given label.","Create a new <code>AtlasSprite</code> from the given atlas handle.","Create a new tile layer","Creates a new <code>Entity</code> from the provided index and …","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new <code>World</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Create a new <code>UntypedResource</code> from raw <code>UntypedResourceInfo</code>.","","","","","","","The ‘nil Ulid’.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Take this path, treat it as a path relative to <code>base_path</code>, …","","","","","","","","","","","","Creates a left-handed orthographic projection matrix with …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The virtual filesystem path","The <code>AssetPath</code> for the asset.","The unique identifier of the asset this handle represents.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pauses the stopwatch. Any call to <code>tick</code> while paused will …","Pauses the Timer. Disables the ticking of the timer.","Stops the clock, preventing it from advancing until …","Returns <code>true</code> if the stopwatch is paused.","Returns <code>true</code> if the timer is paused.","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Creates a right-handed perspective projection matrix with […","Play a sound.","The list of points in the path","The physical position to render this viewport to within …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Transforms the given 3D vector as a point, applying …","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","List of audio events that haven’t been handled by the …","The event queue.","The system queue that will be run at the end of the stage","Get red in sRGB colorspace.","Gets the random section of this ulid","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop the value at <code>ptr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the remaining time using Duration","Returns the remaining time in seconds","Remove a component from an entity, returning the previous …","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Remove an asset provider.","Removes the component of <code>Entity</code>.","If there is a previous value, <code>true</code> will be returned.","Remove a resource","Whether or not to repeat the animation","Resets the stopwatch. The reset doesn’t affect the …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","Get a resource handle from the store.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","The rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Execute the systems on the given <code>world</code>.","Execute the systems on the given <code>world</code>.","","Runs the system’s function using the provided <code>World</code>","This is run every time the system is executed","Run a system once, assuming any necessary initialization …","Run a system once.","The scale of the entity.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Add an event to the audio event queue.","Send a camera trauma event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the tile at the given position, to a certain entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set alpha.","Set blue in sRGB colorspace.","Sets the duration of the timer.","Sets the elapsed time of the stopwatch.","Sets the elapsed time of the timer without any other …","Set green in sRGB colorspace.","Sets the mode of the timer.","Set red in sRGB colorspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","The logical size of the window’s client area.","The physical size of the viewport rectangle to render to …","Performs a spherical linear interpolation between <code>self</code> and …","Performs a spherical linear interpolation between <code>self</code> and …","","The speed that the screen is shook.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","The stages in the collection, in the order that they will …","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","Convert into a <code>System</code>.","","The list of systems in the stage.","The thickness of the line.","Advance the stopwatch by <code>delta</code> seconds. If the stopwatch …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","The size of each tile in the layer.","The vector of tile slots in this layer.","Time functionality for the Bones framework.","The amount of time the current frame has been playing","Returns the number of times a repeating timer finished …","Gets the timestamp section of this ulid","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Returns the rotation axis scaled by the rotation in …","Creates a Crockford Base32 encoded string that represents …","","","","","Creates a Crockford Base32 encoded string that represents …ransforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given <code>Vec3A</code> as 3D point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Transforms the give <code>Vec3A</code> as 3D vector.","The position of the entity in the world.","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Value from 0-1 that indicates the intensity of the shake. …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Attempts to immutably borrow the wrapped value, but …","Attempts to mutably borrow the wrapped value, but instead …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the asset provider for the given asset type, if it …","Get the components of a certain type","Gets a resource handle from the store if it exists.","Get the untyped component storage by the component’s UUID","Get the asset provider for the given asset type, if it …","Initialize component storage for type <code>T</code>.","Try to insert a resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Remove an asset providerreate a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.","<code>u32</code> vector types. ","","","","","","","","","","","","","","","","","","","","","","","","","","Unpauses the stopwatch. Resume the effect of ticking on …","Unpauses the Timer. Resumes the ticking of the timer.","Resumes the clock if paused.","Convert the handle to an <code>UntypedHandle</code>.","Borrow the underlying <code>UntypedResources</code> store.","Mutably borrow the underlying <code>UntypedResources</code> store.","Unwrap all the items in an array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the internal time measurements.","Updates time with a specified <code>Instant</code>.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","An optional viewport override, allowing you to specify …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>SystemStages</code> collection, initialized with a stage …","Creates a new Ulid using data from the given random number …","Create a new <code>CameraShake</code> component with the provided …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternion.","","","Returns the vector part of the quaternionhe handle to the sound to play.","The volume to play the sound at.","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector with SIMD support.","A 4-dimensional vector with SIMD support.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vectorun once and stop.","Reset when finished.","A Stopwatch is a struct that track elapsed time when …","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","Component containing the bullet’s metadata handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disables the default camera controller. Useful, for …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A rectangular damage region.","A component that may be added to a damage region entity to …","","","","","","","","","","","","","","","","","Get the collision rectangle of this damage region, given it…","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The size of the damage region in pixels","","","","","","","","","","","","","","","","","","","Resource configuring various debugging settings.","Resource containing the physics debug line entity.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Whether or not to render damage region collider shapes.","Whether or not to render kinematic collider shapes.","Whether or not to show the pathfinding lines.","","","","","","","","","","","","","","","","","","","","Component that contains the <code>Entity</code> to de-hydrate when the …","Component containing an element’s metadata handle.","Marker component added to map elements that have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Moving to a location","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","The amount of time left until the grenade explodes.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Resource that stores the next spawner to use when spawning …","Marker component for player spawners.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Marker component added to things ( presumably players, but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Create a new layer","","","The editor inputs that a player may make.","","Move a layer up or down.","Player control input state","Player input, not just controls, but also other status …","The inputs for each player in this simulation frame.","Rename a map layer.","","","Update the tilemap of a layer.","Spawn an element onto the map.","The player is currently “connected” and actively …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The player control input","","","","","","","","","","","","","","","","","","","","","The editor inputs the player is making, if any.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Whether or not this is an AI player.","","","","","","","","","","","The player control input from the last fixed update","","","","","","","","","This may be a null handle if a player hasn’t been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tile collision kind","Whether or not to move the layer down. If false, move the …","The entity to move.","The entity to delete.","The handle to the element that is being spawned.","The handle to the tilemap to use or <code>None</code> to clear the …","The name of the layer.","The map layer index to spawn the element on.","The index of the layer to rename.","","The layer to move","The layer index of the layer to update.","The layer index of the layer to update","The new name of the layer.","","The amount to move the entity.","The position of the tile to set","The index in the tilemap to set the tile, or <code>None</code> to …","The translation to spawn the element with.","A helper struct containing a player-inventory pair that …","An intventory component, indicating another entity that …","Marker component for items.","Marker component added to items when they are dropped.","Component defining the grab settings when an item is …","Marker component added to items when they are grabbed.","Component defining the strength of the throw types when an …","Marker component added to items when they are used.","System param that can be used to conveniently get the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The relative velocities of each different throw type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The player that dropped the item","The player that grabbed the item","","","","","","","","","","","","","","","","","<code>Self::base</code> with the throw values multiplied by <code>strength</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chooses one of the throw values based on a <code>PlayerControl</code>","","","","","","","","","","","","A timer that can be used to make an entity invincible for …","The lifetime state of an entity","How long the entity has lived in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","How long the entity should be allowed to live in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","Resource containing the map metadata for this game session.","The Z depth in between each map layer.","The Z depth of the deepest map layer.","Resource indicating whether the map has been spawned.","The map navigation graph resource.","Represents the way to get from one tile to another tile in …","The inner graph type of <code>NavGraph</code>.","The type of nodes in the map navigation graph.","Component containing the map layer that an entity is …","Resource containing essential the map metadata for the map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the Pythagorean distance between two nodes.","The distance to the connected tile. This is used as the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The sequence of inputs for each frame, required to get to …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The layer index of the layer that the element belongs to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper for getting the z-depth of the map layer with the …","An animated decoration such as seaweed or anemones","","","The kind of built-in","","","","","","Resource containing the session’s <code>CoreMeta</code>.","A crab roaming on the ocean floor","The throwable crate item","","","","","Grenades item","","","","","","The mine item","","This is not a built-in item","","","","","","","","Player spawner","","","","","This is a sproinger","","This is a sword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The parallax background layers","The background color of the map, behind the parallax layerseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The offset of the bounding rect for the element in the …","The size of the bounding rect for the element in the editor","","","","Size of the map in tiles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the given position is out of the bounds of the …","","","","","","The layers of the map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Show the element name above the bounding rect in the …","","","","","","","","","","","The size of the tiles in pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delay after throwing the mine, before it becomes armed …","","","","","","The grenade atlas","","","","","","","","The grenade atlas","","","","The default and most-likely to ocurr number of fish in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ammount greater or less than the base number of fish …","","","The animation frames for when the snail is crawling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time in seconds before a grenade explodes","The time in seconds before a grenade explodes","","","","","","","","","","The animation frames for when the snail is fleeing into …","","","","","","","","","","The <code>crawl_frames</code> indexes in which to move the snail","","","","","The distance that the fish wish to stay within the center …","","","","","","","","","","","","The distance from the spawn point on each axis that the …","","","","","","","","","","","","How long a crab has to be away from it’s spawn point …","","","","","","The Jumpy collision shape type.","","A kinematic physics body","","","","","Angular velocity in degrees per second","","","","","","","Get the body’s axis-aligned-bounding-box ( AABB ).","","","","","Collision detection implementation.","","","","","","Whether or not the body should fall through jump_through …","","Sets a 1 frame override for the body friction. It will be …","Returns the argument unchanged.","","","","","","If this is <code>true</code> the body will be affected by gravity","","","Calls <code>U::from(self)</code>.","","","","","","","Will be <code>true</code> if the body is currently on top of a …","Indicates that we should reset the collider like it was …","","","","","","","","","","","","","","","","","An actor in the physics simulation.","","A collider body in the physics simulation.","The Jumpy collision shape type.","Resource that maps <code>ColliderShape</code>s to a rapier <code>SharedShape</code>.","A cache containing a map of entities, to the list of …","","","Pass-through hasher for entities to reduce hashing cost …","","Resource containing the data structures needed for rapier …","Namespace struct for converting rapier collider user data …","","A solid in the physics simulation.","","The kind of collision that a map tile has.","Component added to tiles that have been given …","Returns the collisions that one actor has with any other …","Returns the collisions that one actor has with any other …","Actors are things like players that move around and detect …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A collider is anything that can detect collisions in the …","","","The collisions in the cache.","","The rapier context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Put the entity’s collider into descent mode so that it …","Whether or not the collider wants to drop through …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an <code>Entity</code> from the given Rapier user data ( assuming …","","","","","","","","","","","","","Create rapier user data value from the entity <code>e</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the set of entities that the given <code>entity</code> is …","Get the collider for the given entity.","","","","","When spawning or teleporting an entity, this should be …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to move a body horizontally. This will return <code>true</code> …","Attempt to move a body vertically. This will return <code>true</code> …","","","","Prelude containing the common types defined by Rapier.","The handle to the Rapier rigid body associated to this …","","","","","","","","","","","","","","","","","","","","Whether or not the collider is in the process of going …","","","","","Returns whether or not there is a tile or solid at the …","Solids are things like walls and platforms, that aren’t …","","Get the <code>TileCollisionKind</code> of the first tile detected …","","","Returns the tile collision at the given point.","","Contains the rapier collider handles for each map tile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the collision world with the entity’s actual …","Update the collision for the tile with the given layer …","Update all of the map tile collisions.","Update the collisions for map tiles that pass the given …","","","","","","","","","","","","","","","","All of the groups.","The set of all angular degrees of freedom.","The maximum number of rotational degrees of freedom of a …","The angular degree of freedom of a joint.","An axis-aligned bounding box.","The solved spring-like equation is: …","Flags affecting whether or not collision-detection happens …","Flags affecting the events generated for this collider.","Flags affecting the behavior of the constraints solver for …","A potential new collision pair has been detected by the …","The dimension of the rotations.","The angular vector type.","The rotational degree of freedom along the joint’s local …","The angular inertia of a rigid body.","Storage needed to store triangle indices.","Storage needed to store points.","Storage needed to store topology faces.","Storage needed to store topology half-edges.","Storage needed to store topology vertices.","Storage needed to store u32","Storage needed to store usize.","Storage needed to store vectors.","Storage needed to store triples of vectors.","The two coefficients are averaged.","At least two adjacent triangles have opposite orientations.","Found a triangle with two or three identical vertices.","A ball shape.","A ball shape.","A ball shape.","A pair of rigid body handles.","The type of a body, governing the way it is affected by …","A broad-phase combining a Hierarchical Grid and …","An event emitted by the broad-phase.","Solver responsible for performing motion-clamping on …","Flag indicating that the <code>RigidBodyColliders</code> component of …","If this flag is set, the Aabbs of colliders will be …","If this flag is set, the collider shapes will be rendered.","If set, Rapier will call …","The constraint solver will take this contact manifold into …","If set, the half-edge topology and connected components of …","If this flag is set, the geometric contacts will be …","If set, Rapier will call …","A capsule shape.","A capsule shape.","A capsule shape.","A collision event handler that collects events into a …","Orientation with a clockwise orientaiton, i.e., with a …","Rules used to combine two coefficients.","A geometric entity that can be attached to a body so it …","A collider is being rendered.","Data associated to a collider that takes part to a …","A structure responsible for building a new collider.","Flags describing how the collider has been modified by the …","Enum indicating whether or not a collider is enabled.","A set of flags for controlling collision/intersection …","Index of a node of the interaction graph.","The unique identifier of a collider added to a collider …","The mass-properties of a collider.","The constraints solver-related properties of this collider …","A pair of collider handles.","Information about the rigid-body this collider is attached …","The position of a collider.","A set of colliders that can be handled by a physics <code>World</code>.","The shape of a collider.","The type of collider.","Events occurring when two colliders start or stop colliding","Flags providing more information regarding a collision …","The collision pipeline, responsible for performing …","A compound shape with an aabb bounding volume.","A Compound shape.","A Compound shape.","A contact between two colliders.","A single contact between two collider.","Event occurring when the sum of the magnitudes of the …","A contact manifold between two colliders.","A contact manifold between two colliders.","Context given to custom contact modifiers to modify the …","The description of all the contacts between a pair of …","A 2D convex polygon.","","","Orientation with a clockwise orientaiton, i.e., with a …","A matrix that represent the cross product with a given …","A cuboid shape.","A cuboid shape.","A cuboid shape.","The <code>Collider::position</code> is taken into account.","A custom user-defined shape.","A custom user-defined shape with a type identified by a …","The default tolerance used for geometric operations.","If set, any triangle that results in a failing half-hedge …","If set, the triangles sharing two vertices with identical …","If set, two triangles sharing three vertices with …","The dimension of the space.","A dynamically sized column-major matrix.","Flag indicating that the <code>RigidBodyDominance</code> component of …","A dynamically sized column vector.","Enable collision-detection between a collider attached to …","Enable collision-detection between a collider attached to …","Enable collision-detection between a collider attached to …","A color for debug-rendering.","Trait implemented by graphics backends responsible for …","Flags indicating what part of the physics engine should be …","The object currently being rendered by the debug-renderer.","Pipeline responsible for rendering the state of the …","Style used for computing colors when rendering the scene.","Degenerate triangle.","The two colliders are guaranteed not to touch any more.","The collider is given a density.","The dimension of the ambient space.","The joint is disabled by the user explicitly.","The collider is disabled by the user explicitly.","The joint wasn’t disabled by the user explicitly but it …","The collider wasn’t disabled by the user explicitly but …","A <code>RigidBodyType::Dynamic</code> body can be affected by all …","Flag indicating that the rigid-body was enabled or …","Flag indicating that whether or not the collider is …","Exclude from the query any collider attached to a …","Exclude from the query any collider attached to a fixed …","Exclude from the query any collider attached to a dynamic …","Exclude from the query any collider that is a sensor.","Exclude from the query any collider that is not a sensor.","The joint is enabled.","The collider is enabled.","Trait implemented by structures responsible for handling …","If set, Rapier will call <code>PhysicsHooks::filter_contact_pair</code> …","If set, Rapier will call …","Enable collision-detection between a collider attached to …","The set of degrees of freedom left free by a fixed joint.","The set of degrees of freedom left free by a prismatic …","The set of degrees of freedom left free by a revolute …","Shape-dependent identifier of a face.","An identifier of a feature of a convex polyhedron.","A <code>RigidBodyType::Fixed</code> body cannot be affected by external …","A fixed joint, locks all relative motion between two …","Create fixed joints using the builder pattern.","The solved spring-like equation is: …","Flag indicating that the collision groups of the collider …","The group n°1.","The group n°10.","The group n°11.","The group n°12.","The group n°13.","The group n°14.","The group n°15.","The group n°16.","The group n°17.","The group n°18.","The group n°19.","The group n°2.","The group n°20.","The group n°21.","The group n°22.","The group n°23.","The group n°24.","The group n°25.","The group n°26.","The group n°27.","The group n°28.","The group n°29.","The group n°3.","The group n°30.","The group n°31.","The group n°32.","The group n°4.","The group n°5.","The group n°6.","The group n°7.","The group n°8.","The group n°9.","A 2D heightfield with a generic storage buffer for its …","A generic joint.","Create generic joints using the builder pattern.","A triangle mesh.","A bit mask identifying groups for interaction.","If set, the half-edge topology of the trimesh will be …","A half-space delimited by an infinite plane.","A shape representing a full half-space.","A shape representing a full half-space.","A heightfield shape.","A heightfield shape.","A heightfield shape.","Indicates if a cell of an heightfield is removed or not. …","Trait describing all the types needed for storing an …","Type of the array containing the heightfield’s heights.","If this flag is set, the impulse joints will be rendered.","An impulse-based joint attached to two bodies.","An impulse-joint is being rendered.","The unique identifier of a joint added to the joint set. …","A set of impulse_joints that can be handled by a physics …","Parameters for a time-step of the physics engine.","A graph where nodes are collision objects and edges are …","Pairwise filtering using bit masks.","The description of all the contacts between a pair of …","Structure responsible for maintaining the set of active …","The transformation matrix type.","If this flag is set, all the joints will be rendered.","The type of a constraint Jacobian in twist coordinates.","The type of a slice of the constraint Jacobian in twist …","The type of a mutable slice of the constraint Jacobian in …","A bit mask identifying multiple degrees of freedom of a …","Identifiers of degrees of freedoms of a joint.","Enum indicating whether or not a joint is enabled.","The limits of a joint along one of its degrees of freedom.","A joint’s motor along one of its degrees of freedom.","Enable collision-detection between a collider attached to …","Enable collision-detection between a collider attached to …","A <code>RigidBodyType::KinematicPositionBased</code> body cannot be …","A <code>RigidBodyType::KinematicVelocityBased</code> body cannot be …","The set of all translational degrees of freedom.","Flag indicating that the local mass-properties of this …","Flag indicating that the density or mass-properties of …","The set of degrees of freedom locked by a fixed joint.","The set of degrees of freedom locked by a prismatic joint.","The set of degrees of freedom locked by a revolute joint.","Flags affecting the behavior of the constraints solver for …","Max number of pairs of contact points from the same …","If set, the duplicate vertices of the trimesh will be …","Flag indicating that any component of this rigid-body has …","Flag indicating that any component of the collider has …","If set, Rapier will call …","If this flag is set, the multibody joints will be rendered.","Mass to be added to the rigid-body. This will also …","The collider is given a mass.","The local mass properties of a rigid-body.","The collider is given explicit mass-properties.","Mass properties to be added as-is.","The matrix type.","The greatest coefficient is chosen.","The smallest coefficient is chosen.","The spring-like model used for constraints resolution.","An articulated body simulated using the …","The temporary index of a multibody added to a …","An joint attached to two bodies based on the reduced …","A multibody joint is being rendered.","The unique handle of an multibody_joint added to a …","A set of rigid bodies that can be handled by a physics …","One link of a multibody.","The two coefficients are multiplied.","None of the groups.","The narrow-phase responsible for computing precise contact …","Excludes all colliders not attached to a dynamic …","Exclude all colliders attached to a non-fixed rigid-body …","Excludes all colliders not attached to a kinematic …","If set, the trimesh will be assumed to be oriented (with …","The point lies on the segment interior.","The point lies on an edge.","The point lies on the triangle interior.","The point lies on the triangle interior (for “solid” …","The point lies on a vertex.","The point lies on a vertex.","The orientation type.","Another element is being rendered.","Flag indicating that the <code>ColliderParent</code> component of the …","Flag indicating that the dominance groups of the parent of …","Flag indicating that the <code>RigidBodyPosition</code> component of …","Flag indicating that the <code>ColliderPosition</code> component of the …","A feature id where the feature type is packed into the …","Context given to custom collision filters to filter-out …","","","User-defined functions called by the physics engines …","The physics pipeline, responsible for stepping the whole …","The point type.","The the projection of a point on a collider.","A polygonal feature representing the local polygonal …","Trait implemented by convex shapes with features with …","A polyline.","A set of segments.","A set of segments.","The principal angular inertia of a rigid body.","A prismatic joint, locks all relative motion between two …","Create prismatic joints using the builder pattern.","","Storage needed to store a Qbvh.","A filter tha describes what collider should be included or …","Flags for excluding whole sets of colliders from a scene …","A pipeline for performing queries on all the colliders of …","Indicates how the colliders position should be taken into …","Flag set if a <code>CollisionEvent::Stopped</code> was fired because at …","If this flag is set, the local coordinate axes of …","Combination of flags indicating that the rigid-body cannot …","Flag indicating that the rigid-body cannot rotate along …","Flag indicating that the rigid-body cannot rotate along …","Flag indicating that the rigid-body cannot rotate along …","A ray that can be cast against colliders.","The intersection between a ray and a  collider.","The scalar type used throughout this crate.","A revolute joint, locks all relative motion except for …","Create revolute joints using the builder pattern.","A rigid body.","A rigid-body is being rendered.","The rb_activation status of a body.","Mass and angular inertia added to a rigid-body on top of …","A builder for rigid-bodies.","Information used for Continuous-Collision-Detection.","Flags describing how the rigid-body has been modified by …","The set of colliders attached to this rigid-bodies.","Damping factors to progressively slow down a rigid-body.","The dominance groups of a rigid-body.","The user-defined external forces applied to this …","Index of a node of the interaction graph.","The unique handle of a rigid body added to a <code>RigidBodySet</code>.","Internal identifiers used by the physics engine.","The mass properties of a rigid-body.","The position of this rigid-body.","A set of rigid bodies that can be handled by a physics …","The status of a body, governing the way it is affected by …","The velocities of this rigid-body.","A rope joint, limits the maximum distance between two …","Create rope joints using the builder pattern.","The rotation matrix type.","A convex polygon dilated by a sphere (so it has round …","A convex polygon with rounded corners.","A convex polygon with rounded corners.","A cuboid dilated by a sphere (so it has round corners).","A cuboid with rounded corners.","A cuboid with rounded corners.","A shape with rounded borders.","A triangle dilated by a sphere (so it has round corners).","A triangle with rounded corners.","A triangle with rounded corners.","Flag set if at least one of the colliders involved in the …","Flag indicating that the <code>ColliderShape</code> component of the …","SIMD_WIDTH - 1","The number of lanes of a SIMD number.","Flag indicating that the <code>RigidBodyActivation</code> component of …","If this flag is set, the solver contacts will be rendered.","The maximum number of possible rotations and translations …","A 2D symmetric-definite-positive matrix.","A segment shape.","A segment shape.","A segment shape.","Logical description of the location of a point on a …","A collider that can generate intersection and intersection …","Trait implemented by shapes usable by Rapier.","Enum representing the type of a shape.","The shape of a collider.","A SIMD bool with SIMD_WIDTH lanes.","Trait implemented by shapes composed of multiple simpler …","A SIMD float with SIMD_WIDTH lanes.","A collider that can generate contacts and contact events.","A contact seen by the constraints solver for computing …","Flags affecting the behavior of the constraints solver for …","A vector with a dimension equal to the maximum number of …","Event occurring when two colliders start colliding","Type of the array containing the heightfield’s cells …","Event occurring when two colliders stop colliding.","Traits of convex shapes representable by a support mapping …","The …","The …","The the time of impact between two shapes.","Flag indicating that the rigid-body cannot translate along …","Flag indicating that the rigid-body cannot translate along …","Flag indicating that the rigid-body cannot translate along …","Flag indicating that the rigid-body cannot translate along …","The dimension of the space multiplied by two.","Flag indicating that the <code>RigidBodyType</code> component of this …","Flag indicating that the <code>ColliderType</code> component of the …","Temporary index to and edge of the interaction graph.","A face of a triangle-mesh’s half-edge topology.","A half-edge of a triangle-mesh’s half-edge topology.","A vertex of a triangle-mesh’s half-edge topology.","Indicated an inconsistency in the topology of a triangle …","A single contact between two shape.","The translation type.","A triangle-mesh.","A triangle mesh shape.","A triangle mesh shape.","The connected-components of a triangle mesh.","The status of the cell of an heightfield.","Trait describing all the types needed for storing a …","The half-edge topology information of a triangle mesh.","A triangle shape.","A triangle shape.","A triangle shape.","Orientation of a triangle.","Description of the location of a point on a triangle.","Enum representing the shape with its actual type","","Packed feature id identifying an unknown feature.","The unit vector type.","Unknown identifier.","The vector type.","Shape-dependent identifier of a vertex.","The translational degree of freedom along the joint’s …","The translational degree of freedom along the local X axis …","The translational degree of freedom along the joint’s …","The translational degree of freedom along the local Y axis …","Compute the axis-aligned bounding box of this triangle …","Computes the world-space Aabb of this half-space.","Compute the axis-aligned bounding box of this polyline.","Computes the world-space Aabb of this convex polygon, …","Computes the world-space Aabb of this heightfield, …","The shapes Aabbs.","","The activation status of this rigid-body.","Mutable reference to the activation status of this …","Create a new rb_activation status initialised with the …","The collision types enabled for this collider.","The set of active collision types for this collider.","Controls whether collision-detection happens between two …","Contact pairs enabled for this collider.","Iter through all the active dynamic rigid-bodies on this …","The events enabled for this collider.","The set of events enabled for this collider.","The events enabled for this collider.","Events enabled for this collider.","The physics hooks enabled for this collider.","The set of physics hooks enabled for this collider.","The physics hooks enabled for contact pairs and …","Physics hooks enabled for this collider.","Iter through all the active kinematic rigid-bodies on this …","","","","","Adds a collider to this rigid-body.","Adds to this rigid-body a constant force applied at its …","Adds to this rigid-body a constant force at the given …","Adds to this rigid-body a constant torque at its …","Mass-properties of this rigid-bodies, added to the …","Sets the additional mass of the rigid-body being built.","Sets the additional mass-properties of the rigid-body …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Allow interaction with everything.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Amount of penetration the engine wont attempt to correct …","The angular damping coefficient of this rigid-body.","Sets the damping factor for the angular part of the …","Damping factor for gradually slowing down the angular …","Damping factor for gradually slowing down the angular …","The angular linear velocity bellow which the body can fall …","The angular velocity of this rigid-body.","Sets the initial angular velocity of the rigid-body to be …","The angular velocity of the rigid-body.","The angular velocity of the rigid-body to be built.","Appends a second triangle mesh to this triangle mesh.","Returns the update velocities after applying the given …","Apply a displacement to the multibody_joint.","Apply displacements, in generalized coordinates, to this …","Applies a force at the given world-space point of the …","Applies an impulse at the center-of-mass of this …","Applies an impulse at the center-of-mass of this …","Applies an impulse at the given world-space point of this …","Applies an impulse at the given world-space point of this …","Applies an angular impulse at the center-of-mass of this …","Applies an angular impulse at the center-of-mass of this …onverts this abstract shape to a ball, if it is one.","Converts this abstract shape to a mutable ball, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this abstract shape to a capsule, if it is one.","Converts this abstract shape to a mutable capsule, if it …","","","","","","Converts this abstract shape to a compound shape, if it is …","Converts this abstract shape to a mutable compound shape, …","Converts this abstract shape to a convex polygon, if it is …","Converts this abstract shape to a mutable convex polygon, …","Converts this abstract shape to a cuboid, if it is one.","Converts this abstract shape to a mutable cuboid, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","Converts this abstract shape to a halfspace, if it is one.","Converts this abstract shape to a halfspace, if it is one.","Converts this abstract shape to a heightfield, if it is …","Converts this abstract shape to a mutable heightfield, if …","","This velocity seen as a mutable slice.","Converts this shape to a polygonal feature-map, if it is …","Converts this shape to a polygonal feature-map, if it is …","","","","","Converts this abstract shape to a polyline, if it is one.","Converts this abstract shape to a mutable polyline, if it …","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","","","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","Converts the joint to its specific variant, if it is one.","Converts the joint to its specific mutable variant, if it …","Converts this abstract shape to a round convex polygon, if …","Converts this abstract shape to a mutable round convex …","Converts this abstract shape to a round cuboid, if it is …","Converts this abstract shape to a mutable round cuboid, if …","Converts this abstract shape to a round triangle, if it is …","Converts this abstract shape to a round triangle, if it is …","Converts this abstract shape to a segment, if it is one.","Converts this abstract shape to a mutable segment, if it …","Converts this abstract shape to the given shape, if it is …","Converts this abstract shape to the given mutable shape, …","This velocity seen as a slice.","Convents this shape into its support mapping, if it has …","Convents this shape into its support mapping, if it has …","","","","","Converts this abstract shape to a triangle, if it is one.","Converts this abstract shape to a mutable triangle, if it …","Converts this abstract shape to a triangle mesh, if it is …","Converts this abstract shape to a mutable triangle mesh, …","Gets the underlying shape as an enum.","","","","","","","","","","This velocity seen as a vector.","This velocity seen as a mutable vector.","Attach a collider to this rigid-body.","Iterate through the handles of all the rigid-bodies …","Iterates through all the enabled impulse joints attached …","Iterates through all the impulse joints attached to the …","Iterates through all the joints attached to the given …","Initialize a ball shape defined by its radius.","Initialize a new collider builder with a ball shape …","The barycentric coordinates corresponding to this point …","The barycentric coordinates corresponding to this point …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","The set of rigid-bodies.","The set of rigid-bodies.","Iterate through the handles of all the rigid-bodies …","Handle to the first body attached to this joint.","The first rigid body handle.","Handle to the second body attached to this joint.","The second rigid body handle.","The position of the multibody link containing this …","The type of this rigid-body.","The radius of the rounded border.","The number of subdivision used to approimate the curved …omputes the world-space bounding sphere of this triangle …","Computes the world-space bounding sphere of this …","Computes the world-space bounding sphere of this polyline, …","Computes the world-space bounding sphere of this convex …","Computes the world-space bounding sphere of this …","Build the fixed joint.","Builds the generic joint.","Builds the prismatic joint.","Builds the revolute joint.","Builds the rope joint.","Build a new rigid-body with the parameters configured with …","Builds a new collider attached to the given rigid-body.","Sets whether or not the rigid-body to be created can sleep …","Whether or not the rigid-body to be created can sleep if …","Create a new activation status that prevents the …","Initialize a capsule shape from its endpoints and radius.","Initialize a capsule shape aligned with the <code>x</code> axis.","Initialize a new collider builder with a capsule shape …","Initialize a capsule shape aligned with the <code>y</code> axis.","Initialize a new collider builder with a capsule shape …","","","","","","","","","","","Find the closest intersection between a ray and a set of …","Find the closest intersection between a ray and a set of …","Casts a shape at a constant linear velocity and retrieve …","Is CCD active for this rigid-body?","","","","","","","","","","","Sets whether or not continuous collision-detection is …","Is CCD enabled for this rigid-body?","Whether continuous collision-detection is enabled for the …","The max distance between this rigid-body’s center of …","","","","","","","","","","","The distance used by the CCD solver to decide if a …","Index of the cell a point is on after vertical projection.","The width of a single cell of this heightfield.","The world-space center-of-mass of this rigid-body.","The CFM factor to be used in the constraints resolution.","Apply motion-clamping to the bodies affected by the given …","Update this data-structure after one or multiple …","Clears all the contacts of this contact pair.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this shape into a boxed trait-objecthe handle of the first collider involved in this …","The handle of the first collider involved in the potential …","The handle of the first collider involved in the potential …","The first collider involved in the contact.","The handle of the first collider involved in this pair.","The first collider involved in the contact pair.","The handle of the second collider involved in this …","The handle of the first collider involved in the potential …","The handle of the first collider involved in the potential …","The second collider involved in the contact.","The handle of the second ocllider involved in this pair.","The second collider involved in the contact pair.","The color of the colliders Aabbs.","The color of colliders attached to dynamic rigid-bodies.","The color of colliders attached to fixed rigid-bodies.","The color of colliders attached to kinematic rigid-bodies.","The color of colliders not attached to any rigid-body.","The handles of colliders attached to this rigid body.","The set of colliders.","The set of colliders.","Finds all handles of all the colliders with an Aabb …","The collision groups used by this collider.","Sets the collision groups used by this collider.","The groups controlling the pairs of colliders that can …","The collision groups for the collider being built.","Combines the coefficients used for solving the spring …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Initialize a compound shape defined by its subshapes.","Initialize a new collider builder with a compound shape.","Computes the Aabb of this shape with the given position.","Computes the Aabb of this shape with the given position.","","","","","","","","","","Compute the axis-aligned bounding box of this collider.","Computes the bounding-sphere of this shape with the given …","Computes the bounding-sphere of this shape with the given …","Adds to <code>self</code> the gravitational force that would result in …","Computes the Aabb of this shape.","","","","","","","","","","Computes the bounding-sphere of this shape.","","","","","","","","","","Computes the swept Aabb of this shape, i.e., the space it …","Computes the swept Aabb of this shape, i.e., the space it …","Compute the axis-aligned bounding box of this collider …","Returns the connected-component information of this …","The collor for the segments joining the two contact points.","The total force magnitude beyond which a contact force …","Sets the total force magnitude beyond which a contact …","The total force magnitude beyond which a contact force …","The contact graph containing all contact pairs and their …","The color of the contact normals.","The length of the contact normals.","The contact pair involving two specific colliders.","Returns the contact pair at the given temporary index.","The contact pair involving two specific colliders.","All the contact pairs maintained by this narrow-phase.","Computes the contacts between two polygonal features.","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","Sets whether contacts between the attached rigid-bodies …","Are contacts between the attached rigid-bodies enabled?","All the contacts involving the given collider.","All the contacts involving the given collider.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Is the given joint handle valid?","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Is the given body handle valid?","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Is this collider handle valid?","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Creates a new shared shape that is the convex-hull of the …","Initializes a new collider builder with a 2D convex …","Creates a new shared shape that is a convex polygon formed …","Creates a new collider builder that is a convex polygon …","Copy to <code>self</code> the geometric information from <code>contact</code>.","Counters used for benchmarking only.","Sets the coupled degrees of freedom for this joint’s …","The coupled degrees of freedom of this joint.","Initialize a cuboid shape defined by its half-extents.","Initialize a new collider builder with a cuboid shape …","The vector of damping applied to this multibody.","The damping coefficient of the motor’s spring-like …","Mutable vector of damping applied to this multibody.","0-1: the damping ratio used by the springs for Baumgarte …","The underlying generic joint.","The underlying generic joint.","The underlying generic joint.","The underlying joint data.","The joint’s description.","The joint’s description.","The underlying joint data.","The underlying joint data.","The underlying joint data.","User-data associated to this contact.","Create a compound shape from the <code>TriMesh</code>. This involves …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default angular velocity bellow which a body can be …","Fill <code>out</code> with the non-zero entries of a damping that can …","The default density used by the collider builder.","","The default friction coefficient used by the collider …","The default linear velocity bellow which a body can be put …","","The amount of time the rigid-body must remain bellow …","Set the position of this collider in the local-space of …","The density of this collider.","Sets the uniform density of the collider this builder will …etach a collider from this rigid-body.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","The distance between the two contact points.","The distance between the two original contacts points …","","The dominance group of this rigid-body.","Sets the dominance group of this rigid-body.","The dominance group of the rigid-body to be built.","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Draws a colored line.","Draws a chain of line.","Draws a set of line.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The timestep length (default: <code>1.0 / 60.0</code>)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes the builder of a new dynamic rigid body.","The effective world-space angular inertia (that takes the …","The dominance group of this rigid-body.","The actual dominance group of this rigid-body, after …","The inverse mass taking into account translation locking.","The effective mass (that takes the potential translation …","The square-root of the world-space inverse angular inertia …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Enables of disable CCD (continuous collision-detection) …","Enable or disable the rigid-body after its creation.","Enable or disable the collider after its creation.","Whether or not the joint is enabled.","Will the rigid-body being built be enabled?","Whether or not the collider is enabled.","Will the collider being built be enabled?","Only allow translations of this rigid-body around specific …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","0-1: multiplier for how much of the constraint violation …","The ERP coefficient, multiplied by the inverse timestep …","Set the collider that will be excluded from the scene …","If set, this collider will be excluded from the scene …","Exclude from the query any collider attached to a …","Exclude from the query any collider attached to a fixed …","Exclude from the query any collider attached to a dynamic …","Set the rigid-body that will be excluded from the scene …","If set, any collider attached to this rigid-body will be …","Exclude from the query any collider that is a sensor.","Exclude from the query any collider that is not a sensor.","","","","","","","","","","","","","","Extracts the connected components of this polyline, …","Converts a face feature id into a packed feature id.","The face associated to this half-edge.","The <code>face_colors[i]</code> gives the connected-component index of …","Computes the contacts between two polygonal faces.","Compute contacts points between a face and a vertex.","The faces of this half-edge representation.","The normal of the given feature.","The shape’s normal at the given point located on a …","The shape’s normal at the given point located on a …","","The feature ID of this polygonal feature.","The feature ID of the first shape involved in the contact.","The feature ID of the second shape involved in the contact.","Groups filter.","Applies the contact pair filter.","Applies the intersection pair filter.","Finds the contact with the smallest signed distance.","Find the first time a CCD-enabled body has a non-sensor …","Initializes the builder of a new fixed rigid body.","The flags of this triangle mesh.","Flags for locking rotation and translation.","Flags indicating what particular type of colliders should …","A flat view of the index buffer of this mesh.","A flat view of the index buffer of this mesh.","Creates a new tracked contact where its input may need to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Accumulation of external forces (only for dynamic bodies).","Apply forward-kinematics to this multibody and its related …","The friction coefficient of this collider.","Sets the friction coefficient of the collider this builder …","The friction coefficient of this collider.","The effective friction coefficient at this contact point.","The friction coefficient of the collider to be built.","The combine rule used by this collider to combine its …","Sets the rule to be used to combine two friction …","The rule applied to combine the friction coefficients of …","The rule used to combine two friction coefficients.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Computes the mass properties of a ball.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Computes the mass properties of a capsule.","Computes the mass properties of a compound shape.","Init a contact force event from a contact pair.","Creates a new 2D convex polygon from an arbitrary set of …","Computes the mass properties of a convex polygon.","Creates a new 2D convex polygon from a set of points …","Computes the mass properties of a cuboid.","","","","","","","","","","","","","","","Create a <code>TriMesh</code> from a set of points assumed to describe …","Reconstructs an handle from its (index, generation) …","Reconstructs an handle from its (index, generation) …","Reconstructs an handle from its (index, generation) …","Reconstructs an handle from its (index, generation) …","Converts a slice to a rigid-body velocity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the mass properties of a triangle.","Computes the mass properties of a triangle-mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The generalized accelerations of this multibodies.","The generalized velocities of this multibodies.","The mutable generalized velocities of this multibodies.","Gets the joint with the given handle.","Gets a reference to the multibody identified by its <code>handle</code>.","Gets the rigid-body with the given handle.","Get the collider with the given handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a reference to a multibody, based on its temporary …","Gets a mutable reference to a multibody, based on its …","Gets a mutable reference to the joint with the given …","Gets a mutable reference to the multibody identified by …","Gets a mutable reference to the rigid-body with the given …","Gets a mutable reference to the collider with the given …","Gets a mutable reference to the multibody identified by …","Gets the joint with the given handle without a known …","Gets the joint with the given handle without a known …","Gets the rigid-body with the given handle without a known …","Gets the collider with the given handle without a known …","Gets a mutable reference to the joint with the given …","Gets a mutable reference to the rigid-body with the given …","Gets a mutable reference to the collider with the given …","The potential energy of this body in a gravity field.","The scale factor applied to the gravity affecting this …","Sets the scale applied to the gravity force affecting the …","Gravity is multiplied by this scaling factor before it’s …","The scale factor applied to the gravity affecting the …","The set of faces grouped by connected components.","Only colliders with collision groups compatible with this …","If set, only colliders with collision groups compatible …","One of the half-edge with this vertex as endpoint.","The half-edge adjacent to this face, with a starting point …","The half-edges of this half-edge representation.","Initialize a plane shape defined by its outward normal.","Initialize a new collider build with a half-space shape …","Handle of the rigid-body this collider is attached to.","Handle a collision event.","","Handle a force event.","","Maintain the narrow-phase internal state by taking …","Is there any active contact in this contact pair?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the heightfield a the given point after vertical …","Initializes an heightfield shape defined by its set of …","Initializes a collider builder with a heightfield shape …","The height at each cell endpoint.","The identity position.","The impulse applied to enforce the joint’s limit.","The impulse applied by this motor.","The impulse, along the contact normal, applied by this …","The color of the line between a rigid-body’s …","The color of the line between the two anchors of an …","The impulses applied by this joint.","Create a new rb_activation status initialised with the …","","","","","","","","","Gets the interaction with the given index.","","","The index buffer of this mesh.","The index buffer of this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The shape being rounded.","Inserts the specified flags in-place.","Inserts a new joint into this set and retrieve its handle.","Inserts a new multibody_joint into this set.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Insert a rigid body into this set and retrieve its handle.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts a new collider to this set and retrieve its handle.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts a new collider to this set, attach it to the given …","Integrate the position of this multibody_joint.","Integrate the velocities in <code>self</code> to compute obtain new …","Integrate these forces to compute new velocities.","Compute new positions after integrating the given forces …","The interaction between the two collision objects …","The interaction between the two collision objects …","All the interactions on this graph.","All the interaction involving the collision object with …","All the interactions on this graph with the corresponding …","All the mutable references to interactions involving the …","If <code>false</code>, friction and non-penetration constraints will be …","Computes the velocity need to travel from <code>self.position</code> to …","Are the colliders intersecting?","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","The intersection graph containing all intersection pairs …","The intersection pair involving two specific colliders.","The intersection pair involving two specific colliders.","All the intersection pairs maintained by this narrow-phase.","Gets the handle of up to one collider intersecting the …","All the intersections involving the given collider.","Find all the colliders containing the given point.","Find the all intersections between a ray and a set of …","Retrieve all the colliders intersecting the given shape.","All the intersections involving the given collider.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonverts this handle into its (index, generation) …","Converts this handle into its (index, generation) …","Converts this handle into its (index, generation) …","Converts this handle into its (index, generation) …","The inverse augmented mass matrix of this multibody.","The inverse of the time-stepping length, i.e. the steps …","The inverse of the mass of a rigid-body.","The inverse of the principal angular inertia of the …","An always-invalid joint handle.","An always-invalid rigid-body handle.","An always-invalid rigid-body handle.","An always-invalid collider handle.","An always-invalid collider handle.","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if the body is not asleep.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Does the given feature ID identify a backface of this …","Should we treat this contact as a bouncy contact? If <code>true</code>, …","Is CCD active for this rigid-body?","Is CCD (continous collision-detection) enabled for this …","Is this shape known to be convex?","Is this shape known to be convex?","","","","","","Is this shape a <code>ConvexPolyhedron</code>?","Is this rigid-body dynamic (i.e. can move and be affected …","Is this rigid body dynamic?","Returns <code>true</code> if no flags are currently stored.","<code>true</code> if there are no impulse_joints in this set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","<code>true</code> if there are no rigid bodies in this set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","<code>true</code> if there are no colliders in this set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Is this joint enabled?","Is this rigid-body enabled?","Is this collider enabled?","Is the identified feature a face?","Is this rigid-body fixed (i.e. cannot move)?","Is this rigid body fixed?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this rigid-body kinematic (i.e. can move but is …","Is this rigid body kinematic?","Is the velocity of this body not zero?","Is this rigid-body moving fast enough so that it may cause …","Whether or not this contact existed during the last …","Returns <code>true</code> if the point is located on the relative …","Checks if this link is the root of the multibody.","Are the rotations of this rigid-body locked?","Checks if the i-th segment has been removed.","Is this collider a sensor?","Is this collider a sensor?","Is this collider a sensor?","Is this rigid body sleeping?","Are the translations of this rigid-body locked?","Is the identified feature unknown?","Is the identified feature a vertex?","Are these velocities exactly equal to zero?","","Iterates through all the joint on this set.","Iterates through all the multibody joints from this set.","Iterates through all the rigid-bodies on this set.","Iterate through all the colliders on this set.","Iterate through all the enabled colliders on this set.","Iterates mutably through all the enabled colliders on this …","Iterates mutably through all the joint on this set.","Iterates mutably through all the rigid-bodies on this set.","Iterates mutably through all the colliders on this set.","Sets in <code>out</code> the non-zero entries of the multibody_joint …","Multiply the multibody_joint jacobian by generalized …","The multibody joint of this link.","The multibody joint of this link.","Returns the the joint between two rigid-bodies (if it …","The CFM (constraints force mixing) coefficient applied to …","The fraction of critical damping applied to the joint for …","0-1: multiplier for how much of the joint violation will …","The joint ERP coefficient, multiplied by the inverse …","Retrieve the joint graph where edges are impulse_joints …","Iterates through all the joints between two rigid-bodies.","Initializes the builder of a new position-based kinematic …","Initializes the builder of a new velocity-based kinematic …","The kinetic energy of this rigid-body.","The kinetic energy of this body.","The number of impulse_joints on this set.","The number of rigid bodies on this set.","The number of colliders on this set.","The degrees-of-freedoms limited by this joint.","The joint limits along the specified axis.","Sets the joint limits along the specified axis.","The limit distance attached bodies can translate along the …","Sets the <code>[min,max]</code> limit distances attached bodies can …","The limit angle attached bodies can translate along the …","Sets the <code>[min,max]</code> limit angles attached bodies can rotate …","The limit maximum distance attached bodies can translate.","Sets the <code>[min,max]</code> limit distances attached bodies can …","The limits, along each degrees of freedoms of this joint.","The linear damping coefficient of this rigid-body.","Sets the damping factor for the linear part of the …","Damping factor for gradually slowing down the …","Damping factor for gradually slowing down the …","The threshold linear velocity bellow which the body can …","Reference <code>i</code>-th multibody link of this multibody.","The handle of this multibody link.","Mutable reference to the multibody link with the given id.","Iterator through all the links of this multibody.","Mutable iterator through all the links of this multibody.","The linear velocity of this rigid-body.","Sets the initial linear velocity of the rigid-body to be …","The linear velocity of the rigid-body.","The linear velocity of the rigid-body to be built.","Gets the local axis-aligned bounding box of this triangle …","The Aabb of this compound in its local-space.","Computes the local-space Aabb of this half-space.","Gets the local axis-aligned bounding box of this polyline.","Computes the local-space Aabb of this convex polygon.","Computes the local-space Aabb of this heightfield.","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The anchor of this joint, expressed in the first …","Sets the anchor of this joint, expressed in the first …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The anchor of this joint, expressed in the second …","Sets the anchor of this joint, expressed in the second …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The joint’s anchor, expressed in the local-space of the …","Sets the joint’s anchor, expressed in the local-space of …","The principal (local X) axis of this joint, expressed in …","Sets the principal (local X) axis of this joint, expressed …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","The principal (local X) axis of this joint, expressed in …","Sets the principal (local X) axis of this joint, expressed …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","The principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","Computes the local-space bounding sphere of this triangle …","The bounding-sphere of this compound in its local-space.","Computes the local-space bounding sphere of this …","Computes the local-space bounding sphere of this polyline.","Computes the local-space bounding sphere of this convex …","Computes the local-space bounding sphere of this …","The center of mass of a rigid-body expressed in its …","The joint’s frame, expressed in the first rigid-body’s …","Sets the joint’s frame, expressed in the first …","Sets the joint’s frame, expressed in the first …","The joint’s frame, expressed in the first rigid-body’s …","The joint’s frame, expressed in the second …","Sets joint’s frame, expressed in the second …","Sets the joint’s frame, expressed in the second …","The joint’s frame, expressed in the second …","The local mass properties of the rigid-body.","The contact point in the local-space of the first shape.","The contact point in the local-space of the second shape.","Compute the support polygonal face of <code>self</code> towards the <code>dir</code>.","","","","","Same as <code>self.local_support_point</code> except that <code>dir</code> is …","Same as <code>self.local_support_point</code> except that <code>dir</code> is …","","The position of the rigid-body attached to this link …","The world-space transform of the rigid-body attached to …","Add the specified axes to the set of axes locked by this …","Locks or unlocks all the rotations of this rigid-body.","Prevents this rigid-body from rotating because of forces.","Locks or unlocks all the rotations of this rigid-body.","Prevents this rigid-body from translating because of …","Sets the degrees of freedom locked by the joint.","The axes along which this rigid-body cannot translate or …","Sets the axes along which this rigid-body cannot translate …","The degrees-of-freedoms locked by this joint.","If this shape is shared, then the content of <code>self</code> is …","The contact manifold.","The set of contact manifolds between the two colliders.","Iterates through all the impulse joints attached to the …","Applies <code>f</code> to each segment of this heightfield that …","Applies a function to one sub-shape of this composite …","","","","","","","","","","","","","","The mass of the rigid-body.","The mass.","The mass of this rigid body.","The mass of this collider.","Sets the mass of the collider this builder will build.","Compute the mass-properties of this shape given its …","","The mass-properties of this rigid-body.","The mass-properties of this collider.","","","","","","","","","Compute the local-space mass properties of this collider.","Sets the mass properties of the collider this builder will …","Controls the way the collider’s mass-properties are …","The material (friction and restitution properties) of this …","The maximum bound of the joint limit.","Maximum number of substeps performed by the  solver …","The maximum force this motor can deliver.","The world-space (unit) direction of the force with …","The magnitude of the largest force at a contact point of …","The magnitude and (unit) direction of the maximum impulse …","Maximum amount of penetration the solver will attempt to …","The maximum velocity any point of any collider attached to …","Maximum number of iterations performed to remove the …","Maximum number of iterations performed to solve friction …","Maximum number of iterations performed to solve …","Groups memberships.","The minimum bound of the joint limit.","Minimum timestep size when using CCD with multiple …","Minimum number of dynamic bodies in each active island …","Flags controlling what part of the physics engine need to …","The spring-like model used for simulating this motor.","Modifies the set of contacts seen by the constraints …","The motor affecting the joint’s degree of freedom along …","The motor affecting the joint’s translational degree of …","The motor affecting the joint’s rotational degree of …","Configure both the target angle and target velocity of the …","The motor affecting the joint’s translational degree of …","The degrees-of-freedoms motorised by this joint.","Sets the maximum force the motor can deliver along the …","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","The spring-like motor model along the specified axis of …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","The motors, along each degrees of freedoms of this joint.","","Iterates through all the multibodies on this set.","The color of the line between a rigid-body’s …","The color of the line between the two anchors of a …","The total number of freedoms of this multibody.","The number of degrees of freedom allowed by the …","Do these changes justify a broad-phase update?","Do these changes justify a narrow-phase update?","Initializes a new physics pipeline.","Initialize a new collision event handler from crossbeam …","Initializes a new physics pipeline.","Creates a new debug-render pipeline from a given style and …","Initializes a new CCD solver","Creates a new triangle mesh from a vertex buffer and an …","Creates a new empty island manager.","Creates a new fixed joint.","Creates a new builder for fixed joints.","Creates a new generic joint that locks the specified …","Creates a new generic joint builder.","Creates a new empty set of impulse_joints.","Creates a new multibody with no link.","Create a new empty set of multibodies.","Creates a new multibody link.","Creates a new multibody joint from its description.","Creates a new prismatic joint allowing only relative …","Creates a new builder for prismatic joints.","Creates a new revolute joint allowing only relative …","Creates a new revolute joint builder.","Creates a new rope joint limiting the max distance between …","Creates a new builder for rope joints.","Create a new rigid-body velocity component.","Initializes the mass properties with the given …","Initialize a new builder for a rigid body which is either …","Builds a new pair of rigid-body handles.","Create a new empty set of rigid bodies.","Creates a new tracked contact.","Create a new empty broad-phase.","Creates a new pair of collider handles.","Creates a new collider material with the given friction …","Builds a new compound shape.","Builds a new halfspace from its center and its normal.","Creates a new polyline from a vertex buffer and an index …","Creates a new empty collection of collision objects.","Initializes with the given interaction groups and …","Creates a new 2D heightfield with the given heights and …","Wraps the given shape as a shared shape.","Creates a new empty narrow-phase.","Initialize a new collider builder with the given shape.","Create a new empty set of colliders.","Initializes an empty query pipeline.","A query filter that doesn’t exclude any collider.","Initializes the builder of a new position-based kinematic …","Initializes the builder of a new velocity-based kinematic …","Initializes the builder of a new fixed rigid body.","The next half-edge.","The predicted position of this rigid-body.","The next position of the rigid-body.","Prevent all interactions.","Casts a shape with an arbitrary continuous motion and …","The contact normal that can be modified.","The halfspace planar boundary’s outward normal.","The world-space contact normal shared by all the contact …","The normals of the edges of this convex polygon.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Number of actives contacts, i.e., contacts that will be …","The number of cells of this heightfield.","The total number of connected components.","The number of links on this multibody.","The number of segments forming this polyline.","The number of triangles forming this mesh.","Maximum number of velocity constrains that can be …","The number of vertices on this polygon (must be &lt;= 4).","Returns a mitered offset of the polygon.","Excludes all colliders not attached to a dynamic …","Exclude all colliders attached to a non-fixed rigid-body …","Excludes all colliders not attached to a kinematic …","The rigid body this collider is attached to.","The handle of the parent link.","","","","","","","","","","","","","","","The world-space contact point.","Construct a fixed-size point directly from data.","The vertices of this convex polygon.","Initializes a polyline shape defined by its vertex and …","Initializes a collider builder with a polyline shape …","Const position of this collider relative to its parent …","The world-space position of this rigid-body.","Sets the initial position (translation and orientation) of …","The world-space position of this collider.","Sets the initial position (translation and orientation) of …","The world-space position of the rigid-body.","The initial position of the rigid-body to be built.","The position of this collider.","The position of this collider wrt the body it is attached …","Sets the initial position (translation and orientation) of …","Set the predicate to apply a custom collider filtering …","If set, any collider for which this closure returns false …","Outputs the set of bodies as well as their first …","Predicts the next position of this rigid-body, by …","The maximal distance separating two objects that will …","The angular inertia along the principal inertia axes of …","","","","","","","","","","","","","","","","","","Projects a point on <code>self</code>, with a maximum projection …","Perform a point projection assuming a solid interior based …","Projects a point on <code>self</code> transformed by <code>m</code>, unless the …","","Find the projection of a point on the closest collider.","Find the projection of a point on the closest collider.","Update colliders positions after rigid-bodies moved.","","The approximate kinetic energy of this rigid-body.","Gets the acceleration structure of the composite shape.","The acceleration structure used by this triangle-mesh.","","The acceleration structure used by this compound shape.","","","The query dispatcher used by this narrow-phase to select …","The query dispatcher used by this query pipeline for …","The range of connected components. …he underlying raw graph structure of this interaction …","Recompute the mass-properties of this rigid-bodies based …","Recompute the mass-properties of this rigid-bodies based …","The relative dominance of the bodies involved in this …","","Removes the specified flags in-place.","Removes a joint from this set.","Removes an multibody_joint from this set.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes a rigid-body, and all its attached colliders and …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Remove a collider from this set and update its parent …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Deletes all the impulse_joints attached to the given …","Removes all the multibody joints attached to a rigid-body.","Removes all the multibody_joints from the multibody the …","Was at least one of the colliders involved in the …","Render the scene.","Creates a new debug-render pipeline that renders everything","Render only the colliders from the scene.","Render contact.","Render only the joints from the scene.","Render only the rigid-bodies from the scene.","Resets to zero all the constant (linear) forces manually …","Resets to zero all the constant torques manually applied …","The restitution coefficient of this collider.","Sets the restitution coefficient of the collider this …","The restitution coefficient of this collider.","The effective restitution coefficient at this contact …","The restitution coefficient of the collider to be built.","The combine rule used by this collider to combine its …","Sets the rule to be used to combine two restitution …","The rule applied to combine the restitution coefficients …","The rule used to combine two restitution coefficients.","Locks or unlocks rotations of this rigid-body along each …","Locks or unlocks rotations of this rigid-body along each …","Only allow translations of this rigid-body around specific …","Reverse the orientation of the triangle mesh.","Reverse the orientation of this polyline by swapping the …","The handle of the first body involved in the potential …","The handle of the first body involved in the potential …","The first rigid-body involved in this contact manifold.","The handle of the first body involved in the potential …","The handle of the first body involved in the potential …","The second rigid-body involved in this contact manifold.","The length of the local coordinate axes rendered for a …","The handle of the rigid-body of this link.","Returns the link of this multibody attached to the given …","The first link of this multibody.","The Aabb of this heightfield.","Mutable reference to the first link of this multibody.","The rotational part of this rigid-body’s position.","Sets the initial orientation of the rigid-body to be …","The rotational part of this collider’s position.","Sets the initial orientation of the collider to be created.","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Initializes a compound shape obtained from the …","Initializes a collider builder with a compound shape …","Creates a new shared shape with rounded corners that is the","Initializes a new collider builder with a round 2D convex …","Creates a new shared shape with round corners that is a …","Creates a new collider builder that is a round convex …","Initialize a round cuboid shape defined by its …","Initialize a new collider builder with a round cuboid …","Initializes a triangle shape with round corners.","Initializes a collider builder with a triangle shape with …","The scale factor applied to this heightfield.","Returns a scaled version of this triangle mesh.","Computes a scaled version of this half-space.","Computes a scaled version of this polyline.","Computes a scaled version of this convex polygon.","Returns a scaled version of this heightfield.","Get the <code>i</code>-th segment of this mesh.","Initialize a segment shape from its endpoints.","Initializes a collider builder with a segment shape.","The i-th segment of the heightfield if it has not been …","Transforms  the feature-id of a segment to the feature-id …","An iterator through all the segments of this mesh.","Iterator through all the segments of this heightfield.","Was at least one of the colliders involved in the …","Sets whether or not the collider built by this builder is …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the collision types enabled for this collider.","Sets the events enabled for this collider.","Sets the physics hooks enabled for this collider.","Sets the rigid-body’s additional mass.","Sets the rigid-body’s additional mass-properties.","Sets the angular damping coefficient of this rigid-body.","The angular velocity of this rigid-body.","Sets the type of this rigid-body.","Sets the collision groups of this collider.","Sets the total force magnitude beyond which a contact …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets whether contacts between the attached rigid-bodies …","Sets the uniform density of this collider.","The dominance group of this rigid-body.","Sets the time-stepping length.","Set whether this joint is enabled or not.","Sets whether this rigid-body is enabled or not.","Sets whether or not this collider is enabled.","Locks or unlocks rotations of this rigid-body along each …","Locks or unlocks rotations of this rigid-body along each …","Sets the flags of this triangle mesh, controlling its …","Sets the friction coefficient of this collider.","Sets the combine rule used by this collider to combine its …","Sets the gravity scale facter for this rigid-body.","Sets the inverse time-stepping length (i.e. the frequency).","Sets the joint limits along the specified axis.","Sets the <code>[min,max]</code> limit distances attached bodies can …","Sets the <code>[min,max]</code> limit angle attached bodies can …","Sets the <code>[min,max]</code> limit distances attached bodies can …","Sets the linear damping coefficient of this rigid-body.","The linear velocity of this rigid-body.","Sets the joint’s anchor, expressed in the local-space of …","Sets anchor of this joint, expressed in the first …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets anchor of this joint, expressed in the second …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the joint’s anchor, expressed in the local-space of …","Sets the principal (local X) axis of this joint, expressed …","Sets the principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","Sets the principal (local X) axis of this joint, expressed …","Sets the principal axis of the joint, expressed in the …","Sets the principal axis of the joint, expressed in the …","Sets the joint’s frame, expressed in the first …","Sets the joint’s frame, expressed in the first …","Sets joint’s frame, expressed in the second …","Sets the joint’s frame, expressed in the second …","Sets the axes along which this rigid-body cannot translate …","Changes the mass on these mass-properties.","Sets the mass of this collider.","Sets the mass properties of this collider.","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Configure both the target angle and target velocity of the …","Sets the maximum force the motor can deliver along the …","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","Sets the maximum force the motor can deliver.","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Set the spring-like model used by the motor to reach the …","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target angle this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","Sets the target velocity this motor needs to reach.","If this rigid body is kinematic, sets its future position …","If this rigid body is kinematic, sets its future …","If this rigid body is kinematic, sets its future …","Sets the parent of the given collider.","Sets the position and <code>next_kinematic_position</code> of this …","Sets the position of this collider.","Sets the position of this collider wrt. its parent …","Sets the restitution coefficient of this collider.","Sets the combine rule used by this collider to combine its …","Sets the rotational part of this rigid-body’s position.","Sets the rotational part of this collider’s position.","Sets the rotational part of this collider’s rotaiton …","Sets the scale factor applied to this heightfield.","Mark the i-th segment of this heightfield as removed or …","Sets whether or not this is a sensor collider.","Sets the shape of this collider.","Sets the solver groups of this collider.","Sets the translational part of this rigid-body’s …","Sets the translational part of this collider’s position.","Sets the translational part of this collider’s …","The geometric shape of this collider.","The shape of the collider to be built.","A mutable reference to the geometric shape of this …","Gets the type tag of this shape.","","","","","","","","","","The shapes of this compound shape.","Retrieve the SharedShape. Also see the <code>shape()</code> function","Put this rigid-body to sleep.","Put this rigid body to sleep.","If a rigid-body is sleeping, its attached entities will …","Sets whether or not the rigid-body is to be created asleep.","Is this body sleeping?","Whether or not the rigid-body is to be created asleep.","The solver contacts that can be modified.","The contacts that will be seen by the constraints solver …","Flags used to control some aspects of the constraints …","The solver groups used by this collider.","Sets the solver groups used by this collider.","The groups controlling the pairs of collider that have …","The solver groups for the collider being built.","The left-most x-coordinate of this heightfield.","Is this a <code>Started</code> collision event?","Executes one step of the collision detection.","Executes one timestep of the physics simulation.","The stiffness coefficient of the motor’s spring-like …","Is this a <code>Stopped</code> collision event?","The style used to compute the line colors for each element …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","The number of subdivision used to approximate the curved …","","Get the ID of the feature with a normal that maximizes the …","","","Same as <code>self.support_point</code> except that <code>dir</code> is normalized.","Same as <code>self.support_point</code> except that <code>dir</code> is normalized.","Swaps the two collider handles in <code>self</code>.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The friction impulse along the vector orthonormal to the …","The desired tangent relative velocity at the contact point.","The target position of the motor.","The target velocity of the motor.","Test whether contact should be computed between two …","Check if interactions should be allowed based on the …","Tests if the given collider should be taken into account …","Applies the filters described by <code>self</code> to a collider to …","Since how much time can this body sleep?","The amount of time the rigid-body must remain below the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Discretize the boundary of this round cuboid as a …","Discretize the boundary of this round convex polygon as a …","Rasterize this heightfield as a (potentially …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Returns the topology information of this trimesh, if it …","Accumulation of external torques (only for dynamic bodies).","The sum of all the forces between the two colliders.","The sum of the magnitudes of each force between the two …","The sum of all the impulses applied by contacts on this …","The sum of the magnitudes of the contacts on this contact …","Transform each element of the mass properties.","Transforms the vertices of <code>self</code> by the given position <code>pos</code>.","Transforms in-place the vertices of this triangle mesh.","Return <code>self</code> rotated by <code>rotation</code>.","The translational part of this rigid-body’s position.","Sets the initial translation of the rigid-body to be …","The translational part of this collider’s position.","Sets the initial translation of the collider to be created.","Get the <code>i</code>-th triangle of this mesh.","Initializes a triangle shape.","Initializes a collider builder with a triangle shape.","An iterator through all the triangles of this mesh.","Initializes a triangle mesh shape defined by its vertex …","Initializes a collider builder with a triangle mesh shape …","Initializes a triangle mesh shape defined by its vertex …","Initializes a collider builder with a triangle mesh shape …his half-edge twin on the adjacent triangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The range of segment ids that may intersect the given …","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The width of a single cell of this heightfield, without …","Initializes and generate the velocity constraints …","Initializes and generate the velocity constraints …","Unpacks this feature id into an explicit enum.","Retrieves the value of the identifier if <code>self</code> is a face.","Revries the value of the identifier if <code>self</code> is a vertex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the broad-phase, taking into account the new …","Update the acceleration structure on the query pipeline.","Helper function to update <code>self</code> to emulate a …","Updates the set of bodies that needs CCD to be resolved.","Update the query pipeline incrementally, avoiding a …","Update the positions of all the colliders attached to this …","Update the acceleration structure on the query pipeline.","Update the world-space mass properties of <code>self</code>, taking …","An arbitrary user-defined 128-bit integer associated to …","Sets an arbitrary user-defined 128-bit integer associated …","User-defined data attached to the manifold.","User-defined data associated to this rigid-body.","An arbitrary user-defined 128-bit integer associated to …","A user-defined piece of data.","User-defined data associated to this collider.","The user-data of the collider being built.","Retrieves the constant force(s) that the user has added to …","Forces applied by the user.","Retrieves the constant torque(s) that the user has added …","Torque applied by the user.","Construct a fixed-size column vector directly from data.","The velocity of the given world-space point on this …","The velocity of the given world-space point on this …","Initialize and generate velocity constraints to enforce, …","Converts a vertex feature id into a packed feature id.","The first vertex of this edge.","The vertex buffer of this mesh.","The vertex buffer of this mesh.","The vertices of this half-edge representation.","Up to two vertices forming this polygonal feature.","The feature IDs of this polygon’s vertices.","The volume (or surface in 2D) of this collider.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forces the specified rigid-body to wake up if it is …","Wakes up this rigid-body.","Wakes up this rigid body if it is sleeping.","Sets the interaction mask of this filter.","Creates a new triangle mesh from a vertex buffer and an …","Sets the group this filter is part of.","Initializes a CCD solver with a custom <code>QueryDispatcher</code> …","Creates a new empty narrow-phase with a custom query …","Initializes an empty query pipeline with a custom …","The world-space center of mass of the rigid-body.","The world-space center of mass of the rigid-body.","The world-space inverse angular inertia tensor of the …","Velocities set to zero.","","","Constructs a pair of artificial handles that are not …","The time used to integrate the rigid-body’s velocity and …","The edge shared between the two triangles.","The first triangle, with an orientation opposite to the …","The second triangle, with an orientation opposite to the …","Trait implemented by rotations that can be used inside of …","A 2D affine transformation. Stored as a homogeneous 3x3 …","A 3D affine transformation. Stored as a homogeneous 4x4 …","A array-based statically sized matrix data storage.","The bidiagonalization of a general matrix.","The column-stride of the owned data storage for a buffer …","The static stride of this storage’s columns.","The Cholesky decomposition of a …","Trait <strong>alias</strong> for <code>Add</code> and <code>AddAssign</code> with result of type <code>Self</code>.","Trait <strong>alias</strong> for <code>Div</code> and <code>DivAssign</code> with result of type <code>Self</code>.","Trait <strong>alias</strong> for <code>Mul</code> and <code>MulAssign</code> with result of type <code>Self</code>.","Trait <strong>alias</strong> for <code>Sub</code> and <code>SubAssign</code> with result of type <code>Self</code>.","The QR decomposition (with column pivoting) of a general …","A complex number in Cartesian form.","Trait shared by all complex fields and its subfields (like …","","","A dynamically sized column-major matrix.","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A dynamically sized column vector.","A column vector slice dynamic numbers of rows and columns.","A column vector slice dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","An allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …","Trait implemented by any type that can be used as a …","","","","","","","","","Trait implemented exclusively by type-level integers.","","","","","","","","","","","","","","","A range with a size that may be known at compile-time.","","","A dual quaternion.","Dim of dynamically-sized algebraic entities.","","The type of the elements of each lane of this SIMD value.","Euclidean norm.","Trait implemented by fields, i.e., complex numbers and …","LU decomposition with full row and column pivoting.","Hessenberg decomposition of a general matrix.","Marker trait indicating that a storage is stored …","Trait implemented by <code>Dyn</code>.","Trait implemented by <code>Dyn</code> and type-level integers different …","A direct isometry, i.e., a rotation followed by a …","A 2-dimensional direct isometry using a unit complex …","A 3-dimensional direct isometry using a unit quaternion …","A 2-dimensional direct isometry using a rotation matrix …","A 3-dimensional direct isometry using a rotation matrix …","LU decomposition with partial (row) pivoting.","Lp norm.","The most generic column-major matrix (and vector) type.","A stack-allocated, column-major, 1x1 square matrix.","A stack-allocated, column-major, 1x2 matrix.","A stack-allocated, column-major, 1x3 matrix.","A stack-allocated, column-major, 1x4 matrix.","A stack-allocated, column-major, 1x5 matrix.","A stack-allocated, column-major, 1x6 matrix.","A heap-allocated, row-major, matrix with 1 rows and a …","A stack-allocated, column-major, 2x2 square matrix.","A stack-allocated, column-major, 2x1 matrix.","A stack-allocated, column-major, 2x3 matrix.","A stack-allocated, column-major, 2x4 matrix.","A stack-allocated, column-major, 2x5 matrix.","A stack-allocated, column-major, 2x6 matrix.","A heap-allocated, row-major, matrix with 2 rows and a …","A stack-allocated, column-major, 3x3 square matrix.","A stack-allocated, column-major, 3x1 matrix.","A stack-allocated, column-major, 3x2 matrix.","A stack-allocated, column-major, 3x4 matrix.","A stack-allocated, column-major, 3x5 matrix.","A stack-allocated, column-major, 3x6 matrix.","A heap-allocated, row-major, matrix with 3 rows and a …","A stack-allocated, column-major, 4x4 square matrix.","A stack-allocated, column-major, 4x1 matrix.","A stack-allocated, column-major, 4x2 matrix.","A stack-allocated, column-major, 4x3 matrix.","A stack-allocated, column-major, 4x5 matrix.","A stack-allocated, column-major, 4x6 matrix.","A heap-allocated, row-major, matrix with 4 rows and a …","A stack-allocated, column-major, 5x5 square matrix.","A stack-allocated, column-major, 5x1 matrix.","A stack-allocated, column-major, 5x2 matrix.","A stack-allocated, column-major, 5x3 matrix.","A stack-allocated, column-major, 5x4 matrix.","A stack-allocated, column-major, 5x6 matrix.","A heap-allocated, row-major, matrix with 5 rows and a …","A stack-allocated, column-major, 6x6 square matrix.","A stack-allocated, column-major, 6x1 matrix.","A stack-allocated, column-major, 6x2 matrix.","A stack-allocated, column-major, 6x3 matrix.","A stack-allocated, column-major, 6x4 matrix.","A stack-allocated, column-major, 6x5 matrix.","A heap-allocated, row-major, matrix with 6 rows and a …","The type of the result of a matrix cross product.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","An owned matrix column-major matrix with <code>D</code> columns.","A matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A mutable matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A column-major matrix slice with <code>R</code> rows and <code>C</code> columns.","A column-major matrix slice with <code>D</code> rows and columns.","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","The type of the result of a matrix sum.","Renamed to <code>VecStorage</code>.","A matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A mutable matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A trait for abstract matrix norms.","The type of the norm.","Trait implemented by entities scan be be normalized and …","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","A point in an euclidean space.","An owned D-dimensional column vector.","A 3D orthographic projection stored as a homogeneous 4x4 …","The reshaped storage type.","","","","","","","","","","","","","The owned data storage that can be allocated from <code>S</code>.","The owned data storage that can be allocated from <code>S</code>.","A sequence of row or column permutations.","A 3D perspective projection stored as a homogeneous 4x4 …","A point with <code>D</code> elements.","A statically sized 1-dimensional column point.","A statically sized 2-dimensional column point.","A statically sized 3-dimensional column point.","A statically sized 4-dimensional column point.","A statically sized 5-dimensional column point.","A statically sized 6-dimensional column point.","An invertible 2D general transformation. Stored as a …","An invertible 3D general transformation. Stored as a …","The QR decomposition of a general matrix.","A quaternion. See the type alias …","The row-stride of the owned data storage for a buffer of …","The static stride of this storage’s rows.","The trait shared by all matrix data storage.","Trait implemented by matrix data storage that can provide …","Trait shared by all reals.","","A reflection wrt. a plane.","A 1-dimensional reflection.","A 2-dimensional reflection.","A 3-dimensional reflection.","A 4-dimensional reflection.","A 5-dimensional reflection.","A 6-dimensional reflection.","The transform category that results from the …","A matrix storage that can be reshaped in-place.","A rotation matrix.","A 2-dimensional rotation matrix.","A 3-dimensional rotation matrix.","A dynamically sized row vector.","An owned D-dimensional row vector.","A statically sized D-dimensional row vector.","A matrix with one row and <code>D</code> columns .","A stack-allocated, 1-dimensional row vector.","A stack-allocated, 2-dimensional row vector.","A stack-allocated, 3-dimensional row vector.","A stack-allocated, 4-dimensional row vector.","A stack-allocated, 5-dimensional row vector.","A stack-allocated, 6-dimensional row vector.","A statically sized column-major matrix with <code>R</code> rows and <code>C</code> …","A column-major matrix slice with dimensions known at …","A column-major matrix slice with dimensions known at …","A column-major matrix view with dimensions known at …","A column-major matrix view with dimensions known at …","Singular Value Decomposition of a general matrix.","A statically sized D-dimensional column vector.","A column vector slice with dimensions known at …","A column vector slice with dimensions known at …","A column vector view with dimensions known at compile-time.","A column vector view with dimensions known at compile-time.","The data storage for the sum of two matrices with …","The basic scalar type for all structures of <code>nalgebra</code>.","A scale which supports non-uniform scaling.","A 1-dimensional scale.","A 2-dimensional scale.","A 3-dimensional scale.","A 4-dimensional scale.","A 5-dimensional scale.","A 6-dimensional scale.","Schur decomposition of a square matrix.","Lane-wise generalization of <code>bool</code> for SIMD booleans.","Type of the result of comparing two SIMD values like <code>self</code>.","Lane-wise generalisation of <code>ComplexField</code> for SIMD complex …","Lane-wise generalization of the standard <code>PartialOrd</code> for …","Lanewise generalization of <code>RealField</code> for SIMD reals.","Type of the coefficients of a complex number.","Base trait for every SIMD types.","A similarity, i.e., an uniform scaling, followed by a …","A 2-dimensional similarity.","A 3-dimensional similarity.","A 2-dimensional similarity using a rotation matrix for its …","A 3-dimensional similarity using a rotation matrix for its …","Type of the range size. May be a type-level integer.","A range with a size that may be known at compile-time.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","A square matrix.","Trait shared by all matrix data storage that don’t …","Trait shared by all mutable matrix data storage that …","Indicates that <code>Self</code> is a more specific <code>Transform</code> category …","Indicates that <code>Self</code> is a more general <code>Transform</code> category …","Eigendecomposition of a symmetric matrix.","Tridiagonalization of a symmetric matrix.","Tag representing an affine <code>Transform</code>. Its bottom-row is …","Trait implemented by phantom types identifying the …","Traits that gives the <code>Transform</code> category that is …","Tag representing the most general (not necessarily …","Tag representing the most general inversible <code>Transform</code> …","","","A transformation matrix in homogeneous coordinates.","A 2D general transformation that may not be invertible. …","A 3D general transformation that may not be inversible. …","A translation.","A 1-dimensional translation.","A 2-dimensional translation.","A 3-dimensional translation.","A 4-dimensional translation.","A 5-dimensional translation.","A 6-dimensional translation.","","","The constant dimension 0 .","","The constant dimension 1.","","The constant dimension 10 .","","The constant dimension 100 .","","The constant dimension 101 .","","The constant dimension 102 .","","The constant dimension 103 .","","The constant dimension 104 .","","The constant dimension 105 .","","The constant dimension 106 .","","The constant dimension 107 .","","The constant dimension 108 .","","The constant dimension 109 .","","The constant dimension 11 .","","The constant dimension 110 .","","The constant dimension 111 .","","The constant dimension 112 .","","The constant dimension 113 .","","The constant dimension 114 .","","The constant dimension 115 .","","The constant dimension 116 .","","The constant dimension 117 .","","The constant dimension 118 .","","The constant dimension 119 .","","The constant dimension 12 .","","The constant dimension 120 .","","The constant dimension 121 .","","The constant dimension 122 .","","The constant dimension 123 .","","The constant dimension 124 .","","The constant dimension 125 .","","The constant dimension 126 .","","The constant dimension 127 .","","The constant dimension 13 .","","The constant dimension 14 .","","The constant dimension 15 .","","The constant dimension 16 .","","The constant dimension 17 .","","The constant dimension 18 .","","The constant dimension 19 .","","The constant dimension 2 .","","The constant dimension 20 .","","The constant dimension 21 .","","The constant dimension 22 .","","The constant dimension 23 .","","The constant dimension 24 .","","The constant dimension 25 .","","The constant dimension 26 .","","The constant dimension 27 .","","The constant dimension 28 .","","The constant dimension 29 .","","The constant dimension 3 .","","The constant dimension 30 .","","The constant dimension 31 .","","The constant dimension 32 .","","The constant dimension 33 .","","The constant dimension 34 .","","The constant dimension 35 .","","The constant dimension 36 .","","The constant dimension 37 .","","The constant dimension 38 .","","The constant dimension 39 .","","The constant dimension 4 .","","The constant dimension 40 .","","The constant dimension 41 .","","The constant dimension 42 .","","The constant dimension 43 .","","The constant dimension 44 .","","The constant dimension 45 .","","The constant dimension 46 .","","The constant dimension 47 .","","The constant dimension 48 .","","The constant dimension 49 .","","The constant dimension 5 .","","The constant dimension 50 .","","The constant dimension 51 .","","The constant dimension 52 .","","The constant dimension 53 .","","The constant dimension 54 .","","The constant dimension 55 .","","The constant dimension 56 .","","The constant dimension 57 .","","The constant dimension 58 .","","The constant dimension 59 .","","The constant dimension 6 .","","The constant dimension 60 .","","The constant dimension 61 .","","The constant dimension 62 .","","The constant dimension 63 .","","The constant dimension 64 .","","The constant dimension 65 .","","The constant dimension 66 .","","The constant dimension 67 .","","The constant dimension 68 .","","The constant dimension 69 .","","The constant dimension 7 .","","The constant dimension 70 .","","The constant dimension 71 .","","The constant dimension 72 .","","The constant dimension 73 .","","The constant dimension 74 .","","The constant dimension 75 .","","The constant dimension 76 .","","The constant dimension 77 .","","The constant dimension 78 .","","The constant dimension 79 .","","The constant dimension 8 .","","The constant dimension 80 .","","The constant dimension 81 .","","The constant dimension 82 .","","The constant dimension 83 .","","The constant dimension 84 .","","The constant dimension 85 .","","The constant dimension 86 .","","The constant dimension 87 .","","The constant dimension 88 .","","The constant dimension 89 .","","The constant dimension 9 .","","The constant dimension 90 .","","The constant dimension 91 .","","The constant dimension 92 .","","The constant dimension 93 .","","The constant dimension 94 .","","The constant dimension 95 .","","The constant dimension 96 .","","The constant dimension 97 .","","The constant dimension 98 .","","The constant dimension 99 .","UDU factorization.","","L-infinite norm aka. Chebytchev norm aka. uniform norm …","An owned matrix with uninitialized data.","An owned matrix with uninitialized data.","A wrapper that ensures the underlying algebraic entity has …","A 2D rotation represented as a complex number with …","A unit dual quaternion. May be used to represent a …","A unit quaternions. May be used to represent a rotation.","A stack-allocated, 1-dimensional unit vector.","A stack-allocated, 2-dimensional unit vector.","A stack-allocated, 3-dimensional unit vector.","A stack-allocated, 4-dimensional unit vector.","A stack-allocated, 5-dimensional unit vector.","A stack-allocated, 6-dimensional unit vector.","A Vec-based matrix data storage. It may be …","A matrix with one column and <code>D</code> rows.","A stack-allocated, 1-dimensional column vector.","A stack-allocated, 2-dimensional column vector.","A stack-allocated, 3-dimensional column vector.","A stack-allocated, 4-dimensional column vector.","A stack-allocated, 5-dimensional column vector.","A stack-allocated, 6-dimensional column vector.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","The type of the result of a matrix sum.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","The column vector with a 1 as its fifth component, and …","The unit column vector with a 1 as its fifth component, …","The absolute value of <code>a</code>.","The absolute value of this complex number: …","","Computes the component-wise absolute value.","","","","","","","","","","","","","","","","","","Computes the principal value of the inverse cosine of <code>self</code>.","Calculates the quaternionic arccosinus.","","Computes the principal value of inverse hyperbolic cosine …","Calculates the hyperbolic quaternionic arccosinus.","Equivalent to <code>self.adjoint() * rhs</code>.","Equivalent to <code>self.adjoint() * rhs</code> but stores the result …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","Computes the solution of the linear system …","Solves the linear system <code>self.adjoint() . x = b</code> where <code>x</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a scalar to <code>self</code>.","Adds a scalar to <code>self</code> in-place.","Equivalent to <code>self + rhs</code> but stores the result into <code>out</code> to …","The adjoint (aka. conjugate-transpose) of <code>self</code>.","Sets <code>self</code> to its adjoint (aka. conjugate-transpose).","Takes the adjoint (aka. conjugate-transpose) of <code>self</code> and …","Are all vector lanes true?","","","","","","","Returns the absolute value of the component with the …","Returns the absolute value of the component with the …","Lane-wise bitwise and of the vector elements.","The smallest angle between two vectors.","The rotation angle in <code>]-pi; pi]</code> of this unit complex …","The rotation angle in [0; pi] of this unit quaternion.","The rotation angle in [0; pi].","The rotation angle.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","The rotation angle needed to make <code>self</code> and <code>other</code> coincide.","Is any vector lane true?","Appends to <code>self</code> a rotation given in the axis-angle form, …","Computes the transformation equal to <code>self</code> followed by a …","Computes in-place the transformation equal to <code>self</code> …","Adds the interchange of the row (or column) <code>i</code> with the row …","Appends to <code>self</code> the given rotation in-place.","Appends to <code>self</code> the given rotation in-place.","Appends in-place to <code>self</code> a rotation centered at the point …","Appends in-place to <code>self</code> a rotation centered at the point …","Appends in-place to <code>self</code> a rotation centered at the point <code>p</code>…","Appends in-place to <code>self</code> a rotation centered at the point <code>p</code>…","Computes the transformation equal to <code>self</code> followed by an …","The similarity transformation that applies a scaling …","Computes in-place the transformation equal to <code>self</code> …","Sets <code>self</code> to the similarity transformation that applies a …","Computes the transformation equal to <code>self</code> followed by a …","Computes the transformation equal to <code>self</code> followed by a …","Appends to <code>self</code> the given translation in-place.","Appends to <code>self</code> the given translation in-place.","Applies a closure <code>f</code> to modify each component of <code>self</code>.","Replaces each component of <code>self</code> by the result of a closure …","Returns <code>self</code> with each of its components replaced by the …","Uses the metric induced by the given <code>norm</code> to compute the …","Uses the given <code>norm</code> to compute the norm of <code>self</code>.","Computes the index and value of the vector component with …","Computes the index and value of the vector component with …","The argument of this complex number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A reference to the underlying homogeneous transformation …","A reference to the underlying homogeneous transformation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable pointer to the start of the matrix.","Converts this array storage to a mutable slice.","Extracts a mutable slice containing the entire matrix …","A mutable slice containing all the components stored in …","Retrieves the mutable data buffer as a contiguous slice.","","","","","Returns a mutable reference to the underlying value. This …","A reference to this transformation seen as a <code>Projective3</code>.","A reference to this transformation seen as a <code>Projective3</code>.","Returns a pointer to the start of the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this array storage to a slice.","Extracts a slice containing the entire matrix entries …","A slice containing all the components stored in this …","Retrieves the data buffer as a contiguous slice.","","","","","","The underlying data storage.","The underlying mutable data storage.","Reinterprets this quaternion as a 4D vector.","Transforms this quaternion into its 4D vector form (Vector …","Returns this matrix as a view.","Returns this matrix as a mutable view.","","Computes the principal value of the inverse sine of <code>self</code>.","Calculates the quaternionic arcsinus.","","Computes the principal value of inverse hyperbolic sine of …","Calculates the hyperbolic quaternionic arcsinus.","Gets the <code>width / height</code> aspect ratio of the view frustum.","","","","Assumes a matrix’s entries to be initialized. This …","","Computes the principal value of the inverse tangent of <code>self</code>…","Calculates the quaternionic arctangent.","","","Computes the principal value of inverse hyperbolic tangent …","Calculates the hyperbolic quaternionic arctangent.","Computes <code>self = a * x * c + b * self</code>.","The reflection axis.","The rotation axis of this unit quaternion or <code>None</code> if the …","The rotation axis. Returns <code>None</code> if the rotation angle is …","The rotation axis and angle in (0, pi] of this unit …","The rotation axis and angle in (0, pi] of this complex …","The rotation axis and angle in (0, pi] of this rotation …","Computes <code>self = a * x + b * self</code>.","The column vector with a 1 as its sixth component, and …","The unit column vector with a 1 as its sixth component, …","[Reexported at the root of this crate.] Data structures …","The start index of the range.","The reflection bias.","Computes the bidiagonalization using householder …","A bit mask representing the boolean state of each lanes of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bottom offset of the view cuboid.","Returns the the 1-norm of the complex component with the …","Returns the the 1-norm of the complex component with the …","Returns a new vector with the same magnitude as <code>self</code> …","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","Cast the components of <code>self</code> to another type.","","","Computes componentwise …","","","The center of two points.","Checks that the given matrix is a valid homogeneous …","","","","Attempts to compute the Cholesky decomposition of this …","Returns a reference to the input value clamped to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones this data storage to one that does not contain any …","Clones this transform into one that owns its data.","","Clones this matrix to one that owns its data.","","","","","Clones this unit quaternion into one that owns its data.","Clones this matrix into one that owns its data. The actual …","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes componentwise …","Computes the QR decomposition (with column pivoting) of …","Returns a view containing the i-th column of this matrix.","Iterate through the columns of this matrix.","Mutably iterates through this matrix columns.","The mean of all the columns of this matrix.","Returns a view containing the i-th column of this matrix.","Returns a view containing the <code>n</code> first elements of the i-th …","Returns a view containing the <code>n</code> first elements of the i-th …","The product of all the columns of this matrix.","The sum of all the columns of this matrix.","The variance of all the columns of this matrix.","Extracts from this matrix a set of consecutive columns.","Extracts from this matrix <code>ncols</code> columns. The number of …","Extracts from this matrix <code>ncols</code> columns. The number of …","Extracts from this matrix <code>ncols</code> columns skipping <code>step</code> …","Extracts from this matrix <code>ncols</code> columns skipping <code>step</code> …","Extracts from this matrix a set of consecutive columns.","View containing all the columns indexed by the range <code>rows</code>.","Mutable view containing all the columns indexed by the …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Extracts from this matrix a set of consecutive columns …","Extracts from this matrix a set of consecutive columns …","The underlying complex number.","Computes the eigenvalues of this matrix.","Computes the complex eigenvalues of the decomposed matrix.","Componentwise matrix or vector division.","Inplace componentwise matrix or vector division.","Inplace componentwise matrix or vector division.","Componentwise matrix or vector multiplication.","Inplace componentwise matrix or vector multiplication.","Inplace componentwise matrix or vector multiplication.","Returns a column vector resulting from the folding of <code>f</code> on …","Returns a row vector where each element is the result of …","Returns a column vector where each element is the result …","Returns the complex conjugate. i.e. <code>re - i im</code>","","","The conjugate of <code>self</code>.","Compute the conjugate of this unit quaternion.","Compute the conjugate of this unit complex number.","Compute the conjugate of this unit quaternion.","The conjugate of this quaternion.","The conjugate of this dual quaternion, containing the …","The conjugate of the complex matrix <code>self</code> computed in-place.","Compute in-place the conjugate of this unit complex number.","Compute the conjugate of this unit quaternion in-place.","Compute the conjugate of this unit quaternion in-place.","Replaces this quaternion by its conjugate.","Replaces this quaternion by its conjugate.","Sets <code>self</code> to its adjoint.","The conjugate transposition of <code>self</code>.","Takes the conjugate and transposes <code>self</code> and store the …","Converts an object from one type to an equivalent or more …","Converts an object from one type to an equivalent or more …","Use with care! Same as <code>try_convert</code> but without any …","Use with care! Same as <code>try_convert</code> but without any …","Returns the convolution of the target vector and a kernel.","Returns the convolution of the target vector and a kernel.","Returns the convolution of the target vector and a kernel.","The coordinates of this point, i.e., the shift from the …","This quaternion as a 4D vector of coordinates in the …","Fills this matrix with the content of another one. Both …","Fills this matrix with the content of a slice. Both must …","","","","","Copies the sign of <code>sign</code> to <code>self</code>.","","Computes the cosine of <code>self</code>.","Calculates the quaternionic cosinus.","The cosine of the rotation angle.","Cardinal cos","","Computes the hyperbolic cosine of <code>self</code>.","Calculates the hyperbolic quaternionic cosinus.","","The 3D cross product between two vectors.","Computes the matrix <code>M</code> such that for all vector <code>v</code> we have …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","The diagonal matrix resulting from the factorization","Returns the diagonal elements as a matrix","The data storage that contains all the matrix components. …omputes the matrix determinant.","Computes the determinant of the decomposed matrix.","Computes the determinant of the decomposed matrix.","Computes the determinant of the decomposed matrix.","Computes the determinant of the decomposed matrix.","The determinant of the matrix corresponding to this …","The diagonal of this matrix.","The diagonal part of this decomposed matrix.","The diagonal components of this decomposition.","","","The value of this dimension.","","The distance between two points.","The squared distance between two pointsonstruct a dynamic matrix directly from data.","The dot product between two vectors or matrices (seen as …","The dot product of two quaternions.","The conjugate-linear dot product between two vectors or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The dual component of the quaternion","The underlying dual quaternion.","Construct a dynamic column vector directly from data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the eigenvalues of this matrix.","Computes the real eigenvalues of the decomposed matrix.","The unsorted eigenvalues of the decomposed matrix.","The eigenvectors of the decomposed matrix.","","","The index immediately after the last index inside of the …","","","","","","","Tests whether <code>self</code> and <code>rhs</code> are exactly equal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the euler angles corresponding to this unit …","Euler angles corresponding to this rotation from a …","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes exponential of this matrix","Compute the exponential of a quaternion.","Compute the exponential of a quaternion.","","","Compute the exponential of a quaternion. Returns the …","","","Extend the number of columns of the <code>Matrix</code> with elements …","Extend the number of rows of a <code>Vector</code> with elements from …","Extends the number of columns of a <code>Matrix</code> with <code>Vector</code>s …","Extends the number of rows of the <code>VecStorage</code> with elements …","Extends the number of columns of the <code>VecStorage</code> with …","Extends the number of columns of the <code>VecStorage</code> with …","Extends the number of columns of the <code>VecStorage</code> with …","Extracts the i-th lane of <code>self</code>.","","","","","","","","","","","","","Extracts the i-th lane of <code>self</code> without bound-checking.","","","","","","","","","","","","","Creates an isometry that corresponds to the local frame of …","Creates an unit quaternion that corresponds to the local …","Creates a rotation that corresponds to the local frame of …","Creates an isometry that corresponds to the local frame of …","Creates an isometry that corresponds to the local frame of …","Creates an similarity that corresponds to a scaling factor …","Creates an similarity that corresponds to a scaling factor …","Sets all the elements of this matrix to <code>val</code>.","Sets all the elements of the selected column to <code>val</code>.","Sets all the diagonal elements of this matrix to <code>val</code>.","Sets all the elements of the lower-triangular part of this …","Copies the upper-triangle of this matrix to its …","Sets all the elements of the selected row to <code>val</code>.","Sets all the elements of the lower-triangular part of this …","Copies the upper-triangle of this matrix to its …","Sets all the elements of this matrix to the value returned …","Fills <code>self</code> with the identity matrix.","Extracts a compile-time number of consecutive columns from …","Extracts a compile-time number of consecutive columns from …","Extracts from this matrix a compile-time number of columns …","Extracts from this matrix a compile-time number of columns …","Resizes this matrix so that it contains <code>R2::value()</code> rows …","Extracts a compile-time number of consecutive rows from …","Extracts a compile-time number of consecutive rows from …","Extracts from this matrix a compile-time number of rows …","Extracts from this matrix a compile-time number of rows …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices this matrix starting at its component …","Slices this matrix starting at its component …","Return a view of this matrix starting at its component …","Return a view of this matrix starting at its component …","Returns a view of this matrix starting at its component …","Returns a view of this matrix starting at its component …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Folds a function <code>f</code> on each entry of <code>self</code>.","Similar to <code>self.iter().fold(init, f)</code> except that <code>init</code> is …","Gets the y field of view of the view frustum.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Builds the unit complex number corresponding to the …","Creates a new statically-allocated matrix from the given …","Builds a 3D homogeneous rotation matrix from an axis and a …","Creates a new quaternion from a unit vector (the rotation …","Builds a 3D rotation matrix from an axis and a rotation …","Builds an unit quaternion from a basis assumed to be …","Builds a rotation from a basis assumed to be orthonormal.","Builds a rotation from a basis assumed to be orthonormal.","Builds a rotation from a basis assumed to be orthonormal.","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Builds a new matrix from its columns.","Creates a new unit complex number from a complex number.","Creates a new unit complex number from a complex number.","Creates a new point with the given coordinates.","Builds the unit complex number from the sinus and cosinus …","Creates a new matrix with the given data.","Creates a new matrix with the given data without …","Creates a square matrix with its diagonal set to <code>diag</code> and …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a matrix filled with its diagonal filled with <code>elt</code> …","Creates a new matrix with its diagonal filled with copies …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix with all its elements set to <code>elem</code>.","Creates a new rotation from Euler angles.","Creates a new unit quaternion from Euler angles.","Creates a new rotation from Euler angles.","","","Creates a matrix or vector filled with the results of a …","Creates a matrix or vector filled with the results of a …","Creates a matrix or vector filled with the results of a …","Creates a matrix or vector filled with the results of a …","Creates a matrix filled with the results of a function …","Creates a new orthographic projection matrix from an …","Constructs a vector from coordinates in projective space, …","Creates a new point from its homogeneous vector …","","","","","","Constructs a pure quaternion.","","Return a unit dual quaternion representing the translation …","Creates a new similarity from its rotational and …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix with all its elements filled by an …","Builds an unit quaternion by extracting the rotation part …","Builds an unit complex by extracting the rotation part of …","Builds a rotation matrix by extracting the rotation part …","Builds a rotation matrix by extracting the rotation part …","Builds an unit quaternion by extracting the rotation part …","Builds an unit complex by extracting the rotation part of …","Builds a rotation matrix by extracting the rotation part …","Builds a rotation matrix by extracting the rotation part …","Creates a new transformation from the given homogeneous …","Creates a new rotation from the given square matrix.","Wraps the given matrix to interpret it as a 3D …","Wraps the given matrix to interpret it as a 3D perspective …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Creates a new matrix that may be rectangular. The first …","Return a dual quaternion representing the translation and …","Creates a new quaternion from its scalar and vector parts. …","Creates a new isometry from its rotational and …","Creates a new similarity from its rotational and …","Creates a new quaternion from its polar decomposition.","Creates a new unit quaternion from a quaternion.","Create a new matrix view without bounds checking and from …","Create a new matrix view without bounds checking and from …","Builds a pure-real complex number from the given value.","","Constructs a real quaternion.","Creates a dual quaternion from only its real part, with no …","Creates a dual quaternion from its rotation and …","Wraps the given reference, assuming it is already …","Creates a dual quaternion from a unit quaternion rotation.","Builds an unit quaternion from a rotation matrix.","Builds the unit complex number from the corresponding 2D …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix or vector with all its elements filled by …","Creates a matrix with all its elements filled by an …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Creates a matrix with its elements filled with the …","Builds a new matrix from its rows.","Builds a 3D homogeneous rotation matrix from an axis and …","Builds a unit complex rotation from an angle in radian …","Creates a new unit quaternion rotation from a rotation …","Builds a 2 dimensional rotation matrix from an angle in …","Builds a 3D rotation matrix from an axis scaled by the …","Creates a new unit quaternion rotation from a rotation …","Creates a new similarity that applies only a scaling …","Builds a pure-real complex number from the given value.","","","","","","","","","","","","Creates a new matrix view from the given data array.","Creates a new mutable matrix view from the given data …","Creates a new matrix view from the given data array.","Creates a new mutable matrix view from the given data …","Creates a new matrix view from the given data array.","Creates a new matrix view from the given data array.","Creates a new mutable matrix view from the given data …","Creates a new mutable matrix view from the given data …","Creates a new point from a slice.","Creates a mutable matrix view from an array and with …","Creates a matrix view from an array and with dimensions …","Creates, without bound-checking, a matrix view from an …","Creates, without bound-checking, a mutable matrix view …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new matrix view from …","Creates, without bound checking, a new mutable matrix view …","Creates a new matrix view with the specified strides from …","Creates a new matrix view with the specified strides from …","Creates a new matrix view with the specified strides from …","Creates a new matrix view with the specified strides from …","Creates a matrix view from an array and with dimensions …","Creates a mutable matrix view from an array and with …","Creates, without bounds checking, a matrix view from an …","Creates, without bound-checking, a mutable matrix view …","Creates a new mutable matrix view with the specified …","Creates a new mutable matrix view with the specified …","Creates a new mutable matrix view with the specified …","Creates a new mutable matrix view with the specified …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new mutable matrix view …","Creates, without bound checking, a new matrix view with …","Creates, without bound checking, a new mutable matrix view …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds an instance of <code>Self</code> from a run-time value. Panics …","","","","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a matrix backed by a given <code>Vec</code>.","Creates a new heap-allocated matrix from the given …","Creates a new heap-allocated matrix from the given …","Creates a new heap-allocated matrix from the given …","Creates a quaternion from a 4D vector. The quaternion …","Creates a new translation from the given vector.","","","","","","","","","","","","","","","","","","","","","","","","","Computes the LU decomposition with full pivoting of <code>matrix</code>.","","","Computes <code>self = alpha * a * b + beta * self</code>, where …","Computes <code>self = alpha * a.adjoint() * b + beta * self</code>, …","Computes <code>self = alpha * a.transpose() * b + beta * self</code>, …","Computes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is a …","Computes <code>self = alpha * a.adjoint() * x + beta * self</code>, …","Computes <code>self = alpha * a.transpose() * x + beta * self</code>, …","Creates a slice that may or may not have a fixed size and …","Creates a slice that may or may not have a fixed size and …","Creates a slice that may or may not have a fixed size and …","Creates a slice that may or may not have a fixed size and …","Creates a matrix view that may or may not have a fixed …","Creates a matrix view that may or may not have a fixed …","Creates a matrix view that may or may not have a fixed …","Creates a matrix view that may or may not have a fixed …","[Reexported at the root of this crate.] Data structures …","Computes <code>self = alpha * x * y.transpose() + beta * self</code>.","Computes <code>self = alpha * x * y.transpose() + beta * self</code>, …","Computes <code>self = alpha * x * y.adjoint() + beta * self</code>.","Produces a view of the data at the given index, or <code>None</code> if …","","Gets the address of the i-th matrix component without …","Gets the address of the i-th matrix component without …","Gets the mutable address of the i-th matrix component …","Gets the mutable address of the i-th matrix component …","","","","","","","","","","","","","","","","Produces a mutable view of the data at the given index, or …","Retrieves a reference to the i-th element without …","Produces a view of the data at the given index, without …","Gets a reference to i-th element of this point without …","Retrieves a reference to the i-th element without …","Retrieves a mutable reference to the i-th element without …","Retrieves a mutable reference to the element at …","Returns a mutable view of the data at the given index, …","Gets a mutable reference to i-th element of this point …","","","Retrieves the upper trapezoidal submatrix <code>H</code> of this …","Divides quaternion into two.","Indicates whether a <code>Transform</code> with the category <code>Self</code> has a …","","","","","","","","","","","","","","","","","","Computes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is an …","Computes <code>self = alpha * x * y.adjoint() + beta * self</code>, …","The hermitian part of <code>self</code>, i.e., …","Computes the Hessenberg decomposition of this matrix using …","Computes (self.conjugate() * self + other.conjugate() * …","","Returns imaginary unit","Computes the index of the vector component with the …","Computes the index of the matrix component with the …","Computes the index of the vector component with the …","Computes the index of the vector component with the …","Computes the index of the matrix component with the …","The rotation identity.","Creates a new identity transform.","Creates an identity matrix. If the matrix is not square, …","Creates an identity matrix. If the matrix is not square, …","Creates an identity matrix. If the matrix is not square, …","Creates an identity matrix. If the matrix is not square, …","The unit dual quaternion multiplicative identity, which …","The rotation identity.","","The unit complex number multiplicative identity.","","","Creates a new square identity rotation of the given …","The quaternion multiplicative identity.","The dual quaternion multiplicative identity.","Creates a new identity translation.","Creates a new identity scale.","Creates a new identity isometry.","Creates a new identity similarity.","Creates a new statically-allocated sequence of <code>D</code> identity …","Creates a new dynamically-allocated sequence of <code>n</code> identity …","Creates a new identity matrix.","Creates a new sequence of D identity permutations.","Merges the value of <code>if_value()</code> and <code>else_value()</code> depending …","Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and …","Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and …","Imaginary portion of the complex number","The imaginary part of this quaternion.","The imaginary part of this complex number.","","Computes the index of the vector component with the …","Computes the index of the vector component with the …","","Produces a view of the data at the given index, or panics …","","","","","","","","","","Produces a mutable view of the data at the given index, or …","","","","Returns the infimum of <code>a</code> and <code>b</code>.","Computes the infimum (aka. componentwise min) of two …","Computes the infimum (aka. componentwise min) of two …","Returns simultaneously the infimum and supremum of <code>a</code> and <code>b</code>.","Computes the (infimum, supremum) of two matrices/vectors.","Computes the (infimum, supremum) of two points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the inner product (also known as the dot …","Inserts a column filled with <code>val</code> at the <code>i-th</code> position.","Updates the decomposition such that we get the …","Inserts <code>n</code> columns filled with <code>val</code> starting at the <code>i-th</code> …","Inserts <code>ninsert.value()</code> columns starting at the <code>i-th</code> place …","Inserts <code>D</code> columns filled with <code>val</code> starting at the <code>i-th</code> …","Inserts <code>D::dim()</code> rows filled with <code>val</code> starting at the <code>i-th</code> …","Inserts a row filled with <code>val</code> at the <code>i-th</code> position.","Inserts <code>n</code> rows filled with <code>val</code> starting at the <code>i-th</code> …","Inserts <code>ninsert.value()</code> rows at the <code>i-th</code> place of this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the underlying matrix.","Retrieves the underlying value.","Unwraps the underlying matrix.","Retrieves the underlying homogeneous matrix.","Retrieves the underlying homogeneous matrix.","","","Builds a matrix data storage that does not contain any …","","Moves this matrix into one that owns its data.","","","","","Moves this unit quaternion into one that owns its data.","Moves this matrix into one that owns its data. The actual …","Extracts the original slice from this storage.","Extracts the original slice from this storage.","Extracts the original slice from this storage","","Returns <code>1/self</code>","","Computes <code>self.inverse() * rhs</code> in a more efficient way.","Applies this sequence of permutations in reverse to the …","Applies this sequence of permutations in reverse to the …","The rotation inverse.","Inverts this transformation. Use <code>.try_inverse</code> if this …","Inverts this quaternion if it is not zero.","","Inverts this complex number if it is not zero.","Inverts this dual quaternion if it is not zero.","","","Inverts <code>self</code>.","Inverts <code>self</code>.","Inverts <code>self</code>.","Inverts <code>self</code>.","Retrieves the inverse of the underlying homogeneous matrix.","Retrieves the inverse of the underlying homogeneous matrix.","Computes the inverse of the decomposed matrix.","Change <code>self</code> to its inverse.","Inverts this transformation in-place. Use <code>.try_inverse_mut</code> …","Inverts this dual quaternion in place if it is not zero.","Inverts this quaternion if it is not zero.","","Inverts in-place this unit complex number.","","Inverts <code>self</code> in-place.","","Inverts <code>self</code> in-place.","Inverts <code>self</code> in-place.","Inverts <code>self</code> in-place.","Apply the inverse rotation to the given point.","Transform the given point by the inverse of this …","","Rotate and translate a point by the inverse of this unit …","Rotate a point by the inverse of this unit quaternion. …","","Rotate the given point by the inverse of this unit complex …","","Rotate the given point by the inverse of this rotation. …","Translate the given point by the inverse of this …","Transform the given point by the inverse of this isometry. …","Transform the given point by the inverse of this …","Apply the inverse rotation to the given unit vector.","Rotate a vector by the inverse of this unit quaternion. …","Rotate a unit vector by the inverse of this unit …","Rotate the given vector by the inverse of this unit …","Rotate the given vector by the inverse of this rotation. …","","Transform the given unit vector by the inverse of this …","Apply the inverse rotation to the given vector.","Transform the given vector by the inverse of this …","","Rotate the given vector by the inverse of this unit …","Rotate a vector by the inverse of this unit quaternion, …","Rotate a vector by the inverse of this unit quaternion. …","","Rotate the given vector by the inverse of this rotation. …","","Transform the given vector by the inverse of this …","Transform the given vector by the inverse of this …","Inverts <code>self</code>.","","Indicates whether this data buffer stores its elements …","","","","","","Indicates if <code>try_convert</code> will succeed without actually …","Returns true if the matrix contains no elements.","Returns true if the underlying vector contains no elements.","Returns true if the point contains no elements.","Returns true if the permutation sequence contains no …","","Checks if the given complex number is finite","","Indicated if this is the identity matrix within a relative …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the given complex number is infinite","Returns <code>true</code> if this matrix is invertible.","Indicates if the decomposed matrix is invertible.","Indicates if the decomposed matrix is invertible.","Indicates if the decomposed matrix is invertible.","Indicates if the decomposed matrix is invertible.","Checks if the given complex number is NaN","Checks if the given complex number is normal","","Checks that <code>Mᵀ × M = Id</code>.","Check if the quaternion is pure.","Is the sign of this real number negative?","Is the sign of this real number positive?","Checks that this matrix is orthogonal and has a …","Indicates if this is a square matrix.","Indicates whether this decomposition contains an …","","","","","The part of this similarity that does not include the …","The unit dual quaternion needed to make <code>self</code> and <code>other</code> …","Iterates through this matrix coordinates in column-major …","Iterates through this point coordinates.","Mutably iterates through this matrix coordinates.","Mutably iterates through this point coordinates.","The column vector with <code>val</code> as its i-th component.","The column unit vector with <code>T::one()</code> as its i-th component.","The kronecker product of two matrices (aka. tensor product …","Retrieves the lower-triangular factor of the Cholesky …","The lower triangular matrix of this decomposition.","The lower triangular matrix of this decomposition.","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Retrieves the lower-triangular factor of the Cholesky …","The lower triangular matrix of this decomposition.","The number of lanes of this SIMD value.","","","","","","","","","","","","","","","The left offset of the view cuboid.","Left quaternionic division.","","The total number of elements of this matrix.","The number of elements on the underlying vector.","The dimension of this point.","The number of non-identity permutations applied by this …","Returns <code>self * (1.0 - t) + rhs * t</code>, i.e., the linear blend …","Linear interpolation between two unit dual quaternions.","Linear interpolation between two unit quaternions.","Linear interpolation between two quaternion.","Linear interpolation between two dual quaternions.","Interpolates between two isometries using a linear …","Interpolates between two isometries using a linear …","Interpolates between two isometries using a linear …","Interpolates between two isometries using a linear …","[Reexported at the root of this crate.] Factorization of …","Compute the index corresponding to the irow-th row and …","","Computes the principal value of natural logarithm of <code>self</code>.","Compute the natural logarithm of a quaternion.","Compute the natural logarithm of a quaternion.","","","","","Computes the natural logarithm of determinant of the …","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","","","","","","","Builds a left-handed look-at view matrix.","Builds a left-handed look-at view matrix without …","Builds a left-handed look-at view matrix without …","Builds a left-handed look-at view matrix.","Builds a left-handed look-at view matrix.","Builds a left-handed look-at view matrix including a …","Builds a left-handed look-at view matrix including a …","Builds a right-handed look-at view matrix.","Builds a right-handed look-at view matrix without …","Builds a right-handed look-at view matrix without …","Builds a right-handed look-at view matrix.","Builds a right-handed look-at view matrix.","Builds a right-handed look-at view matrix including …","Builds a right-handed look-at view matrix including …","Extracts the lower triangular part of this matrix …","The Lp norm of this matrix.","","","Computes the LU decomposition with partial (row) pivoting …","A synonym for the norm of this matrix.","A synonym for the norm of this quaternion.","A synonym for the squared norm of this matrix.","A synonym for the squared norm of this quaternion.","Returns a matrix containing the result of <code>f</code> applied to …","Returns a point containing the result of <code>f</code> applied to each …","Apply the given function to this matrix’s diagonal and …","Applies a function to each lane of <code>self</code>.","Returns a matrix containing the result of <code>f</code> applied to …","A reference to the underlying matrix.","A reference to the underlying matrix representation of …","Construct a fixed-size matrix directly from data.","A mutable reference to underlying matrix. Use …","A mutable reference to the underlying matrix …","A mutable reference to the underlying matrix.","A mutable reference to the underlying matrix …","Same as <code>cmp::max</code>.","","","","","","","","Returns the component with the largest value.","The largest finite positive value representable using this …","","","","","The mean of all the elements of this matrix.","Create the mean unit quaternion from a data structure …","Use the metric induced by this norm to compute the metric …","Compute the distance between <code>self</code> and <code>rhs</code> using the metric …","","","","Same as <code>cmp::min</code>.","","","","","","","","Returns the component with the smallest value.","The smallest finite positive value representable using …","","","","","The modulus of this complex number.","","The squared modulus of this complex numberquivalent to <code>self * rhs</code> but stores the result into <code>out</code> to …","The name of this dimension, i.e., the singleton <code>Self</code>.","","The number of columns of this matrix.","","","","","","","","","","","","","","","Negates <code>self</code> in-place.","Create a new Complex","Creates a new reflection wrt. the plane orthogonal to the …","A dynamic size equal to <code>value</code>.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Initializes this matrix from its components.","Creates a new unit quaternion rotation from a rotation …","Builds the unit complex number corresponding to the …","Creates a new dynamic matrix data storage from the given …","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Initializes this point from its components.","Builds a 2 dimensional rotation matrix from an angle in …","Builds a 3 dimensional rotation matrix from an axis and an …","Creates a new quaternion from its individual components. …","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this translation from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Initializes this Scale from its components.","Creates a new 2D isometry from a translation and a …","Creates a new 2D isometry from a translation and a …","Creates a new isometry from a translation and a rotation …","Creates a new isometry from a translation and a rotation …","Creates a new similarity from a translation, a rotation, …","Creates a new similarity from a translation, rotation …","Creates a new similarity from a translation, rotation …","Creates a new similarity from a translation and a rotation …","Creates a new orthographic projection matrix.","Creates a new perspective matrix from the aspect ratio, y …","Computes the Bidiagonal decomposition using householder …","Attempts to compute the Cholesky decomposition of <code>matrix</code>.","Computes the <code>ColPivQR</code> decomposition using householder …","Computes the LU decomposition with full pivoting of <code>matrix</code>.","Computes the Hessenberg decomposition using householder …","Computes the LU decomposition with partial (row) pivoting …","Computes the QR decomposition using householder …","Computes the Schur decomposition of a square matrix.","Computes the Singular Value Decomposition of <code>matrix</code> using …","Computes the eigendecomposition of the given symmetric …","Computes the tridiagonalization of the symmetric matrix <code>m</code>.","Computes the UDU^T factorization.","Normalize the given vector and return it wrapped on a <code>Unit</code> …","Creates a new reflection wrt. the plane orthogonal to the …","Creates a new unit quaternion rotation from a rotation …","Creates a new homogeneous matrix that applies a distinct …","Creates a new homogeneous matrix that applies a scaling …","Creates a new homogeneous matrix that applies a scaling …","Normalize the given vector and return it wrapped on a <code>Unit</code> …","Deprecated: Use <code>Matrix4::face_towards</code> instead.","Deprecated: Use <code>Isometry::face_towards</code> instead.","Deprecated: Use <code>Isometry::face_towards</code> instead.","Deprecated: Use <code>UnitQuaternion::face_towards</code> instead.","Deprecated: Use <code>Rotation3::face_towards</code> instead.","Deprecated: Use <code>SimilarityMatrix3::face_towards</code> instead.","Deprecated: Use <code>SimilarityMatrix3::face_towards</code> instead.","Creates a new homogeneous matrix for an orthographic …","Creates a new homogeneous matrix for a perspective …","Builds a 3D homogeneous rotation matrix from an axis and …","Builds a 2 dimensional homogeneous rotation matrix from an …","Builds a 3D homogeneous rotation matrix from an axis and …","Creates a new homogeneous matrix that applies the same …","Creates a new homogeneous matrix that applies a pure …","Create a new matrix view without bounds checking.","Create a new matrix view without bounds checking.","Wraps the given value, assuming it is already normalized.","Computes the Cholesky decomposition of <code>matrix</code> without …","Computes the Singular Value Decomposition of <code>matrix</code> using …","Create a new matrix view without bounds checking.","Create a new matrix view without bounds checking.","Attempts to approximate the Cholesky decomposition of …","Computes the Hessenberg decomposition using householder …","Normalized linear interpolation between two unit …","Normalized linear interpolation between two unit …","Are all vector lanes false?","Apply this norm to the given matrix.","Computes the norm.","","","The L2 norm of this matrix.","","","","The norm of this quaternion.","","","The sum of the absolute value of this complex number’s …","","Returns the square of the norm (since <code>T</code> doesn’t …","Computes the squared norm.","","The squared L2 norm of this vector.","","The squared norm of this quaternion.","","","Returns a normalized version of this matrix.","Normalizes this quaternion.","Normalizes this quaternion.","Normalizes this matrix in-place and returns its norm.","Normalizes this quaternion.","Normalizes this quaternion.","","The number of rows of this matrix.","The off-diagonal part of this decomposed matrix.","The off-diagonal components of this decomposition.","Gets the multiplicative identity element.","","","Creates a new identity transform.","","","","","","","","","","","","","","","","","","Creates a new identity isometry.","","Creates a new identity similarity.","","Lane-wise bitwise or of the vector elements.","Creates a new point with all coordinates equal to zero.","","","Applies the given closure to each element of the …","","","Orthonormalizes the given family of vectors. The largest …","Calculates the outer product (also known as the wedge …","Retrieves the column permutation of this decomposition.","The row permutations of this decomposition.","The row permutations of this decomposition.","Uses the given matrix as-is without any checks or …","Clamp <code>value</code> between <code>min</code> and <code>max</code>. Returns <code>None</code> if <code>value</code> is …","Compare <code>a</code> and <code>b</code> using a partial ordering relation.","","","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt;= b</code>.","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &gt; b</code>.","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt;= b</code>.","Returns <code>true</code> iff <code>a</code> and <code>b</code> are comparable and <code>a &lt; b</code>.","Return the maximum of <code>a</code> and <code>b</code> if they are comparable.","Return the minimum of <code>a</code> and <code>b</code> if they are comparable.","Sorts two values in increasing order using a partial …","Applies this sequence of permutations to the columns of <code>rhs</code>…","Applies this sequence of permutations to the rows of <code>rhs</code>.","The perpendicular product between two 2D column vectors, …","","Construct a fixed-size point directly from data.","Computes the Polar Decomposition of  a <code>matrix</code> (indirectly …","The polar decomposition of this quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","Raise this matrix to an integral power <code>exp</code>.","Raises this matrix to an integral power <code>exp</code> in-place.","","Raises <code>self</code> to a complex power.","","Raises <code>self</code> to a floating point power.","Raise this unit complex number to a given floating power.","Raise the quaternion to a given floating power.","Raise the rotation to a given floating power, i.e., …","Raise the rotation to a given floating power, i.e., …","Raise the quaternion to a given floating power.","","Raises <code>self</code> to a signed integer power.","","Raises <code>self</code> to an unsigned integer power.","Computes the transformation equal to a non-uniform scaling …","Computes in-place the transformation equal to a …","Computes the transformation equal to an uniform scaling …","The similarity transformation that applies a scaling …","Computes in-place the transformation equal to an uniform …","Sets <code>self</code> to the similarity transformation that applies a …","Computes the transformation equal to a translation …","Computes the transformation equal to a translation …","","","The product of all the elements of this matrix.","","","Calculates the projection of <code>self</code> onto <code>other</code> (also known …","Projects a point. Faster than matrix multiplication.","Projects a point. Faster than matrix multiplication.","Projects a vector. Faster than matrix multiplication.","Projects a vector. Faster than matrix multiplication.","Computes the pseudo-inverse of this matrix.","Inverts <code>self</code>.","Computes the pseudo-inverse of the decomposed matrix.","The matrix data pointer.","","","","","","The matrix mutable data pointer.","","","","","Convert quaternion to pure quaternion.","Constructs a new vector of higher dimension by appending …","Computes the orthogonal matrix <code>Q</code> of this decomposition.","The column permutations of this decomposition.","Computes the orthogonal matrix <code>Q</code> of this decomposition.","Computes the orthogonal matrix <code>Q</code> of this decomposition.","Computes the orthogonal matrix <code>Q</code> of this decomposition.","Multiplies the provided matrix by the transpose of the <code>Q</code> …","Multiplies the provided matrix by the transpose of the <code>Q</code> …","Computes the QR decomposition of this matrix.","Computes the quadratic form …","Computes the quadratic form …","Computes the quadratic form …","Computes the quadratic form …","The underlying quaternion.","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Computes the rank of this matrix.","Computes the rank of the decomposed matrix, i.e., the …","Given the Cholesky decomposition of a matrix <code>M</code>, a scalar …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Real portion of the complex number","The real part of this complex number.","","The real component of the quaternion","","","","","","","","","","Rebuild the original matrix.","Rebuild the original matrix.","Recomputes the original symmetric matrix.","Applies the reflection to the columns of <code>rhs</code>.","Applies the reflection to the rows of <code>lhs</code>.","Applies the reflection to the rows of <code>lhs</code>.","Applies the reflection to the columns of <code>rhs</code>.","Calculates the rejection of <code>self</code> from <code>other</code> (also known as …","","Tests whether <code>self</code> and <code>rhs</code> are equal up to a given epsilon.","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the <code>i</code>-th column from this matrix.","Updates the decomposition such that we get the …","Removes <code>n</code> consecutive columns from this matrix, starting …","Removes all columns in <code>indices</code>   ","Removes <code>nremove.value()</code> columns from this matrix, starting …","Removes <code>D::dim()</code> consecutive columns from this matrix, …","Removes <code>D::dim()</code> consecutive rows from this matrix, …","Removes the <code>i</code>-th row from this matrix.","Removes <code>n</code> consecutive rows from this matrix, starting with …","Removes all rows in <code>indices</code>   ","Removes <code>nremove.value()</code> rows from this matrix, starting …","Normalizes this vector again. This is useful when repeated …","Ensure this rotation is an orthonormal rotation matrix. …","Ensure this rotation is an orthonormal rotation matrix. …","Normalizes this vector again using a first-order Taylor …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix or vector with all its elements set to …","Creates a matrix with all its elements set to <code>elem</code>.","Replaces the i-th lane of <code>self</code> by <code>val</code>.","","","","","","","","","","","","","Replaces the i-th lane of <code>self</code> by <code>val</code> without …","","","","","","","","","","","","","Reshapes the storage into the output storage type.","","Reshapes <code>self</code> such that it has dimensions …","","","","","","","Resizes this matrix so that it contains <code>new_nrows</code> rows and …","Resizes the underlying mutable data storage and unwraps it.","Resizes <code>self</code> such that it has dimensions …","Resizes this matrix horizontally, i.e., so that it …","Changes the number of column of this matrix in-place.","Resizes this matrix in-place.","Resizes this matrix vertically, i.e., so that it contains …","Changes the number of rows of this matrix in-place.","The right offset of the view cuboid.","Right quaternionic division.","Return the rotation part of this unit dual quaternion.","Creates a new isometry from the given rotation angle.","Creates a new isometry from the given rotation angle.","Creates a new isometry from the given rotation angle.","Creates a new isometry from the given rotation angle.","The pure rotational part of this isometry.","The unit complex needed to make <code>a</code> and <code>b</code> be collinear and …","The unit quaternion needed to make <code>a</code> and <code>b</code> be collinear …","The rotation matrix required to align <code>a</code> and <code>b</code> but with its …","The rotation matrix required to align <code>a</code> and <code>b</code> but with its …","The unit quaternion needed to make <code>a</code> and <code>b</code> be collinear …","The unit complex needed to make <code>a</code> and <code>b</code> be collinear and …","The unit quaternion needed to make <code>self</code> and <code>other</code> coincide.","The unit complex number needed to make <code>self</code> and <code>other</code> …","The rotation matrix needed to make <code>self</code> and <code>other</code> coincide.","The rotation matrix needed to make <code>self</code> and <code>other</code> coincide.","The isometry that applies the rotation <code>r</code> with its axis …","The similarity that applies the scaling factor <code>scaling</code>, …","","","Returns a view containing the i-th row of this matrix.","Iterate through the rows of this matrix.","Mutably iterates through this matrix rows.","The mean of all the rows of this matrix.","The mean of all the rows of this matrix. The result is …","Returns a view containing the i-th row of this matrix.","Returns a view containing the <code>n</code> first elements of the i-th …","Returns a view containing the <code>n</code> first elements of the i-th …","The product of all the rows of this matrix.","The product of all the rows of this matrix. The result is …","The sum of all the rows of this matrix.","The sum of all the rows of this matrix. The result is …","The variance of all the rows of this matrix.","The variance of all the rows of this matrix. The result is …","Extracts from this matrix a set of consecutive rows.","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix <code>nrows</code> rows regularly skipping …","Extracts from this matrix a set of consecutive rows.","View containing all the rows indexed by the range <code>rows</code>.","Mutable view containing all the rows indexed by the range …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Splits this <code>NxM</code> matrix into two parts delimited by two …","Extracts from this matrix a set of consecutive rows …","Extracts from this matrix a set of consecutive rows …","The scalar part <code>w</code> of this quaternion.","Multiplies this complex number by <code>factor</code>.","Multiplies <code>self</code> by the scalar <code>t</code>.","","Multiplies each component of the complex matrix <code>self</code> by …","Multiply <code>self</code> by n.","","Multiplies each component of the complex matrix <code>self</code> by …","","","","The rotation angle returned as a 1-dimensional vector.","The rotation axis of this unit quaternion multiplied by …","The rotation angle returned as a 1-dimensional vector.","The rotation axis multiplied by the rotation angle.","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and …","The scaling factor of this similarity transformation.","Computes the Schur decomposition of a square matrix.","Screw linear interpolation between two unit quaternions. …","Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>.","","","","","","","","","","","","","Creates a new matrix by extracting the given set of …","Creates a new matrix by extracting the given set of rows …","","Updates this perspective matrix with a new <code>width / height</code> …","Sets the bottom offset of the view cuboid.","Sets the view cuboid offsets along the <code>y</code> axis.","Sets the category of this transform.","Fills the selected column of this matrix with the content …","Fills the diagonal of this matrix with the content of the …","Updates this perspective with a new y field of view of the …","Sets the left offset of the view cuboid.","Sets the view cuboid offsets along the <code>x</code> axis.","Sets the magnitude of this vector.","","Fills the diagonal of this matrix with the content of the …","Sets the right offset of the view cuboid.","Fills the selected row of this matrix with the content of …","The scaling factor of this similarity transformation.","Sets the top offset of the view cuboid.","","Sets the far plane offset of the view cuboid.","Updates this perspective matrix with a new far plane …","Sets the near plane offset of the view cuboid.","Updates this perspective matrix with a new near plane …","Sets the near and far plane offsets of the view cuboid.","Updates this perspective matrix with new near and far …","The dimension of the matrix at run-time. Arr length of …","","The shape of this matrix returned as the tuple (number of …","","","","","The shape of this matrix wrapped into their representative …","The exponential part of this complex number: …","The absolute value of this complex number: …","","","","","","","","","","","","","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","Computes the principal value of the inverse cosine of <code>self</code>.","","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","","Computes the principal value of inverse hyperbolic cosine …","Computes the principal value of inverse hyperbolic cosine …","The argument of this complex number.","","","","","","","","","","","","","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","Computes the principal value of the inverse sine of <code>self</code>.","","","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","","Computes the principal value of inverse hyperbolic sine of …","Computes the principal value of inverse hyperbolic sine of …","","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the principal value of the inverse tangent of <code>self</code>…","","","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Computes the principal value of inverse hyperbolic tangent …","Returns a new vector with the same magnitude as <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","Clamps each lane of <code>self</code> between the corresponding lane of …","","","","","","","","","","","","","","","Copies the sign of <code>sign</code> to <code>self</code>.","","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","","Computes the cosine of <code>self</code>.","Computes the cosine of <code>self</code>.","","Cardinal cos","","Computes the hyperbolic cosine of <code>self</code>.","","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","Computes the hyperbolic cosine of <code>self</code>.","","","","","Lanewise <em>equal</em> <code>==</code> comparison.","","","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lanewise <em>greater or equal</em> <code>&gt;=</code> comparison.","","","Lanewise <em>greater than</em> <code>&gt;</code> comparison.","","","The max value among all lanes of <code>self</code>.","","","The min value among all lanes of <code>self</code>.","","","Computes the product of all the lanes of <code>self</code>.","","","","","","","","","","","","Computes the sum of all the lanes of <code>self</code>.","","","","","","","","","","","","Computes (self.conjugate() * self + other.conjugate() * …","","","","","","","","","","","","The imaginary part of this complex number.","","","","","","","","","","","","Lanewise <em>less or equal</em> <code>&lt;=</code> comparison.","","","","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","Computes the principal value of natural logarithm of <code>self</code>.","","","","","","","","","","","","","","","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the logarithm of <code>self</code> with respect to an arbitrary …","","","","","","","","","","","","","","","","","","","","","","","","","","","Lanewise <em>less than</em> <code>&lt;</code> comparison.","","","Lanewise max value.","","","Lanewise min value.","","","The modulus of this complex number.","","","","","","","","","","","","The squared modulus of this complex number.","","","","","","","","","","","","","","","","","","","","","","","","Lanewise <em>not equal</em> <code>!=</code> comparison.","","","The sum of the absolute value of this complex number’s …","","","","","","","","","","","","","","","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a floating point power.","","","","","","","","","","","","","The real part of this complex number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies this complex number by <code>factor</code>.","","","","","","","","","","","","","The exponential part of this complex number: …","","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","Computes the sine of <code>self</code>.","","","","","","","","","","","","","","Cardinal sine","","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","Computes the hyperbolic sine of <code>self</code>.","","","","","","","","","","","","","","","","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","Computes the principal value of the square root of <code>self</code>.","","","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","Computes the tangent of <code>self</code>.","","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","","Computes the hyperbolic tangent of <code>self</code>.","Computes the hyperbolic tangent of <code>self</code>.","","The exponential form of this complex number: (modulus, …","","The polar form of this complex number: (modulus, arg)","","","","","","","","","","","","","Attempt to inverse this quaternion.","Attempts to normalize <code>self</code>.","Normalizes this matrix in-place and return its norm.","","Divides this complex number by <code>factor</code>.","","","","","","","","","","","","","Computes the sine of <code>self</code>.","Calculates the quaternionic sinus.","The sine of the rotation angle.","","","Cardinal sine","Computes the singular values of this matrix. The singular …","The singular values of this SVD.","Computes the singular values of this matrix. The singular …","","Computes the hyperbolic sine of <code>self</code>.","Calculates the hyperbolic quaternionic sinus.","","","","The number of elements of the range, i.e., …","Computes the spherical linear interpolation between two …","Spherical linear interpolation between two unit …","Computes the spherical linear interpolation between two …","Spherical linear interpolation between two rotations …","Spherical linear interpolation between two rotation …","Spherical linear interpolation between two rotation …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices this matrix starting at its component <code>(irow, icol)</code> …","Slices a sub-matrix containing the rows indexed by the …","Slices a mutable sub-matrix containing the rows indexed by …","Slices this matrix starting at its component …","Slices this matrix starting at its component …","Returns the solution of the system <code>self * x = b</code> where <code>self</code> …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the system <code>self * x = b</code> where <code>self</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Solves the system <code>self * x = b</code> where <code>self</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Solves the linear system <code>self * x = b</code>, where <code>x</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Computes the solution of the linear system <code>self . x = b</code> …","Solves the linear system <code>self . x = b</code> where <code>x</code> is the …","Sort the estimated components of the SVD by its singular …","Initializes an SIMD value with each lanes set to <code>val</code>.","","","","","","","","","","","","","","Computes the principal value of the square root of <code>self</code>.","Calculates square root.","Calculates square of a quaternion.","The stride of this point. This is the number of buffer …","The spacing between consecutive row elements and …","","The strides (row stride, column stride) of this matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent to <code>self + rhs</code> but stores the result into <code>out</code> to …","","","Example","The sum of all the elements of this matrix.","","Example","","Returns the supremum of <code>a</code> and <code>b</code>.","Computes the supremum (aka. componentwise max) of two …","Computes the supremum (aka. componentwise max) of two …","Computes the Singular Value Decomposition using implicit …","Computes the Singular Value Decomposition using implicit …","Swaps two entries.","Swaps two columns in-place.","Swaps two rows in-place.","Swaps two elements without bound-checking.","Swaps two entries without bound-checking.","Swaps two entries without bound-checking.","Swaps two elements using their linear index without …","Computes <code>self = alpha * a * x + beta * self</code>, where <code>a</code> is a …","Computes <code>self = alpha * x * y.transpose() + beta * self</code>, …","Computes the eigendecomposition of this symmetric matrix.","Computes the eigenvalues of this symmetric matrix.","The symmetric part of <code>self</code>, i.e., …","Computes the tridiagonalization of this symmetric matrix.","","Computes the tangent of <code>self</code>.","Calculates the quaternionic tangent.","","Computes the hyperbolic tangent of <code>self</code>.","Calculates the hyperbolic quaternionic tangent.","Converts this unit quaternion into its equivalent Euler …","Creates Euler angles from a rotation.","The exponential form of this complex number: (modulus, …","","","Converts this transform into its equivalent homogeneous …","Computes the coordinates in projective space of this …","Yields the homogeneous matrix for this matrix, i.e., …","Converts this unit complex number into its equivalent …","Converts this unit dual quaternion interpreted as an …","Converts this unit quaternion into its equivalent …","Converts this point into a vector in homogeneous …","Converts this rotation into its equivalent homogeneous …","Converts this translation into its equivalent homogeneous …","Converts this Scale into its equivalent homogeneous …","Converts this isometry into its equivalent homogeneous …","Converts this similarity into its equivalent homogeneous …","Computes the corresponding homogeneous matrix.","Computes the corresponding homogeneous matrix.","","","","","","","Builds an isometry from this unit dual quaternion.","Converts this isometry into its equivalent homogeneous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The polar form of this complex number: (modulus, arg)","converts SVD results to Polar decomposition form of the …","This transformation seen as a <code>Projective3</code>.","This transformation seen as a <code>Projective3</code>.","Builds the rotation matrix corresponding to this unit …","Builds a rotation matrix from this unit quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The top offset of the view cuboid.","Fills this matrix with the content of the transpose …","The dot product between the transpose of <code>self</code> and <code>rhs</code>.","Equivalent to <code>self.transpose() * rhs</code>.","Equivalent to <code>self.transpose() * rhs</code> but stores the result …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes the solution of the linear system …","Solves the linear system <code>self.transpose() . x = b</code> where <code>x</code> …","Computes a trace of a square matrix, i.e., the sum of its …","Apply the rotation to the given point.","Transform the given point by this transformation.","Transforms the given point, assuming the matrix <code>self</code> uses …","Transforms the given point, assuming the matrix <code>self</code> uses …","","Rotate the given point by this unit complex number.","","Rotate a point by this unit quaternion.","Rotate and translate a point by this unit dual quaternion …","Rotate the given point.","","Translate the given point.","Translate the given point.","Transform the given point by this isometry.","Transform the given point by this similarity.","Apply the rotation to the given vector.","Transform the given vector by this transformation, …","Transforms the given vector, assuming the matrix <code>self</code> uses …","","Rotate a vector by this unit dual quaternion, ignoring the …","Rotate the given vector by this unit complex number.","","Rotate a vector by this unit quaternion.","Rotate the given vector.","","Transform the given vector by this isometry, ignoring the …","Transform the given vector by this similarity, ignoring …","Return the translation part of this unit dual quaternion.","Creates a new isometry from the given translation …","Creates a new isometry from the given translation …","Creates a new isometry from the given translation …","Creates a new isometry from the given translation …","The pure translational part of this isometry.","Transposes <code>self</code>.","Transposes <code>self</code>.","Transposes the square matrix <code>self</code> in-place.","Transposes <code>self</code> in-place.","Transposes <code>self</code> and store the result into <code>out</code>.","","","Attempts to cast the components of <code>self</code> to another type.","Attempts to convert an object to a more specific one.","Attempts to convert an object to a more specific one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to invert this transformation. You may use …","Attempts to invert this square matrix.","Inverts this quaternion if it is not zero.","Inverts this dual quaternion if it is not zero.","Inverts <code>self</code>.","Computes the inverse of the decomposed matrix.","Computes the inverse of the decomposed matrix.","Computes the inverse of the decomposed matrix.","Computes the inverse of the decomposed matrix.","Attempts to invert this transformation in-place. You may …","Attempts to invert this square matrix in-place. Returns …","Inverts this quaternion in-place if it is not zero.","Inverts this dual quaternion in-place if it is not zero.","Inverts <code>self</code> in-place.","Computes the inverse of the decomposed matrix and outputs …","Translate the given point by the inverse of this Scale.","Performs a LU decomposition to overwrite <code>out</code> with the …","Attempts to interpolate between two isometries using a …","Attempts to interpolate between two isometries using a …","Attempts to normalize the given vector and return it …","Attempts to compute the Schur decomposition of a square …","Attempts to compute the Singular Value Decomposition of …","Computes the eigendecomposition of the given symmetric …","Normalize the given vector and return it wrapped on a <code>Unit</code> …","Attempts to compute the Singular Value Decomposition of …","Returns a normalized version of this matrix unless its …","Normalizes this matrix in-place or does nothing if its …","Attempts to compute the Polar Decomposition of  a <code>matrix</code> …","Attempts to compute the Schur decomposition of a square …","Computes the screw-linear interpolation between two unit …","Sets the magnitude of this vector unless it is smaller …","Computes the spherical linear interpolation between two …","Computes the spherical linear interpolation between two …","Computes the spherical linear interpolation between two …","","","Attempts to compute the Singular Value Decomposition of …","Attempts to compute the Singular Value Decomposition of …","Computes the eigendecomposition of the given symmetric …","Gets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the orthogonal matrix <code>U</code> of this <code>U * D * V</code> …","The upper triangular matrix of this decomposition.","The upper triangular matrix of this decomposition.","The left-singular vectors <code>U</code> of this SVD.","The upper triangular matrix resulting from the …","Attempts to compute the UDU decomposition of this matrix.","","","","","","","","","","","","","","","Builds a matrix with uninitialized elements of type …","Unpacks this decomposition into its three matrix factors …","Retrieves the lower-triangular factor of the Cholesky …","Unpacks this decomposition into its two matrix factors.","The two matrices of this decomposition and the row and …","Retrieves <code>(q, h)</code> with <code>q</code> the orthogonal matrix of this …","The row permutations and two triangular matrices of this …","Unpacks this decomposition into its two matrix factors.","Retrieves the unitary matrix <code>Q</code> and the …","Retrieve the orthogonal transformation, diagonal, and off …","Retrieves the lower-triangular factor of the Cholesky …","Retrieves the upper trapezoidal submatrix <code>H</code> of this …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Retrieves the upper trapezoidal submatrix <code>R</code> of this …","Retrieve the diagonal, and off diagonal elements of this …","Un-projects a point. Faster than multiplication by the …","Un-projects a point. Faster than multiplication by the …","Divides this complex number by <code>factor</code>.","","Divides <code>self</code> by the scalar <code>t</code>.","Divides each component of the complex matrix <code>self</code> by the …","Divides <code>self</code> by n.","","Divides each component of the complex matrix <code>self</code> by the …","","","","Retrieves the underlying matrix. Deprecated: Use …","Retrieves the underlying value. Deprecated: use …","Unwraps the underlying matrix. Deprecated: Use …","Retrieves the underlying homogeneous matrix. Deprecated: …","Retrieves the underlying homogeneous matrix. Deprecated: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts the upper triangular part of this matrix …","Computes the orthogonal matrix <code>V_t</code> of this <code>U * D * V_t</code> …","The right-singular vectors <code>V^t</code> of this SVD.","Gets the run-time value of <code>self</code>. For type-level integers, …","","","The variance of all the elements of this matrix.","The vector part <code>(i, j, k)</code> of this quaternion.","The translation coordinates, i.e., how much is added to a …","The scale coordinates, i.e., how much is multiplied to a …","Construct a fixed-size column vector directly from data.","The mutable vector part <code>(i, j, k)</code> of this quaternion.","Computes the row and column coordinates of the i-th …","Gets a reference to the i-th element of this column vector …","Gets a mutable reference to the i-th element of this …","Return a view of this matrix starting at its component …","Return a view of this matrix starting at its component …","Returns a view containing the rows indexed by the range …","Return a mutable view containing the rows indexed by the …","Return a view of this matrix starting at its component …","Return a view of this matrix starting at its component …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The column vector with a 1 as its fourth component, and …","The unit column vector with a 1 as its fourth component, …","Computes the wilkinson shift, i.e., the 2x2 symmetric …","Wraps <code>val</code> into the range <code>[min, max]</code> using modular …","The column vector with a 1 as its first component, and …","The unit column vector with a 1 as its first component, …","Lane-wise bitwise xor of the vector elements.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","The column vector with a 1 as its second component, and …","The unit column vector with a 1 as its second component, …","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","The column vector with a 1 as its third component, and …","The unit column vector with a 1 as its third component, …","Gets the additive identity element.","","","","","","","","","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix or vector with all its elements set to <code>0</code>.","Creates a matrix with all its elements set to 0.","The far plane offset of the view cuboid.","Gets the far plane offset of the view frustum.","Replaces each component of <code>self</code> by the result of a closure …","Folds a function <code>f</code> on each pairs of entries from <code>self</code> and …","Returns a matrix containing the result of <code>f</code> applied to …","Applies a function to each lane of <code>self</code> paired with the …","Replaces each component of <code>self</code> by the result of a closure …","Returns a matrix containing the result of <code>f</code> applied to …","The near plane offset of the view cuboid.","Gets the near plane offset of the view frustum.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","Builds a new vector from components of <code>self</code>.","Builds a new point from components of <code>self</code>.","A array-based statically sized matrix data storage.","The column-stride of the owned data storage for a buffer …","The static stride of this storage’s columns.","","","A dynamically sized column-major matrix.","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix slice dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A column-major matrix view dynamic numbers of rows and …","A dynamically sized column vector.","A column vector slice dynamic numbers of rows and columns.","A column vector slice dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","A column vector view dynamic numbers of rows and columns.","An allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …","Trait implemented by any type that can be used as a …","","","","","","","","","Trait implemented exclusively by type-level integers.","","","","","","","","","","","","","","","A range with a size that may be known at compile-time.","","","Dim of dynamically-sized algebraic entities.","","Euclidean norm.","Marker trait indicating that a storage is stored …","Trait implemented by <code>Dyn</code>.","Trait implemented by <code>Dyn</code> and type-level integers different …","Lp norm.","The most generic column-major matrix (and vector) type.","A stack-allocated, column-major, 1x1 square matrix.","A stack-allocated, column-major, 1x2 matrix.","A stack-allocated, column-major, 1x3 matrix.","A stack-allocated, column-major, 1x4 matrix.","A stack-allocated, column-major, 1x5 matrix.","A stack-allocated, column-major, 1x6 matrix.","A heap-allocated, row-major, matrix with 1 rows and a …","A stack-allocated, column-major, 2x2 square matrix.","A stack-allocated, column-major, 2x1 matrix.","A stack-allocated, column-major, 2x3 matrix.","A stack-allocated, column-major, 2x4 matrix.","A stack-allocated, column-major, 2x5 matrix.","A stack-allocated, column-major, 2x6 matrix.","A heap-allocated, row-major, matrix with 2 rows and a …","A stack-allocated, column-major, 3x3 square matrix.","A stack-allocated, column-major, 3x1 matrix.","A stack-allocated, column-major, 3x2 matrix.","A stack-allocated, column-major, 3x4 matrix.","A stack-allocated, column-major, 3x5 matrix.","A stack-allocated, column-major, 3x6 matrix.","A heap-allocated, row-major, matrix with 3 rows and a …","A stack-allocated, column-major, 4x4 square matrix.","A stack-allocated, column-major, 4x1 matrix.","A stack-allocated, column-major, 4x2 matrix.","A stack-allocated, column-major, 4x3 matrix.","A stack-allocated, column-major, 4x5 matrix.","A stack-allocated, column-major, 4x6 matrix.","A heap-allocated, row-major, matrix with 4 rows and a …","A stack-allocated, column-major, 5x5 square matrix.","A stack-allocated, column-major, 5x1 matrix.","A stack-allocated, column-major, 5x2 matrix.","A stack-allocated, column-major, 5x3 matrix.","A stack-allocated, column-major, 5x4 matrix.","A stack-allocated, column-major, 5x6 matrix.","A heap-allocated, row-major, matrix with 5 rows and a …","A stack-allocated, column-major, 6x6 square matrix.","A stack-allocated, column-major, 6x1 matrix.","A stack-allocated, column-major, 6x2 matrix.","A stack-allocated, column-major, 6x3 matrix.","A stack-allocated, column-major, 6x4 matrix.","A stack-allocated, column-major, 6x5 matrix.","A heap-allocated, row-major, matrix with 6 rows and a …","The type of the result of a matrix cross product.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","An owned matrix column-major matrix with <code>D</code> columns.","A matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A mutable matrix slice.","A column-major 1x1 matrix slice.","A column-major 1x2 matrix slice.","A column-major 1x3 matrix slice.","A column-major 1x4 matrix slice.","A column-major 1x5 matrix slice.","A column-major 1x6 matrix slice.","A column-major matrix slice with 1 row and a number of …","A column-major 2x2 matrix slice.","A column-major 2x1 matrix slice.","A column-major 2x3 matrix slice.","A column-major 2x4 matrix slice.","A column-major 2x5 matrix slice.","A column-major 2x6 matrix slice.","A column-major matrix slice with 2 rows and a number of …","A column-major 3x3 matrix slice.","A column-major 3x1 matrix slice.","A column-major 3x2 matrix slice.","A column-major 3x4 matrix slice.","A column-major 3x5 matrix slice.","A column-major 3x6 matrix slice.","A column-major matrix slice with 3 rows and a number of …","A column-major 4x4 matrix slice.","A column-major 4x1 matrix slice.","A column-major 4x2 matrix slice.","A column-major 4x3 matrix slice.","A column-major 4x5 matrix slice.","A column-major 4x6 matrix slice.","A column-major matrix slice with 4 rows and a number of …","A column-major 5x5 matrix slice.","A column-major 5x1 matrix slice.","A column-major 5x2 matrix slice.","A column-major 5x3 matrix slice.","A column-major 5x4 matrix slice.","A column-major 5x6 matrix slice.","A column-major matrix slice with 5 rows and a number of …","A column-major 6x6 matrix slice.","A column-major 6x1 matrix slice.","A column-major 6x2 matrix slice.","A column-major 6x3 matrix slice.","A column-major 6x4 matrix slice.","A column-major 6x5 matrix slice.","A column-major matrix slice with 6 rows and a number of …","A column-major matrix slice with <code>R</code> rows and <code>C</code> columns.","A column-major matrix slice with <code>D</code> rows and columns.","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","A column-major matrix slice with a number of rows chosen …","The type of the result of a matrix sum.","Renamed to <code>VecStorage</code>.","A matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A mutable matrix view.","A column-major 1x1 matrix view.","A column-major 1x2 matrix view.","A column-major 1x3 matrix view.","A column-major 1x4 matrix view.","A column-major 1x5 matrix view.","A column-major 1x6 matrix view.","A column-major matrix view with 1 row and a number of …","A column-major 2x2 matrix view.","A column-major 2x1 matrix view.","A column-major 2x3 matrix view.","A column-major 2x4 matrix view.","A column-major 2x5 matrix view.","A column-major 2x6 matrix view.","A column-major matrix view with 2 rows and a number of …","A column-major 3x3 matrix view.","A column-major 3x1 matrix view.","A column-major 3x2 matrix view.","A column-major 3x4 matrix view.","A column-major 3x5 matrix view.","A column-major 3x6 matrix view.","A column-major matrix view with 3 rows and a number of …","A column-major 4x4 matrix view.","A column-major 4x1 matrix view.","A column-major 4x2 matrix view.","A column-major 4x3 matrix view.","A column-major 4x5 matrix view.","A column-major 4x6 matrix view.","A column-major matrix view with 4 rows and a number of …","A column-major 5x5 matrix view.","A column-major 5x1 matrix view.","A column-major 5x2 matrix view.","A column-major 5x3 matrix view.","A column-major 5x4 matrix view.","A column-major 5x6 matrix view.","A column-major matrix view with 5 rows and a number of …","A column-major 6x6 matrix view.","A column-major 6x1 matrix view.","A column-major 6x2 matrix view.","A column-major 6x3 matrix view.","A column-major 6x4 matrix view.","A column-major 6x5 matrix view.","A column-major matrix view with 6 rows and a number of …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A column-major matrix view with a number of rows chosen at …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A heap-allocated, column-major, matrix with a dynamic …","A trait for abstract matrix norms.","The type of the norm.","Trait implemented by entities scan be be normalized and …","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","An owned D-dimensional column vector.","The reshaped storage type.","","","","","","","","","","","","","The owned data storage that can be allocated from <code>S</code>.","The owned data storage that can be allocated from <code>S</code>.","The row-stride of the owned data storage for a buffer of …","The static stride of this storage’s rows.","The trait shared by all matrix data storage.","Trait implemented by matrix data storage that can provide …","A matrix storage that can be reshaped in-place.","A dynamically sized row vector.","An owned D-dimensional row vector.","A statically sized D-dimensional row vector.","A matrix with one row and <code>D</code> columns .","A stack-allocated, 1-dimensional row vector.","A stack-allocated, 2-dimensional row vector.","A stack-allocated, 3-dimensional row vector.","A stack-allocated, 4-dimensional row vector.","A stack-allocated, 5-dimensional row vector.","A stack-allocated, 6-dimensional row vector.","A statically sized column-major matrix with <code>R</code> rows and <code>C</code> …","A column-major matrix slice with dimensions known at …","A column-major matrix slice with dimensions known at …","A column-major matrix view with dimensions known at …","A column-major matrix view with dimensions known at …","A statically sized D-dimensional column vector.","A column vector slice with dimensions known at …","A column vector slice with dimensions known at …","A column vector view with dimensions known at compile-time.","A column vector view with dimensions known at compile-time.","The data storage for the sum of two matrices with …","The basic scalar type for all structures of <code>nalgebra</code>.","Type of the range size. May be a type-level integer.","A range with a size that may be known at compile-time.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","A square matrix.","Trait shared by all matrix data storage that don’t …","Trait shared by all mutable matrix data storage that …","","","","","The constant dimension 0 .","","The constant dimension 1.","","The constant dimension 10 .","","The constant dimension 100 .","","The constant dimension 101 .","","The constant dimension 102 .","","The constant dimension 103 .","","The constant dimension 104 .","","The constant dimension 105 .","","The constant dimension 106 .","","The constant dimension 107 .","","The constant dimension 108 .","","The constant dimension 109 .","","The constant dimension 11 .","","The constant dimension 110 .","","The constant dimension 111 .","","The constant dimension 112 .","","The constant dimension 113 .","","The constant dimension 114 .","","The constant dimension 115 .","","The constant dimension 116 .","","The constant dimension 117 .","","The constant dimension 118 .","","The constant dimension 119 .","","The constant dimension 12 .","","The constant dimension 120 .","","The constant dimension 121 .","","The constant dimension 122 .","","The constant dimension 123 .","","The constant dimension 124 .","","The constant dimension 125 .","","The constant dimension 126 .","","The constant dimension 127 .","","The constant dimension 13 .","","The constant dimension 14 .","","The constant dimension 15 .","","The constant dimension 16 .","","The constant dimension 17 .","","The constant dimension 18 .","","The constant dimension 19 .","","The constant dimension 2 .","","The constant dimension 20 .","","The constant dimension 21 .","","The constant dimension 22 .","","The constant dimension 23 .","","The constant dimension 24 .","","The constant dimension 25 .","","The constant dimension 26 .","","The constant dimension 27 .","","The constant dimension 28 .","","The constant dimension 29 .","","The constant dimension 3 .","","The constant dimension 30 .","","The constant dimension 31 .","","The constant dimension 32 .","","The constant dimension 33 .","","The constant dimension 34 .","","The constant dimension 35 .","","The constant dimension 36 .","","The constant dimension 37 .","","The constant dimension 38 .","","The constant dimension 39 .","","The constant dimension 4 .","","The constant dimension 40 .","","The constant dimension 41 .","","The constant dimension 42 .","","The constant dimension 43 .","","The constant dimension 44 .","","The constant dimension 45 .","","The constant dimension 46 .","","The constant dimension 47 .","","The constant dimension 48 .","","The constant dimension 49 .","","The constant dimension 5 .","","The constant dimension 50 .","","The constant dimension 51 .","","The constant dimension 52 .","","The constant dimension 53 .","","The constant dimension 54 .","","The constant dimension 55 .","","The constant dimension 56 .","","The constant dimension 57 .","","The constant dimension 58 .","","The constant dimension 59 .","","The constant dimension 6 .","","The constant dimension 60 .","","The constant dimension 61 .","","The constant dimension 62 .","","The constant dimension 63 .","","The constant dimension 64 .","","The constant dimension 65 .","","The constant dimension 66 .","","The constant dimension 67 .","","The constant dimension 68 .","","The constant dimension 69 .","","The constant dimension 7 .","","The constant dimension 70 .","","The constant dimension 71 .","","The constant dimension 72 .","","The constant dimension 73 .","","The constant dimension 74 .","","The constant dimension 75 .","","The constant dimension 76 .","","The constant dimension 77 .","","The constant dimension 78 .","","The constant dimension 79 .","","The constant dimension 8 .","","The constant dimension 80 .","","The constant dimension 81 .","","The constant dimension 82 .","","The constant dimension 83 .","","The constant dimension 84 .","","The constant dimension 85 .","","The constant dimension 86 .","","The constant dimension 87 .","","The constant dimension 88 .","","The constant dimension 89 .","","The constant dimension 9 .","","The constant dimension 90 .","","The constant dimension 91 .","","The constant dimension 92 .","","The constant dimension 93 .","","The constant dimension 94 .","","The constant dimension 95 .","","The constant dimension 96 .","","The constant dimension 97 .","","The constant dimension 98 .","","The constant dimension 99 .","","L-infinite norm aka. Chebytchev norm aka. uniform norm …","An owned matrix with uninitialized data.","An owned matrix with uninitialized data.","A wrapper that ensures the underlying algebraic entity has …","A stack-allocated, 1-dimensional unit vector.","A stack-allocated, 2-dimensional unit vector.","A stack-allocated, 3-dimensional unit vector.","A stack-allocated, 4-dimensional unit vector.","A stack-allocated, 5-dimensional unit vector.","A stack-allocated, 6-dimensional unit vector.","A Vec-based matrix data storage. It may be …","A matrix with one column and <code>D</code> rows.","A stack-allocated, 1-dimensional column vector.","A stack-allocated, 2-dimensional column vector.","A stack-allocated, 3-dimensional column vector.","A stack-allocated, 4-dimensional column vector.","A stack-allocated, 5-dimensional column vector.","A stack-allocated, 6-dimensional column vector.","An owned matrix column-major matrix with <code>R</code> rows and <code>C</code> …","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","A column vector slice with dimensions known at …","A 1D column vector slice.","A 2D column vector slice.","A 3D column vector slice.","A 4D column vector slice.","A 5D column vector slice.","A 6D column vector slice.","The type of the result of a matrix sum.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A column vector view with dimensions known at compile-time.","A 1D column vector view.","A 2D column vector view.","A 3D column vector view.","A 4D column vector view.","A 5D column vector view.","A 6D column vector view.","A matrix data storage for a matrix view. Only contains an …","A mutable matrix data storage for mutable matrix view. …","","","Abstract definition of a matrix data storage allocator.","Retrieves the mutable data buffer as a contiguous slice.","Retrieves the data buffer as a contiguous slice.","The start index of the range.","Clones this data storage to one that does not contain any …","Compatibility constraints between matrix shapes, e.g., for …","Structures to which matrices and vector can be …","The data storage that contains all the matrix components. …","The default matrix data storage allocator.","The value of this dimension.","Traits and tags for identifying the dimension of all …","","","The index immediately after the last index inside of the …","Builds an instance of <code>Self</code> from a run-time value. Panics …","Gets the address of the i-th matrix component without …","Gets the address of the i-th matrix component without …","Gets the mutable address of the i-th matrix component …","Gets the mutable address of the i-th matrix component …","Retrieves a reference to the i-th element without …","Retrieves a reference to the i-th element without …","Retrieves a mutable reference to the i-th element without …","Retrieves a mutable reference to the element at …","Indexing","Builds a matrix data storage that does not contain any …","","Indicates whether this data buffer stores its elements …","Matrix iterators.","Compute the index corresponding to the irow-th row and …","","","Use the metric induced by this norm to compute the metric …","","","","","The name of this dimension, i.e., the singleton <code>Self</code>.","Apply this norm to the given matrix.","Computes the norm.","Computes the squared norm.","The matrix data pointer.","The matrix mutable data pointer.","Reshapes the storage into the output storage type.","Multiply <code>self</code> by n.","The dimension of the matrix at run-time. Arr length of …","The number of elements of the range, i.e., …","Abstract definition of a matrix data storage.","The spacing between consecutive row elements and …","","","Swaps two elements without bound-checking.","Swaps two elements using their linear index without …","Gets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …","Mechanisms for working with values that may not be …","Divides <code>self</code> by n.","Gets the run-time value of <code>self</code>. For type-level integers, …","A matrix allocator of a memory buffer that may contain …","The type of buffer this allocator can instanciate.","The type of buffer with uninitialized components this …","A matrix reallocator. Changes the size of the memory …","Restricts the given number of rows and columns to be …","The number of columns of the result of a componentwise …","The number of rows of the result of a componentwise …","Restricts the given number of rows to be equal.","Allocates a buffer initialized with the content of the …","Allocates a buffer initialized with the content of the …","Allocates a buffer with the given number of rows and …","Assumes a data buffer to be initialized.","Reallocates a buffer of shape <code>(RTo, CTo)</code>, possibly reusing …","Constraints <code>C1</code> and <code>R2</code> to be equivalent.","Constraints <code>D1</code> and <code>D2</code> to be equivalent.","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","This is either equal to <code>D1</code> or <code>D2</code>, always choosing the one …","Constraints D1 and D2 to be equivalent, where they both …","Constraints <code>D1</code> and <code>D2</code> to be equivalent. They are both …","Constraints <code>D1</code> and <code>D2</code> to be equivalent. They are both …","A type used in <code>where</code> clauses for enforcing constraints.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …","Data structure used to provide access to matrix and vector …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coden allocator based on <code>ArrayStorage</code> and <code>VecStorage</code> for …","","","Trait implemented by any type that can be used as a …","","","","","","","","","Trait implemented exclusively by type-level integers.","","","","","","","","","","","","","","","","","Dim of dynamically-sized algebraic entities.","","Trait implemented by <code>Dyn</code>.","Trait implemented by <code>Dyn</code> and type-level integers different …","","","","","","","","","","","","","","","","","The constant dimension 0 .","","The constant dimension 1.","","The constant dimension 10 .","","The constant dimension 100 .","","The constant dimension 101 .","","The constant dimension 102 .","","The constant dimension 103 .","","The constant dimension 104 .","","The constant dimension 105 .","","The constant dimension 106 .","","The constant dimension 107 .","","The constant dimension 108 .","","The constant dimension 109 .","","The constant dimension 11 .","","The constant dimension 110 .","","The constant dimension 111 .","","The constant dimension 112 .","","The constant dimension 113 .","","The constant dimension 114 .","","The constant dimension 115 .","","The constant dimension 116 .","","The constant dimension 117 .","","The constant dimension 118 .","","The constant dimension 119 .","","The constant dimension 12 .","","The constant dimension 120 .","","The constant dimension 121 .","","The constant dimension 122 .","","The constant dimension 123 .","","The constant dimension 124 .","","The constant dimension 125 .","","The constant dimension 126 .","","The constant dimension 127 .","","The constant dimension 13 .","","The constant dimension 14 .","","The constant dimension 15 .","","The constant dimension 16 .","","The constant dimension 17 .","","The constant dimension 18 .","","The constant dimension 19 .","","The constant dimension 2 .","","The constant dimension 20 .","","The constant dimension 21 .","","The constant dimension 22 .","","The constant dimension 23 .","","The constant dimension 24 .","","The constant dimension 25 .","","The constant dimension 26 .","","The constant dimension 27 .","","The constant dimension 28 .","","The constant dimension 29 .","","The constant dimension 3 .","","The constant dimension 30 .","","The constant dimension 31 .","","The constant dimension 32 .","","The constant dimension 33 .","","The constant dimension 34 .","","The constant dimension 35 .","","The constant dimension 36 .","","The constant dimension 37 .","","The constant dimension 38 .","","The constant dimension 39 .","","The constant dimension 4 .","","The constant dimension 40 .","","The constant dimension 41 .","","The constant dimension 42 .","","The constant dimension 43 .","","The constant dimension 44 .","","The constant dimension 45 .","","The constant dimension 46 .","","The constant dimension 47 .","","The constant dimension 48 .","","The constant dimension 49 .","","The constant dimension 5 .","","The constant dimension 50 .","","The constant dimension 51 .","","The constant dimension 52 .","","The constant dimension 53 .","","The constant dimension 54 .","","The constant dimension 55 .","","The constant dimension 56 .","","The constant dimension 57 .","","The constant dimension 58 .","","The constant dimension 59 .","","The constant dimension 6 .","","The constant dimension 60 .","","The constant dimension 61 .","","The constant dimension 62 .","","The constant dimension 63 .","","The constant dimension 64 .","","The constant dimension 65 .","","The constant dimension 66 .","","The constant dimension 67 .","","The constant dimension 68 .","","The constant dimension 69 .","","The constant dimension 7 .","","The constant dimension 70 .","","The constant dimension 71 .","","The constant dimension 72 .","","The constant dimension 73 .","","The constant dimension 74 .","","The constant dimension 75 .","","The constant dimension 76 .","","The constant dimension 77 .","","The constant dimension 78 .","","The constant dimension 79 .","","The constant dimension 8 .","","The constant dimension 80 .","","The constant dimension 81 .","","The constant dimension 82 .","","The constant dimension 83 .","","The constant dimension 84 .","","The constant dimension 85 .","","The constant dimension 86 .","","The constant dimension 87 .","","The constant dimension 88 .","","The constant dimension 89 .","","The constant dimension 9 .","","The constant dimension 90 .","","The constant dimension 91 .","","The constant dimension 92 .","","The constant dimension 93 .","","The constant dimension 94 .","","The constant dimension 95 .","","The constant dimension 96 .","","The constant dimension 97 .","","The constant dimension 98 .","","The constant dimension 99 .","","","","The value of this dimension.","","","Builds an instance of <code>Self</code> from a run-time value. Panics …","","","","","","","","The name of this dimension, i.e., the singleton <code>Self</code>.","","","Gets the compile-time value of <code>Self</code>. Returns <code>None</code> if it is …","Gets the run-time value of <code>self</code>. For type-level integers, …","A helper trait used for indexing operations.","A helper trait used for indexing operations.","The output type returned by methods.","The output type returned by methods.","An iterator through the columns of a matrix.","An iterator through the mutable columns of a matrix.","An iterator through a dense matrix with arbitrary strides …","An iterator through a dense matrix with arbitrary strides …","An iterator through the rows of a matrix.","An iterator through the mutable rows of a matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new iterator for the given matrix storage.","Creates a new iterator for the given matrix storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The column-stride of the owned data storage for a buffer …","The static stride of this storage’s columns.","Marker trait indicating that a storage is stored …","The reshaped storage type.","The owned data storage that can be allocated from <code>S</code>.","The owned data storage that can be allocated from <code>S</code>.","The row-stride of the owned data storage for a buffer of …","The static stride of this storage’s rows.","The trait shared by all matrix data storage.","Trait implemented by matrix data storage that can provide …","A matrix storage that can be reshaped in-place.","The data storage for the sum of two matrices with …","Trait shared by all matrix data storage that don’t …","Trait shared by all mutable matrix data storage that …","Retrieves the mutable data buffer as a contiguous slice.","Retrieves the data buffer as a contiguous slice.","Clones this data storage to one that does not contain any …","Gets the address of the i-th matrix component without …","Gets the address of the i-th matrix component without …","Gets the mutable address of the i-th matrix component …","Gets the mutable address of the i-th matrix component …","Retrieves a reference to the i-th element without …","Retrieves a reference to the i-th element without …","Retrieves a mutable reference to the i-th element without …","Retrieves a mutable reference to the element at …","Builds a matrix data storage that does not contain any …","Indicates whether this data buffer stores its elements …","Compute the index corresponding to the irow-th row and …","The matrix data pointer.","The matrix mutable data pointer.","Reshapes the storage into the output storage type.","The dimension of the matrix at run-time. Arr length of …","The spacing between consecutive row elements and …","Swaps two elements without bound-checking.","Swaps two elements using their linear index without …","A type implementing <code>InitStatus</code> indicating that the value …","This trait is used to write code that may work on matrices …","A type implementing <code>InitStatus</code> indicating that the value …","The type of the values with the initialization status …","","","","","","","","","Retrieve a mutable reference to the element, assuming that …","","","Retrieve a reference to the element, assuming that it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Initialize the given element.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait implemented by rotations that can be used inside of …","A 2D affine transformation. Stored as a homogeneous 3x3 …","A 3D affine transformation. Stored as a homogeneous 4x4 …","A dual quaternion.","A direct isometry, i.e., a rotation followed by a …","A 2-dimensional direct isometry using a unit complex …","A 3-dimensional direct isometry using a unit quaternion …","A 2-dimensional direct isometry using a rotation matrix …","A 3-dimensional direct isometry using a rotation matrix …","A point in an euclidean space.","A 3D orthographic projection stored as a homogeneous 4x4 …","A 3D perspective projection stored as a homogeneous 4x4 …","A point with <code>D</code> elements.","A statically sized 1-dimensional column point.","A statically sized 2-dimensional column point.","A statically sized 3-dimensional column point.","A statically sized 4-dimensional column point.","A statically sized 5-dimensional column point.","A statically sized 6-dimensional column point.","An invertible 2D general transformation. Stored as a …","An invertible 3D general transformation. Stored as a …","A quaternion. See the type alias …","A reflection wrt. a plane.","A 1-dimensional reflection.","A 2-dimensional reflection.","A 3-dimensional reflection.","A 4-dimensional reflection.","A 5-dimensional reflection.","A 6-dimensional reflection.","The transform category that results from the …","A rotation matrix.","A 2-dimensional rotation matrix.","A 3-dimensional rotation matrix.","A scale which supports non-uniform scaling.","A 1-dimensional scale.","A 2-dimensional scale.","A 3-dimensional scale.","A 4-dimensional scale.","A 5-dimensional scale.","A 6-dimensional scale.","A similarity, i.e., an uniform scaling, followed by a …","A 2-dimensional similarity.","A 3-dimensional similarity.","A 2-dimensional similarity using a rotation matrix for its …","A 3-dimensional similarity using a rotation matrix for its …","Indicates that <code>Self</code> is a more specific <code>Transform</code> category …","Indicates that <code>Self</code> is a more general <code>Transform</code> category …","Tag representing an affine <code>Transform</code>. Its bottom-row is …","Trait implemented by phantom types identifying the …","Traits that gives the <code>Transform</code> category that is …","Tag representing the most general (not necessarily …","Tag representing the most general inversible <code>Transform</code> …","A transformation matrix in homogeneous coordinates.","A 2D general transformation that may not be invertible. …","A 3D general transformation that may not be inversible. …","A translation.","A 1-dimensional translation.","A 2-dimensional translation.","A 3-dimensional translation.","A 4-dimensional translation.","A 5-dimensional translation.","A 6-dimensional translation.","A 2D rotation represented as a complex number with …","A unit dual quaternion. May be used to represent a …","A unit quaternions. May be used to represent a rotation.","Checks that the given matrix is a valid homogeneous …","The coordinates of this point, i.e., the shift from the …","This quaternion as a 4D vector of coordinates in the …","The dual component of the quaternion","Indicates whether a <code>Transform</code> with the category <code>Self</code> has a …","The rotation identity.","The rotation inverse.","Change <code>self</code> to its inverse.","Apply the inverse rotation to the given point.","Apply the inverse rotation to the given unit vector.","Apply the inverse rotation to the given vector.","The part of this similarity that does not include the …","The real component of the quaternion","The pure rotational part of this isometry.","Apply the rotation to the given point.","Apply the rotation to the given vector.","The pure translational part of this isometry.","The translation coordinates, i.e., how much is added to a …","The scale coordinates, i.e., how much is multiplied to a …","The bidiagonalization of a general matrix.","The Cholesky decomposition of a …","The QR decomposition (with column pivoting) of a general …","LU decomposition with full row and column pivoting.","Hessenberg decomposition of a general matrix.","LU decomposition with partial (row) pivoting.","A sequence of row or column permutations.","The QR decomposition of a general matrix.","Singular Value Decomposition of a general matrix.","Schur decomposition of a square matrix.","Eigendecomposition of a symmetric matrix.","Tridiagonalization of a symmetric matrix.","UDU factorization.","Functions for balancing a matrix.","The diagonal matrix resulting from the factorization","The unsorted eigenvalues of the decomposed matrix.","The eigenvectors of the decomposed matrix.","Construction of givens rotations.","Construction of householder elementary reflections.","The singular values of this SVD.","Performs a LU decomposition to overwrite <code>out</code> with the …","The left-singular vectors <code>U</code> of this SVD.","The upper triangular matrix resulting from the …","The right-singular vectors <code>V^t</code> of this SVD.","Computes the wilkinson shift, i.e., the 2x2 symmetric …","Applies in-place a modified Parlett and Reinsch matrix …","Computes in-place <code>D * m * D.inverse()</code>, where <code>D</code> is the …","A Givens rotation.","","","","","","The cos part of this roration.","Computes the rotation <code>R</code> required such that the <code>x</code> component …","Computes the rotation <code>R</code> required such that the <code>y</code> component …","","","","","","","","","Returns the argument unchanged.","","The Givents rotation that does nothing.","","Calls <code>U::from(self)</code>.","","","","The inverse of this givens rotation.","","Initializes a Givens rotation from its non-normalized …","Initializes a Givens rotation from its components.","","","Performs the multiplication <code>rhs = self * rhs</code> in-place.","Performs the multiplication <code>lhs = lhs * self</code> in-place.","The sin part of this roration.","","","","","","Initializes a Givens rotation form its non-normalized …","","","","","The player is alarmed!! Like a lit grenade was just thrown …","A kind of emote the player can make.","A component representing a region in which a player should …","","","","","Events that can be used to trigger player actions, such as …","The player index, for example Player 1, Player 2, and so …","Marker component indicating that a player has been killed.","Contains the entities of the extra player layers, such as …","The state of the player controller.","","","Whether or not this emote region is active. This provides …","Adds a system to the appropriate stage in a <code>CoreSession</code> …","Adds a system to the appropriate stage in a <code>CoreSession</code> …","","The number of frames that this state has been active.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ID for the current state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawn a player.","Whether or not the player must be looking at the center of …","","","","","","","","","","","","","","","","","","","","","","","","The emote the player should make","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kill a player.","The ID of the state that the player was in in the last …","","","","","","","","","","","","","","","","","","","","","","","Set the player’s inventory","The size of the emote region","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Have the player use the item they are carrying, if any.","","","","","","","","","","","","A Random Number generator, powered by the <code>WyRand</code> …","Trait for enabling creating new <code>TurboCore</code> instances from …","This trait provides the means to easily generate all …","","A Random Number generator, powered by the <code>WyRand</code> algorithm.","A marker trait to be applied to anything that implements …","Associated type for accepting valid Seed values. Must be …","Trait for implementing Seedable PRNGs, requiring that the …","Base trait for implementing a PRNG. Only one method must be","Extension trait for automatically implementing all …","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","","","","","","","","","","","","Returns a random boolean value.","Returns a random boolean value.","","","","","","","Returns a boolean value based on a rate. <code>rate</code> represents …","Returns a boolean value based on a rate. <code>rate</code> represents …","Generates a random <code>char</code> in the given range.","Generates a random <code>char</code> in the given range.","","Clones the <code>AtomicRng</code> by deterministically deriving a new …","","","","","","","Initialises a default instance of <code>Rng</code>. Warning, the …","Initialises a default instance of <code>AtomicRng</code>. Warning, the …","","","","","","","","","","Generate a random digit in the given <code>radix</code>.","Generate a random digit in the given <code>radix</code>.","","","","","","","","","","","","","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Returns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.","Fills a mutable buffer with random bytes.","","","","","Forks a <code>TurboCore</code> instance by deterministically deriving a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns an array of constant <code>SIZE</code> containing random <code>u8</code> …","","","Returns a random <code>i128</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>isize</code> value.","Returns a random <code>u128</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>usize</code> value.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i128</code> within a given range bound.","Returns a random <code>i16</code> value.","Returns a random <code>i16</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i32</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i64</code> value.","Returns a random <code>i8</code> value.","Returns a random <code>i8</code> value.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns a random <code>isize</code> within a given range bound.","Returns a random <code>isize</code> within a given range bound.","Generates a random <code>char</code> in the range a-z.","Generates a random <code>char</code> in the range a-z.","Creates a new <code>Rng</code> with a randomised seed.","Creates a new <code>AtomicRng</code> with a randomised seed.","","","","","","","Reseeds the <code>SeededCore</code> with a new seed/state.","","","Reseeds the current thread-local generator.","Samples a random item from a slice of values.","Samples a random item from a slice of values.","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples a random item from an iterator of values. <code>O(1)</code> if …","Samples multiple unique items from a slice of values.","Samples multiple unique items from a slice of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from an iterator of values.","Samples multiple unique items from a mutable slice of …","Samples multiple unique items from a mutable slice of …","Samples a random <code>&amp;mut</code> item from a slice of values.","Samples a random <code>&amp;mut</code> item from a slice of values.","Shuffles a slice randomly in O(n) time.","Shuffles a slice randomly in O(n) time.","","","","","","","","","","","","","","","","","","","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u128</code> within a given range bound.","Returns a random <code>u16</code> value.","Returns a random <code>u16</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u32</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u64</code> value.","Returns a random <code>u8</code> value.","Returns a random <code>u8</code> value.","","","","","Generates a random <code>char</code> in the range A-Z.","Generates a random <code>char</code> in the range A-Z.","Returns a random <code>usize</code> within a given range bound.","Returns a random <code>usize</code> within a given range bound.","","","","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Stochastic Acceptance implementation of Roulette Wheel …","Creates a new <code>SeededCore</code> with a specific seed value.","","","The implementation of a Jumpy game session.","Information needed to start a game session.","","Run a single simulation frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Export the current map metadata by scanning the world …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Metadata for the selected map.","The core metadata.","Create a new game session","The player selections.","","","","","","Restore the world state","","Set the game metadata.","Snapshot the world state","","","","","","","","","","","","","","","","","","","","","","","Provide a closure to update the game inputs.","","","","","","Simple easing calculator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Clamps a sin wave between a minimum and maximum value.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,4,4,5,6,4,5,6,4,5,6,0,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,5,4,5,6,4,5,6,4,5,4,5,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,0,4,5,6,0,0,0,0,0,0,32,33,34,35,36,37,38,39,40,41,59,61,62,0,0,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,0,0,0,0,68,69,70,71,72,119,0,0,30,30,0,135,0,42,43,44,45,46,47,48,49,51,52,53,54,55,0,0,0,0,0,0,546,0,0,119,135,0,0,0,0,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,32,33,34,35,36,37,38,39,40,41,35,38,41,32,33,34,35,36,37,38,39,40,41,32,33,34,35,36,37,38,39,40,41,33,34,35,37,38,40,41,30,109,136,32,33,34,35,36,37,38,39,40,41,59,61,62,30,90,547,0,99,119,119,0,0,20,30,0,90,0,0,0,0,30,0,0,0,0,547,0,0,136,0,0,0,0,20,68,69,70,71,72,0,0,0,0,0,109,0,0,0,136,0,0,548,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,0,549,550,0,0,551,550,0,0,0,551,549,0,0,35,38,41,62,30,0,0,32,33,34,35,36,37,38,39,40,41,59,61,62,73,73,32,33,34,35,36,37,38,39,40,41,59,61,62,30,73,73,33,34,35,37,38,40,41,61,62,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,73,73,30,32,33,34,35,36,37,38,39,40,41,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,100,56,30,57,44,32,32,33,33,45,46,47,48,34,34,35,35,52,53,54,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,30,44,32,32,33,33,45,46,47,34,34,35,35,52,53,54,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,45,52,44,46,53,47,54,552,64,65,66,21,68,69,70,71,72,32,33,48,34,55,36,37,102,68,69,70,71,72,33,34,37,33,34,37,33,34,37,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,546,76,77,77,79,79,133,87,134,172,169,80,158,173,159,170,88,89,90,90,160,83,21,86,81,91,56,20,20,76,92,93,93,77,94,95,95,96,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,116,23,117,118,119,57,127,136,120,73,73,73,68,68,68,69,69,69,70,70,70,71,71,71,72,72,72,42,42,43,43,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,49,49,51,51,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,39,40,40,40,41,41,41,59,59,59,61,61,61,62,62,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,73,68,68,69,69,70,70,71,71,72,72,42,42,43,43,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,49,49,51,51,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,45,44,46,47,32,39,59,33,34,40,61,35,41,62,90,20,93,95,96,108,116,73,68,69,70,71,72,39,40,41,59,61,62,55,48,32,36,59,33,34,37,61,35,38,62,52,53,54,44,32,33,45,47,34,35,52,53,54,36,37,38,39,40,41,59,61,62,44,32,33,45,47,35,39,40,41,59,61,62,79,44,32,33,45,47,48,34,35,52,53,54,55,36,37,38,39,40,41,59,61,62,44,32,33,45,47,35,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,30,30,32,36,39,33,34,37,40,35,38,41,36,39,59,37,40,61,37,40,61,38,41,62,29,113,30,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,68,69,70,71,72,39,39,40,40,41,41,59,59,61,61,62,62,68,69,70,71,72,68,69,70,71,72,68,69,70,71,72,39,39,40,40,41,41,59,59,61,61,62,62,0,68,69,70,71,72,81,76,77,82,23,0,68,69,70,71,72,39,39,40,40,41,41,59,59,61,61,62,62,68,69,70,71,72,0,547,79,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,76,92,93,77,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,84,65,109,64,110,111,63,112,24,29,113,22,22,114,126,126,28,75,85,85,115,116,23,117,118,119,57,127,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,180,66,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,32,33,34,35,36,37,38,32,33,34,35,36,37,38,23,79,87,88,89,90,83,21,91,20,92,93,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,107,30,108,109,110,111,112,24,29,113,114,28,75,85,115,116,23,117,118,119,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,180,79,87,88,89,90,21,91,20,92,93,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,107,30,108,109,110,111,112,24,29,113,114,28,75,85,115,116,23,117,118,119,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,87,88,89,90,21,91,20,92,93,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,107,30,108,109,110,111,112,24,29,113,114,28,75,85,115,116,23,117,118,119,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,20,116,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,44,45,46,47,52,53,54,44,45,46,47,52,53,54,110,24,29,120,48,55,81,76,77,75,118,23,0,44,32,33,45,47,35,39,40,41,59,61,62,33,34,37,40,61,102,20,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,66,0,79,87,88,89,90,21,81,91,56,20,92,93,94,95,96,98,100,103,104,66,105,106,30,108,110,111,112,24,29,114,28,75,85,115,23,117,118,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,21,21,21,101,101,79,133,87,87,134,172,169,80,158,173,159,170,88,89,90,160,83,83,21,86,86,81,91,56,20,76,92,92,93,77,94,95,96,82,97,98,99,100,101,102,103,103,104,66,105,171,106,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,22,114,126,126,28,75,75,85,115,116,23,117,118,119,57,127,127,136,120,73,68,69,70,71,72,42,42,43,43,44,32,33,45,45,46,47,48,48,34,34,35,35,49,49,51,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,133,87,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,86,81,91,56,20,76,92,92,93,77,94,95,96,82,97,98,99,100,101,102,103,103,104,66,105,171,106,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,126,28,75,75,85,115,116,23,117,118,119,57,127,127,136,120,73,68,69,70,71,72,42,42,43,43,44,32,33,45,45,46,47,48,48,34,34,35,35,49,49,51,51,52,53,54,55,36,37,38,39,40,41,59,61,62,94,95,96,102,30,108,116,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,44,45,46,47,52,53,54,32,33,34,35,36,37,38,32,33,34,35,36,37,38,32,32,33,33,48,34,34,35,35,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,0,0,0,32,33,48,34,35,55,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,0,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,180,89,0,0,0,79,90,20,93,95,96,108,116,73,68,69,70,71,72,39,40,41,59,61,62,90,20,93,95,96,108,116,73,68,69,70,71,72,39,40,41,59,61,62,88,89,21,21,21,88,89,88,79,90,20,93,95,96,108,116,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,90,20,93,95,96,108,116,73,68,69,70,71,72,39,40,41,59,61,62,94,95,96,102,30,108,116,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,32,33,34,36,37,39,40,59,61,0,0,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,83,86,89,24,29,114,24,29,114,32,33,34,35,36,37,38,79,133,133,134,134,80,80,80,80,88,89,90,83,21,86,91,20,20,93,94,95,96,97,98,99,100,101,102,66,30,135,135,108,108,109,109,110,111,63,112,24,29,113,114,28,75,116,119,57,136,136,73,68,68,69,69,70,70,71,71,72,72,42,42,43,43,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,49,49,51,51,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,82,94,32,33,34,35,36,37,38,94,79,79,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,20,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,30,30,30,135,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,68,68,69,69,69,70,70,70,71,72,42,43,44,44,44,44,44,44,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,45,45,45,45,46,46,46,47,47,47,47,47,48,48,48,48,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,49,51,52,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,59,59,59,59,59,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,48,55,42,44,32,45,46,49,52,53,36,42,49,32,33,48,34,35,55,36,37,38,39,40,41,59,61,62,43,44,46,47,48,51,53,54,55,42,43,44,45,46,47,49,51,52,53,54,42,43,44,45,46,47,49,51,52,53,54,42,43,44,45,46,47,49,51,52,53,54,42,43,44,45,46,47,49,51,52,53,54,81,81,85,20,20,44,45,46,47,52,53,54,44,46,47,48,53,54,55,42,44,46,49,53,42,49,42,43,45,47,48,49,51,52,54,55,43,51,42,45,47,48,43,44,46,48,51,53,55,20,44,32,33,45,47,35,39,40,41,59,61,62,43,44,46,47,51,53,54,68,69,70,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,28,48,55,48,55,48,55,43,47,51,54,43,44,46,47,48,51,53,54,55,43,44,46,47,48,51,53,54,55,43,44,46,47,48,51,53,54,55,28,42,43,44,46,47,49,51,53,54,45,52,42,44,46,49,53,43,47,51,54,48,55,89,32,33,48,34,35,55,36,37,38,39,40,41,59,61,62,20,20,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,28,42,43,44,46,47,49,51,53,54,48,55,554,79,79,87,87,88,88,89,89,90,90,21,21,81,81,91,91,56,56,20,20,92,92,93,93,94,94,95,95,96,96,98,98,100,100,103,103,104,104,66,66,105,105,106,106,30,30,108,108,110,110,111,111,112,112,24,24,29,29,114,114,28,28,75,75,85,85,115,115,23,23,117,117,118,118,57,57,120,120,73,73,68,68,69,69,70,70,71,71,72,72,42,42,43,43,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,49,49,51,51,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,48,55,30,116,187,157,157,158,159,160,81,56,76,77,82,113,115,117,118,93,95,96,95,115,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,90,20,93,95,96,108,116,73,68,69,70,71,72,39,40,41,59,61,62,160,77,82,187,157,79,157,159,160,81,56,77,82,120,547,76,77,22,126,127,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,113,90,20,93,95,96,108,116,73,68,69,70,71,72,39,40,41,59,61,62,100,30,0,552,555,64,119,64,114,24,0,20,116,32,33,34,35,36,37,38,39,40,41,59,61,62,94,29,32,33,34,35,36,37,38,39,40,41,59,61,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,120,552,547,76,77,64,63,22,126,127,63,65,160,81,77,82,117,118,120,65,65,0,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,73,68,68,69,69,70,70,71,71,72,72,42,42,43,43,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,49,49,51,51,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,79,133,87,134,80,158,159,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,174,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,556,93,30,28,79,172,169,173,170,171,174,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,81,118,42,43,44,45,46,47,48,49,51,52,53,54,55,23,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,32,33,34,35,36,37,38,48,55,32,33,34,35,36,37,38,39,40,41,20,32,33,48,34,35,55,36,37,38,21,44,32,33,45,47,48,35,52,53,54,55,36,37,38,39,40,41,59,61,62,160,81,76,77,82,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,160,81,77,82,160,81,77,82,23,546,160,81,76,76,77,77,77,82,23,0,0,0,89,0,23,23,93,102,82,180,32,33,48,34,35,55,36,37,38,32,33,48,34,35,55,36,37,38,32,33,48,34,35,55,36,37,38,32,33,48,34,35,55,36,37,38,110,95,43,47,51,54,43,47,51,54,43,47,51,54,43,47,51,54,120,83,86,0,0,0,0,42,49,43,51,32,33,34,35,36,37,38,39,40,41,59,61,62,66,32,33,34,35,36,37,38,39,40,41,59,61,62,66,32,33,34,35,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,39,40,41,59,61,62,89,30,30,30,30,30,42,42,42,43,43,44,44,44,44,44,32,32,33,33,45,45,45,46,46,46,46,46,47,47,47,47,48,48,48,48,34,34,35,35,49,49,51,51,52,52,52,53,53,53,53,54,54,54,54,55,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,32,33,34,35,36,37,38,30,30,30,30,30,44,44,32,32,33,33,45,45,46,46,47,47,48,34,34,35,35,52,52,53,53,54,54,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,45,52,44,46,53,47,54,48,55,44,45,46,47,52,53,54,45,52,44,46,48,53,55,44,46,48,47,54,552,555,64,63,119,64,63,68,69,70,42,43,44,32,33,45,46,47,34,35,49,51,52,53,54,36,37,38,39,40,41,59,61,62,44,32,33,45,46,47,48,34,35,52,53,54,55,36,37,38,39,40,41,79,88,89,160,21,20,93,95,96,82,66,107,108,64,29,113,116,117,118,120,68,69,70,71,72,32,33,34,35,36,37,38,39,40,41,59,61,62,107,172,169,173,170,171,174,20,32,33,48,34,35,55,36,37,38,32,33,34,35,36,37,38,93,68,69,70,71,72,39,40,41,59,61,62,47,54,47,54,47,54,79,20,116,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,93,95,96,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,88,89,21,88,89,89,89,32,36,39,32,36,39,47,54,47,54,47,54,47,54,47,54,47,54,47,54,98,110,101,32,33,34,35,36,37,38,42,43,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,49,51,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,32,33,34,35,36,37,38,32,33,34,35,36,37,38,47,54,135,109,136,0,98,105,57,30,20,557,79,87,88,89,90,21,91,20,92,93,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,107,30,108,109,110,111,112,24,29,113,114,28,75,85,115,116,23,117,118,119,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,557,79,87,88,89,90,21,91,20,92,93,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,107,30,108,109,110,111,112,24,29,113,114,28,75,85,115,116,23,117,118,119,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,44,32,33,45,47,35,39,40,41,59,61,62,32,33,34,35,36,37,38,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,68,69,70,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,32,33,34,35,36,37,38,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,89,89,160,81,56,77,82,117,94,88,89,120,30,30,30,30,32,36,39,28,32,33,34,35,36,37,38,44,45,46,47,52,53,54,552,65,64,63,63,120,120,28,32,33,34,35,36,37,38,39,40,41,59,61,62,98,105,94,95,96,102,30,108,116,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,113,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,30,30,89,88,89,30,89,30,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,59,59,59,59,59,59,59,59,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,59,59,59,59,59,59,59,59,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,32,33,34,35,36,37,38,39,40,41,91,101,48,55,135,66,68,69,70,71,72,32,33,34,35,36,37,38,39,40,41,59,61,62,65,44,32,32,33,33,45,46,47,48,34,34,35,35,52,53,54,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,44,32,32,33,33,45,46,47,34,34,35,35,52,53,54,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,45,52,44,46,53,47,54,44,44,32,32,33,33,45,45,46,46,47,47,48,48,34,34,35,35,52,52,53,53,54,54,55,55,36,36,37,37,38,38,39,39,40,40,41,41,59,59,61,61,62,62,0,254,63,64,110,88,89,113,113,0,94,89,20,32,33,48,34,35,55,36,37,38,39,40,41,59,61,62,48,55,42,43,44,45,46,47,49,51,52,53,54,42,43,44,45,46,47,49,51,52,53,54,48,55,79,87,88,89,90,21,91,20,92,93,94,95,96,82,97,98,99,100,101,102,103,104,66,105,106,107,30,108,109,110,111,112,24,29,113,114,28,75,85,115,116,23,117,118,119,57,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,43,47,51,54,48,55,20,133,134,80,20,20,135,108,109,136,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,42,44,46,49,53,43,47,51,54,43,47,42,44,46,49,53,43,47,51,54,43,47,28,42,43,49,51,44,45,46,47,52,53,54,66,33,34,35,37,38,40,41,61,62,79,79,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,56,115,118,115,56,115,118,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,32,33,34,35,36,37,38,56,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,96,0,87,21,91,92,94,97,98,100,102,103,104,66,105,106,30,110,111,112,24,29,113,114,28,23,57,88,89,21,95,118,118,558,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,21,21,0,0,0,0,0,0,0,100,79,133,87,134,172,169,80,158,173,159,170,88,89,90,160,83,21,86,81,91,56,20,76,92,93,77,94,95,96,82,97,98,99,100,101,102,103,104,66,105,171,106,174,180,107,30,135,108,84,65,109,64,110,111,63,112,24,29,113,22,114,126,28,75,85,115,116,23,117,118,119,57,127,136,120,73,68,69,70,71,72,42,43,44,32,33,45,46,47,48,34,35,49,51,52,53,54,55,36,37,38,39,40,41,59,61,62,70,55,38,41,62,47,54,65,20,66,42,43,44,45,46,47,49,51,52,53,54,44,32,33,45,47,35,39,40,41,59,61,62,32,33,48,34,35,55,36,37,38,39,40,41,59,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,68,69,70,32,33,55,36,37,38,39,40,41,59,61,62,44,46,47,52,53,54,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,551,551,551,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,550,549,549,549,33,48,34,35,55,37,38,40,41,61,62,550,550,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,68,69,70,32,33,55,36,37,38,39,40,41,59,61,62,44,46,47,52,53,54,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,550,35,38,41,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,551,549,550,32,33,34,35,36,37,38,39,40,41,59,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,69,70,33,55,37,38,40,41,61,62,44,46,47,53,54,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,550,35,38,41,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,549,550,33,34,35,37,38,40,41,61,62,559,559,560,560,560,560,0,0,0,0,0,70,68,69,70,68,69,70,69,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,0,42,43,0,0,0,0,47,32,33,44,46,47,32,33,44,46,47,33,44,46,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,51,49,51,55,38,54,55,36,37,38,52,53,54,55,36,37,38,52,53,54,55,37,38,53,54,0,0,0,0,0,0,41,39,40,41,39,40,41,40,41,549,550,0,551,550,0,551,549,0,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,551,549,550,550,550,550,550,550,551,549,550,550,551,549,550,551,549,550,549,550,551,549,550,550,551,549,550,551,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,551,550,550,550,550,550,551,549,550,550,551,549,550,551,549,550,549,550,551,549,550,550,551,549,550,551,549,550,549,550,550,549,550,549,550,549,550,549,550,549,550,550,550,550,550,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,551,549,550,550,550,550,550,550,551,549,550,550,551,549,550,551,549,550,549,550,551,549,550,550,551,549,550,551,549,550,549,550,549,550,550,549,550,549,550,549,550,551,549,550,550,550,550,550,550,551,549,550,550,551,549,550,551,549,550,549,550,551,549,550,550,551,549,550,551,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,550,550,550,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,549,550,550,550,550,550,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,550,550,550,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,550,550,550,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,549,550,550,549,550,549,550,549,550,90,90,0,0,0,0,0,0,0,0,0,0,62,59,61,62,59,61,62,61,62,0,0,195,196,195,196,195,196,195,196,195,196,195,196,195,196,195,196,195,196,196,195,196,196,195,195,196,195,196,195,195,196,195,196,195,196,0,195,196,195,196,195,196,195,196,195,196,195,195,196,195,196,195,196,195,196,195,196,195,196,195,196,195,196,195,196,195,196,195,196,0,0,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,198,197,198,197,198,198,197,198,197,198,198,197,198,197,198,198,198,197,197,198,0,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,0,0,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,199,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,199,199,200,0,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,199,200,0,0,202,203,202,203,202,203,202,203,202,203,202,203,202,203,202,203,202,202,203,202,203,202,203,202,203,202,203,202,203,202,202,203,202,203,0,202,203,202,203,202,203,202,203,202,203,202,203,202,203,202,202,202,202,203,202,203,202,203,202,203,202,203,202,203,202,203,202,203,202,203,0,0,0,0,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,0,0,0,206,204,205,205,206,206,204,205,205,206,206,204,205,206,204,205,206,0,204,205,206,204,205,206,206,206,0,204,205,206,0,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,0,0,0,0,204,205,206,204,205,206,0,0,0,0,0,0,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,0,204,205,206,0,0,207,207,207,207,207,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,207,208,207,208,207,207,208,208,207,208,0,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,207,208,561,562,0,0,0,0,0,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,209,209,210,211,209,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,209,0,209,210,211,0,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,211,209,210,209,210,211,0,209,210,211,563,563,0,0,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,220,219,220,0,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,219,220,0,0,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,0,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,221,222,0,0,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,0,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,223,224,0,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,0,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,0,0,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,227,227,226,227,0,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,226,227,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,0,228,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,0,229,231,231,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,564,564,564,0,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,0,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,0,0,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,233,233,234,0,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,233,234,236,236,236,0,0,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,235,236,235,236,235,236,235,235,236,236,235,236,0,235,236,235,236,235,236,235,236,235,236,235,236,235,236,235,235,236,235,236,235,236,235,236,235,236,235,236,235,235,236,235,236,565,566,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,0,241,241,241,0,241,241,0,0,0,241,241,241,241,241,239,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,239,238,239,240,238,239,240,241,238,239,240,241,241,238,239,240,241,238,239,240,241,239,241,238,239,240,241,238,239,240,241,238,239,240,241,238,238,239,239,240,240,240,240,238,239,240,241,0,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,239,238,239,240,241,240,240,240,240,240,238,239,238,239,240,241,238,239,240,241,239,241,240,240,240,240,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,240,241,238,239,238,239,240,241,238,239,240,241,567,568,569,570,571,572,573,571,574,575,568,572,567,574,576,569,567,567,571,0,0,0,0,0,0,0,0,0,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,242,243,244,245,250,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,246,247,248,249,242,243,244,245,246,247,248,249,242,243,244,245,246,247,248,249,242,244,243,244,244,245,250,250,246,247,248,249,242,243,244,244,245,250,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,249,245,250,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,244,244,250,0,249,243,244,245,250,246,247,248,249,242,250,0,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,245,243,244,245,250,246,247,248,249,242,245,246,247,243,244,245,246,247,248,249,242,243,244,245,246,247,248,249,242,242,249,0,243,244,245,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,245,250,246,247,248,249,242,243,244,246,247,248,249,242,243,244,245,250,246,247,248,249,242,242,243,244,245,250,246,247,248,249,242,242,242,0,0,255,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,27,255,27,255,27,255,255,27,27,255,27,0,255,27,255,27,255,27,255,27,255,27,255,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,255,27,0,0,0,0,0,0,0,0,0,0,153,256,257,258,253,259,153,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,153,258,258,153,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,153,256,257,258,253,259,256,256,257,257,258,253,259,259,153,153,260,256,256,257,257,258,253,259,259,153,153,260,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,153,153,153,153,259,153,260,256,257,258,253,259,153,153,260,256,257,258,253,259,153,260,256,256,257,257,258,258,253,253,259,259,153,258,153,256,257,258,253,259,153,260,260,0,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,253,258,153,258,153,256,257,258,253,259,153,260,256,257,258,253,259,153,260,153,258,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,153,260,256,257,258,253,259,256,257,258,253,259,153,260,256,257,258,253,259,153,260,0,266,0,0,0,0,0,0,0,0,0,266,266,0,0,0,266,266,0,266,0,0,0,266,266,266,0,0,0,0,0,0,0,266,0,266,266,266,266,266,266,266,278,278,278,275,277,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,265,275,277,267,267,274,265,276,273,282,282,282,282,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,213,281,213,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,272,281,263,213,264,265,266,267,268,271,273,274,275,276,277,278,279,280,281,282,283,284,282,269,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,280,281,282,283,284,263,213,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,279,279,213,271,270,263,267,268,269,270,271,272,281,265,265,265,265,265,265,274,274,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,276,283,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,263,263,213,213,264,264,265,265,266,266,267,267,268,268,271,271,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,279,264,264,279,273,283,267,270,272,269,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,213,265,267,273,281,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,267,279,278,279,279,279,267,268,273,265,264,266,268,269,270,271,272,274,275,277,278,279,282,283,284,281,281,282,282,213,267,273,269,277,281,282,281,271,272,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,284,269,263,267,268,269,270,271,272,264,269,273,278,278,273,268,281,273,283,283,267,270,270,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,213,265,267,273,281,213,265,267,273,281,213,265,267,269,273,280,281,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,265,261,263,213,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,278,282,282,577,578,579,580,581,579,581,581,581,581,577,582,583,584,585,578,586,581,579,580,587,588,589,577,584,590,579,588,583,585,578,586,581,591,580,587,588,586,586,577,584,590,578,586,581,579,580,586,586,586,586,586,586,580,577,578,579,580,583,583,580,578,589,586,586,584,577,581,579,577,581,579,580,580,582,587,577,581,579,577,581,579,577,581,579,577,581,579,577,581,579,577,581,579,577,578,586,581,579,580,589,582,583,584,587,577,579,577,579,577,579,577,578,586,581,591,579,580,584,590,584,584,584,590,590,579,578,589,591,580,584,591,588,583,583,589,580,580,580,580,580,580,585,578,585,578,583,589,590,585,582,587,577,578,586,581,579,580,583,583,583,583,0,288,0,0,0,0,0,0,288,0,218,218,218,218,218,218,218,218,218,218,218,218,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,592,593,0,288,0,0,0,0,0,293,0,293,0,0,288,0,293,0,0,217,217,217,594,287,288,288,289,290,295,217,215,291,216,292,293,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,288,594,287,288,289,290,295,217,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,289,287,288,289,290,215,291,216,292,293,287,288,289,290,215,291,216,292,293,287,288,289,290,215,291,216,292,293,288,289,289,217,289,289,290,288,217,287,288,289,290,295,215,291,216,292,293,594,287,287,288,289,290,295,217,215,291,216,292,292,293,594,287,287,288,289,290,295,217,215,291,216,292,292,293,217,216,293,216,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,288,293,288,217,594,288,293,288,293,293,295,288,215,291,216,292,293,594,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,287,287,288,288,289,289,290,290,295,295,215,215,291,291,216,216,292,292,293,293,290,217,288,217,290,290,217,288,594,287,288,289,290,295,217,215,291,216,292,293,217,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,215,291,217,217,289,288,289,0,216,287,288,289,290,215,291,216,292,293,287,288,289,290,215,291,216,292,293,289,216,293,216,287,288,217,217,217,217,217,217,217,217,217,287,288,289,290,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,287,289,215,291,216,292,293,594,287,288,289,290,295,217,215,291,216,292,293,217,217,217,217,594,287,288,289,290,295,217,215,291,216,292,293,295,592,593,331,324,0,324,0,385,0,0,0,595,0,0,379,0,596,596,596,596,596,596,596,596,596,378,409,409,0,400,355,0,0,0,0,0,325,334,334,316,329,332,334,316,0,400,355,0,408,0,0,418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,400,355,0,0,0,0,0,0,0,0,400,355,408,0,0,400,355,453,400,355,0,332,332,332,0,0,325,0,313,313,313,0,0,0,0,0,0,408,595,322,0,382,401,382,401,364,325,328,333,333,333,333,333,382,401,0,317,317,313,324,324,324,415,0,364,0,0,385,328,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,0,0,0,0,0,332,0,400,355,0,400,355,0,0,597,334,0,418,0,0,0,0,0,0,0,0,334,0,0,0,0,0,0,0,0,313,313,364,364,324,325,328,324,324,324,0,0,332,325,328,317,334,389,322,0,322,389,0,378,378,0,0,0,0,418,0,0,0,378,331,0,333,333,333,332,362,363,363,363,362,363,0,418,328,328,325,328,0,0,598,598,0,0,0,0,0,0,0,400,355,0,0,0,598,596,0,0,0,0,327,334,326,326,326,326,0,0,0,0,0,0,418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,400,355,0,400,355,0,0,400,355,327,328,0,0,325,334,0,0,0,400,355,0,397,0,0,0,0,0,0,397,0,0,0,298,597,298,0,453,453,0,326,326,326,326,0,325,328,0,0,0,0,0,0,0,0,400,355,0,0,0,0,0,400,355,0,0,0,0,416,0,415,0,415,379,324,379,324,302,304,305,306,307,308,309,310,310,311,312,314,402,314,315,312,314,402,314,312,314,402,314,315,318,309,318,309,310,310,310,310,340,323,323,324,325,326,327,328,313,329,330,331,332,316,317,333,334,375,310,323,336,323,311,310,323,318,323,302,318,337,338,339,318,310,318,310,318,310,595,425,433,428,441,426,453,427,376,378,378,302,375,315,347,366,324,324,379,380,381,382,382,346,367,383,384,384,361,385,385,338,386,386,387,387,359,388,337,350,368,351,369,352,370,360,360,364,364,325,325,358,326,326,389,340,318,336,339,357,390,390,356,356,391,391,311,309,310,323,392,392,296,327,327,393,298,394,395,396,396,319,319,328,328,397,397,398,398,322,320,321,399,313,313,308,304,305,348,362,400,400,401,401,402,402,329,329,355,403,404,299,405,363,406,407,330,330,408,408,331,331,306,307,409,409,410,411,412,413,414,332,332,415,415,416,416,422,301,417,312,314,297,316,316,317,317,373,333,333,374,418,334,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,341,341,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,341,341,341,341,302,308,305,341,341,341,341,341,341,324,382,384,386,387,360,325,326,390,391,327,396,319,328,398,313,400,401,402,329,330,331,332,415,416,316,317,333,334,346,346,341,341,341,341,321,318,341,341,348,348,348,306,341,341,346,346,321,301,346,346,346,346,341,341,341,341,341,341,341,341,341,341,318,341,341,348,348,348,306,341,341,341,341,341,302,308,304,305,348,348,348,306,307,318,318,356,359,361,361,359,301,314,362,363,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,428,441,359,383,392,383,392,337,310,348,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,302,304,305,306,307,366,367,368,369,370,323,314,323,323,311,301,301,314,301,314,302,308,305,302,308,304,305,348,306,307,373,373,373,357,341,302,308,304,305,348,348,348,306,307,323,357,323,357,341,302,308,304,305,348,348,348,306,307,357,307,307,310,375,376,315,299,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,301,417,312,314,297,316,317,373,333,374,418,334,419,341,302,308,304,305,348,348,348,306,307,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,301,417,312,314,297,316,317,373,333,374,418,334,419,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,301,417,312,314,297,316,317,373,333,418,334,419,324,325,326,391,327,328,313,329,331,332,316,317,333,334,298,428,441,394,396,299,298,428,441,394,396,299,419,419,419,419,419,310,428,441,373,312,314,402,314,385,324,325,326,327,328,313,329,331,332,316,317,333,334,301,314,341,341,302,308,304,305,348,348,348,306,307,312,341,341,339,341,302,308,304,305,348,348,348,306,307,341,302,308,304,305,348,348,348,306,307,341,341,312,302,419,312,314,314,417,419,419,417,417,417,417,422,347,366,346,367,350,368,351,369,352,370,346,417,417,324,361,325,326,296,327,328,313,329,331,332,297,316,317,333,334,302,308,304,305,307,301,314,301,314,301,314,301,314,393,426,367,346,301,314,338,381,338,375,350,351,352,347,383,337,350,351,352,393,308,425,426,427,376,378,375,315,347,366,324,380,381,346,361,385,338,386,386,359,360,360,325,358,389,340,318,336,339,357,390,356,391,311,309,310,296,394,395,396,319,319,328,398,322,321,399,313,402,329,403,405,407,330,414,332,415,422,417,297,316,317,373,333,374,334,419,311,337,314,309,314,311,309,311,314,312,314,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,301,417,312,314,297,316,317,373,333,374,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,356,324,325,326,327,328,313,329,331,332,316,317,333,334,393,406,304,310,323,323,595,425,433,428,441,426,453,427,341,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,341,341,341,341,599,599,599,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,375,378,324,382,384,385,386,387,360,364,325,326,390,356,391,392,327,396,319,328,397,398,313,400,401,402,329,330,408,331,409,332,415,416,316,317,333,334,324,382,384,386,387,360,325,326,390,391,327,396,319,328,398,313,400,401,402,329,330,331,332,415,416,316,317,333,334,323,340,310,391,340,340,340,324,325,326,327,328,313,329,331,332,316,317,333,334,310,323,314,346,323,402,314,323,378,347,366,324,379,380,381,382,346,367,383,384,385,386,387,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,323,392,327,394,396,319,328,397,398,322,320,321,399,313,304,362,400,401,402,329,330,408,331,409,332,415,416,316,317,333,334,419,378,324,382,384,385,386,387,360,364,325,326,390,356,391,392,327,396,319,328,397,398,313,400,401,402,329,330,408,331,409,332,415,416,316,317,333,334,375,375,374,374,374,374,374,374,374,374,374,324,325,326,327,328,313,329,331,332,316,317,333,334,305,416,413,410,422,422,414,306,341,341,306,422,393,393,330,450,450,299,376,323,302,340,374,302,305,393,378,375,347,366,324,324,324,324,324,379,380,381,382,346,367,383,384,385,386,387,337,350,368,351,369,352,370,360,364,325,325,325,325,325,358,326,326,326,326,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,327,327,327,327,327,393,298,394,396,319,328,328,328,328,328,397,398,320,321,399,313,313,313,313,313,304,348,362,400,401,402,329,329,329,329,329,403,404,405,363,406,330,408,331,331,331,331,331,306,307,409,409,410,411,412,413,332,332,332,332,332,415,416,422,316,316,316,316,316,317,317,317,317,317,333,333,333,333,333,334,334,334,334,334,419,339,338,312,314,399,406,314,312,314,399,314,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,358,326,389,340,340,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,322,320,321,321,399,313,308,304,305,348,362,400,401,402,402,402,329,355,403,404,299,405,363,406,407,330,408,331,331,306,307,409,410,411,412,413,414,332,415,416,416,422,422,301,417,312,314,297,316,317,373,333,374,374,374,418,334,419,309,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,324,325,326,327,328,313,329,331,332,316,317,333,334,309,309,394,306,309,306,309,400,324,325,326,327,328,313,329,331,332,316,317,333,334,302,384,386,360,319,318,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,309,309,400,425,425,426,426,427,427,376,376,378,378,375,375,315,315,347,347,366,366,324,324,380,380,381,381,346,346,361,361,385,385,338,338,386,386,359,359,360,360,325,325,358,358,389,389,340,340,318,318,336,336,339,339,357,357,390,390,356,356,391,391,311,311,309,309,310,310,296,296,394,394,395,395,396,396,319,319,328,328,398,398,322,322,321,321,399,399,313,313,402,402,329,329,403,403,405,405,407,407,330,330,414,414,332,332,415,415,422,422,417,417,297,297,316,316,317,317,373,373,333,333,374,374,334,334,419,419,338,338,338,361,359,296,297,324,382,384,386,387,360,325,326,390,391,327,298,396,319,328,398,313,400,401,402,329,330,331,332,415,416,316,317,333,334,359,359,361,359,296,297,359,361,359,296,297,361,296,297,310,310,323,339,323,410,374,374,411,412,414,301,314,320,434,433,434,433,417,299,324,382,384,386,387,360,325,326,390,391,327,298,396,319,328,398,313,400,401,402,329,330,331,332,415,416,316,317,333,334,307,301,314,307,321,380,381,403,419,419,383,311,386,359,360,296,296,319,297,297,407,296,297,302,305,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,348,324,361,359,325,326,296,327,328,313,329,331,332,297,316,317,333,334,297,337,318,339,358,407,407,407,407,407,407,375,358,404,324,325,326,327,328,313,329,331,332,316,317,333,334,417,417,417,417,373,417,373,373,373,417,324,325,326,327,328,313,329,331,332,316,317,333,334,595,425,433,428,441,426,453,427,376,378,302,375,315,347,347,366,366,324,379,380,381,382,346,367,367,383,384,361,385,338,386,387,359,388,337,350,350,368,368,351,351,369,369,352,352,370,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,314,297,316,317,373,333,374,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,384,386,360,319,338,375,309,309,384,386,360,319,297,341,311,324,325,326,327,328,313,329,331,332,316,317,333,334,302,406,310,310,341,341,304,348,348,348,306,600,364,310,324,361,325,326,296,327,328,313,329,331,332,297,316,317,333,334,346,310,312,416,364,310,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,364,310,310,357,406,363,388,310,307,397,312,314,310,310,416,416,318,309,361,359,296,297,297,297,361,296,297,337,337,388,388,359,375,375,375,375,361,361,323,323,318,310,361,296,297,346,346,367,350,368,351,369,352,370,346,310,323,336,323,311,338,388,338,338,338,310,323,318,323,302,308,304,305,306,307,347,366,346,367,350,368,351,369,352,370,347,366,346,367,350,368,351,369,352,370,346,367,350,368,352,370,346,367,350,368,352,370,302,308,304,305,306,307,309,347,366,367,346,347,366,367,346,340,393,393,600,306,354,348,306,354,354,348,388,388,346,310,323,310,323,367,310,323,346,301,441,299,361,307,344,302,308,305,598,344,302,308,305,598,344,302,308,305,340,309,310,312,314,341,302,310,322,308,304,305,348,348,348,306,307,312,314,314,312,380,375,381,394,394,299,375,357,375,375,375,330,380,375,375,427,381,450,346,350,351,369,352,346,367,368,369,370,346,367,368,369,370,367,368,369,370,367,368,369,370,346,318,359,419,419,338,337,328,328,425,433,426,427,376,302,315,347,366,346,367,361,338,359,388,337,350,368,351,369,352,370,318,309,323,392,296,393,395,396,399,308,304,305,407,330,307,301,417,314,297,373,374,323,323,323,413,310,358,330,373,441,304,405,306,324,325,326,327,328,313,329,331,332,316,317,333,334,405,307,410,338,305,302,337,422,306,374,374,374,312,388,324,325,326,391,327,328,313,329,331,332,316,317,333,334,406,0,306,301,314,320,310,323,312,314,358,323,314,312,314,374,374,376,310,375,309,302,308,304,305,348,306,307,302,308,304,305,348,306,307,302,305,307,302,305,302,307,373,373,296,409,318,344,302,302,308,308,305,417,373,410,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,301,417,312,314,297,316,317,373,333,374,418,334,419,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,301,417,312,314,297,316,317,373,333,374,418,334,419,407,340,310,405,309,324,361,359,325,326,296,327,328,313,329,331,332,297,316,317,333,334,361,359,359,298,427,427,427,427,427,427,310,310,312,314,399,406,314,312,314,399,314,310,310,323,302,305,428,441,405,428,441,405,419,388,359,338,307,338,310,323,312,314,301,314,301,314,301,314,301,314,301,314,301,314,307,302,304,305,306,307,305,301,314,307,305,305,307,298,314,324,325,326,327,328,313,329,331,332,316,317,333,334,312,312,312,310,310,310,310,310,312,312,347,346,350,351,352,312,310,375,346,310,312,310,310,302,312,312,310,375,346,350,351,352,310,310,347,346,350,351,352,347,346,350,351,352,346,350,352,346,350,352,347,346,347,346,310,309,312,312,346,367,350,368,351,352,370,346,350,351,352,346,350,351,352,346,350,351,352,346,350,351,352,310,310,310,297,310,312,312,312,312,310,312,312,307,307,312,312,312,310,312,312,312,314,312,341,302,308,304,305,348,348,348,306,307,308,312,311,310,419,323,311,323,441,405,405,312,314,402,314,307,298,425,426,381,298,427,324,325,326,309,327,328,313,329,331,332,316,317,333,334,324,325,326,309,327,328,313,329,331,332,316,317,333,334,419,309,306,354,354,354,354,396,324,325,326,327,328,313,329,331,332,316,317,333,334,403,406,381,381,313,330,333,374,311,311,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,301,417,312,314,297,316,317,373,333,374,418,334,419,348,348,307,409,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,324,325,326,327,328,313,329,331,332,316,317,333,334,302,339,394,394,299,299,309,422,302,318,310,323,312,314,302,301,314,302,301,314,301,314,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,413,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,598,344,302,308,305,307,324,325,326,327,328,313,329,331,332,316,317,333,334,307,0,0,416,415,415,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,395,373,441,376,373,356,373,340,323,314,441,310,323,405,312,314,310,339,310,339,0,318,310,337,416,413,302,305,414,422,422,312,595,425,433,428,441,426,453,427,376,378,302,375,315,347,366,324,379,380,381,382,346,367,383,384,361,385,338,386,387,359,388,337,350,368,351,369,352,370,360,364,325,358,326,389,340,318,336,339,357,390,356,391,311,309,310,323,392,296,327,393,298,394,395,396,319,328,397,398,322,320,321,399,313,308,304,305,348,362,400,401,402,329,355,403,404,299,405,363,406,407,330,408,331,306,307,409,410,411,412,413,414,332,415,416,422,301,417,312,314,297,316,317,373,333,374,418,334,419,315,311,310,330,302,330,376,417,373,309,340,309,318,309,309,396,601,602,602,602,0,0,0,0,0,0,603,0,0,0,0,0,0,0,0,0,604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,605,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,606,0,0,0,0,0,607,608,609,610,611,612,613,614,615,616,617,618,619,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,603,0,0,0,620,0,0,0,0,0,0,0,621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,605,0,0,0,622,0,0,0,0,0,0,623,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,0,620,143,142,454,142,144,144,144,144,141,149,150,455,148,456,145,146,145,145,620,143,150,620,143,150,142,142,142,142,142,142,142,142,142,142,608,609,143,143,143,143,143,143,143,143,430,430,140,140,140,142,142,142,142,141,141,141,141,150,150,150,150,455,455,455,455,143,143,143,143,142,142,141,141,150,150,455,455,142,142,142,142,142,142,626,465,465,465,465,465,465,142,142,626,142,144,144,149,149,144,144,149,149,626,144,142,142,459,145,146,145,146,145,146,142,146,142,146,142,142,145,146,142,141,142,142,142,142,142,620,143,143,143,143,454,454,462,465,430,430,140,140,147,147,142,142,431,432,466,467,468,144,144,435,435,141,141,149,149,150,150,455,455,148,148,456,456,145,145,146,146,469,469,470,470,471,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,142,142,141,141,143,140,147,142,144,141,149,150,148,456,145,146,469,470,471,460,461,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,455,142,147,142,435,627,147,432,435,435,144,460,461,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,144,455,147,142,435,603,147,431,432,435,435,435,435,150,150,142,142,620,143,150,620,143,150,461,465,465,465,142,620,143,150,628,620,143,150,142,462,144,149,144,144,149,142,142,142,0,623,462,142,626,143,454,462,465,430,140,147,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,460,142,142,142,142,144,144,144,144,141,149,150,455,148,456,145,145,145,145,146,146,146,146,620,143,142,620,143,0,629,469,470,471,142,0,628,143,454,465,430,140,147,142,431,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,465,430,140,147,142,431,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,630,454,147,142,431,432,435,435,150,142,143,465,430,140,147,142,431,466,467,468,144,435,149,150,455,148,456,145,146,469,470,471,460,461,477,480,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,144,142,476,142,142,142,142,142,142,142,142,142,143,620,143,142,144,144,144,150,455,142,144,144,144,150,455,142,142,142,0,0,0,0,142,142,142,141,150,142,142,142,142,142,142,628,620,143,150,144,620,620,143,150,620,142,142,463,480,480,142,143,454,147,142,144,144,144,141,149,150,455,148,145,146,454,142,144,144,144,144,141,149,150,455,148,456,145,146,454,142,144,144,144,144,141,149,150,455,148,456,145,146,454,142,144,144,144,144,141,149,150,455,148,456,145,146,143,454,462,465,430,140,147,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,431,432,466,467,468,144,144,435,141,141,141,141,141,141,141,149,150,150,455,148,148,148,148,148,148,148,456,456,456,456,456,456,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,431,432,466,467,468,144,435,141,141,141,141,141,141,141,149,150,150,455,148,148,148,148,148,148,148,456,456,456,456,456,456,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,142,464,472,473,439,459,142,463,479,144,144,625,140,0,0,614,615,143,143,143,143,143,143,143,143,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,430,140,140,140,142,142,142,142,142,142,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,141,141,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,150,150,455,455,455,455,455,455,148,148,148,148,148,148,148,148,148,148,148,148,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,143,143,143,143,454,454,454,454,454,454,454,454,454,454,142,142,142,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,141,149,149,149,149,150,455,455,455,148,148,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,0,142,150,142,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,455,144,0,143,454,430,140,147,142,144,435,141,149,150,455,148,456,145,146,469,470,471,143,140,147,142,144,141,149,150,148,456,145,146,469,470,471,628,142,476,478,478,144,144,623,143,454,430,140,147,142,142,144,144,144,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,143,454,430,140,147,142,144,435,141,149,150,455,148,456,145,146,469,470,471,144,149,620,143,142,144,150,620,143,150,620,143,142,142,142,435,435,435,435,605,143,454,142,144,144,141,149,150,148,456,145,146,605,143,454,142,144,144,141,149,150,148,456,145,146,142,144,149,145,145,146,146,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,620,143,143,143,143,143,143,143,143,143,454,465,430,140,147,142,142,142,142,142,142,142,142,142,431,432,466,467,468,144,144,144,144,435,141,141,149,149,150,150,455,148,148,456,456,145,145,146,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,142,142,461,628,628,628,628,628,628,628,628,620,143,143,143,143,143,454,462,465,430,140,147,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,431,432,466,467,468,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,435,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,455,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,456,456,456,456,456,456,456,456,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,144,142,142,144,149,144,144,149,149,142,142,142,142,142,142,144,144,141,144,142,142,142,142,142,142,142,142,142,142,142,142,142,142,144,149,143,143,142,142,142,142,142,460,142,141,143,143,143,143,143,150,143,144,146,142,142,142,142,142,144,144,149,149,144,144,149,149,454,149,460,461,142,142,142,142,142,144,150,145,146,150,144,431,432,620,143,150,455,455,144,144,144,144,142,142,142,142,142,142,142,142,142,142,142,142,144,144,149,149,144,146,622,143,143,143,143,143,143,143,143,143,143,143,142,142,142,142,142,142,142,142,141,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,143,143,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,454,142,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,141,141,149,149,149,149,149,149,149,149,150,455,148,148,148,148,148,148,456,456,456,145,145,145,145,145,146,146,146,143,143,143,143,143,631,143,430,140,142,142,142,142,142,142,142,142,150,148,143,143,454,454,147,147,142,142,144,144,141,141,149,149,150,150,455,455,148,148,145,145,146,146,142,142,141,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,603,603,627,627,143,140,147,142,144,141,149,150,148,456,145,146,469,470,471,142,603,142,141,603,627,627,142,141,142,141,474,150,629,471,143,454,140,147,142,144,141,149,150,148,456,145,146,469,470,471,142,142,142,142,620,143,143,142,142,142,142,142,632,454,142,142,142,142,144,144,144,144,144,149,149,150,455,148,456,145,146,459,459,142,459,626,626,626,143,150,620,143,142,142,454,142,142,142,141,149,150,455,454,142,142,142,141,150,455,0,142,141,0,142,141,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,150,142,464,142,142,142,142,142,142,142,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,462,465,430,140,147,142,431,432,466,467,468,144,435,149,150,455,148,456,145,146,469,470,471,460,461,477,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,454,144,149,460,461,142,142,630,147,142,431,432,435,435,150,142,431,432,432,143,143,143,145,459,459,632,454,144,144,144,144,144,149,149,148,145,146,460,461,464,632,454,144,144,144,144,144,149,149,148,145,146,632,454,144,144,144,144,144,149,149,148,145,146,632,144,144,144,149,149,145,632,454,144,144,144,144,144,149,149,145,146,456,631,603,147,431,432,435,435,0,142,435,141,459,620,143,143,142,143,143,454,454,454,462,465,430,140,147,142,142,431,432,466,467,468,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,435,141,141,141,149,149,149,149,149,149,149,149,149,150,150,455,455,148,148,148,148,148,148,148,456,456,456,456,145,145,145,145,145,145,146,146,146,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,142,472,473,439,475,143,143,143,142,150,628,628,142,142,463,143,142,150,455,146,144,142,141,142,141,142,142,142,464,473,439,143,464,439,605,143,454,142,144,144,141,149,150,148,456,145,146,142,141,460,150,142,142,435,141,459,142,144,144,150,455,145,145,145,145,0,603,620,143,144,150,628,620,143,628,464,620,143,620,143,628,620,143,628,142,144,149,145,145,146,146,142,144,149,145,145,146,146,142,142,142,141,142,142,150,142,150,142,141,142,605,142,454,149,0,454,149,454,149,0,628,618,619,430,140,140,140,142,628,142,142,141,141,142,144,633,142,466,467,468,0,628,616,617,430,140,140,140,142,628,142,142,141,141,620,143,620,143,610,611,143,143,143,143,143,143,143,143,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,430,140,140,140,142,142,142,142,142,142,142,142,142,142,142,142,142,142,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,141,141,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,455,455,455,455,455,455,455,455,455,455,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,456,456,456,456,456,456,456,456,456,456,456,456,456,456,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,620,143,143,143,143,143,143,143,143,143,454,454,454,454,454,454,454,454,454,454,454,454,454,454,142,142,142,142,142,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,141,149,149,149,149,150,150,150,455,455,455,455,455,148,148,456,456,456,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,142,625,140,142,142,143,143,142,142,144,144,144,141,141,150,150,455,455,142,143,462,430,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,144,144,435,141,141,141,141,141,141,149,149,150,148,148,148,148,148,148,456,456,456,456,456,456,145,145,145,145,146,146,146,146,460,461,463,464,472,473,474,439,475,476,477,478,479,480,144,462,144,142,142,142,144,142,145,145,144,149,146,146,142,142,142,142,142,142,142,431,432,144,464,477,431,432,464,474,144,144,626,633,606,143,142,142,466,467,468,150,150,455,620,143,143,606,143,142,142,150,150,455,142,150,455,142,150,455,142,142,463,479,0,143,143,454,454,142,142,144,144,144,144,149,149,150,150,455,455,148,148,456,456,145,145,146,146,626,141,142,142,142,142,142,142,150,472,473,439,464,0,0,142,141,0,0,0,0,0,0,0,459,459,142,628,0,142,150,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,142,142,620,143,620,143,144,144,149,149,150,620,143,143,143,142,142,142,146,142,146,142,142,143,143,142,142,142,150,460,461,460,461,142,456,477,603,147,431,432,435,435,627,147,432,435,435,150,142,472,473,474,475,479,472,475,142,142,142,142,142,144,472,475,142,477,464,143,454,465,430,140,147,142,431,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,465,430,140,147,142,431,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,620,143,455,465,465,465,465,465,465,465,620,143,477,478,479,462,462,462,462,150,454,142,142,144,144,144,144,141,149,150,455,148,456,145,146,143,143,143,143,143,143,143,143,143,143,143,143,142,464,142,142,142,142,142,142,142,142,142,144,149,149,144,142,142,142,142,142,605,143,454,142,144,144,141,149,150,148,456,145,146,605,143,454,142,144,144,141,149,150,148,456,145,146,607,147,142,431,432,435,435,435,435,142,435,142,142,142,142,142,142,460,150,144,145,145,145,145,145,144,144,149,149,144,144,144,144,149,149,145,146,620,143,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,150,620,143,143,142,606,143,142,142,150,455,144,144,149,149,144,144,149,149,144,144,146,142,144,605,143,454,142,144,144,141,149,150,148,456,145,146,142,142,142,461,460,460,454,142,142,461,460,460,142,143,142,460,142,146,460,143,460,461,460,461,460,461,603,147,142,431,432,435,435,142,620,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,634,622,143,143,143,143,143,143,143,143,143,143,143,142,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,635,142,141,622,143,143,143,143,143,143,143,143,143,143,143,634,622,143,143,143,143,143,143,143,143,143,143,143,143,622,622,143,143,143,143,143,143,143,143,143,143,143,143,622,634,634,635,142,141,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,634,634,634,634,634,634,634,634,622,143,143,143,143,143,143,143,143,143,143,143,635,142,141,635,142,141,635,142,141,635,142,141,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,635,142,141,622,143,143,143,143,143,143,143,143,143,143,143,634,622,143,143,143,143,143,143,143,143,143,143,143,634,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,634,622,143,143,143,143,143,143,143,143,143,143,143,634,635,142,141,635,142,141,635,142,141,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,635,142,141,622,143,143,143,143,143,143,143,143,143,143,143,634,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,143,622,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,143,622,622,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,622,143,622,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,622,143,143,143,143,143,143,143,143,143,143,143,143,622,143,622,622,143,143,143,143,143,143,143,143,143,143,143,150,142,142,634,622,143,143,143,143,143,143,143,143,143,143,143,620,143,150,144,620,143,620,142,477,142,620,143,150,620,143,620,623,142,144,144,144,149,149,142,142,142,142,142,142,464,472,473,439,475,477,142,142,142,142,142,142,464,472,473,439,475,142,142,142,142,477,605,143,454,142,144,144,141,149,150,148,456,145,146,620,143,150,150,141,603,147,142,431,432,435,435,612,613,143,143,143,143,143,143,143,143,430,430,140,140,140,142,142,142,142,141,141,141,141,141,141,141,141,150,150,150,150,455,455,455,455,143,143,143,143,142,142,141,141,150,150,455,455,142,143,143,142,142,142,142,142,0,142,141,142,142,142,142,142,627,142,141,627,142,142,142,142,142,142,620,143,150,620,143,150,144,149,620,143,143,454,142,142,144,144,144,141,149,148,456,145,146,460,461,143,143,143,143,143,143,144,145,143,454,465,430,140,147,142,431,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,620,477,460,461,144,144,143,142,144,141,149,150,148,456,145,146,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,454,142,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,141,141,149,149,149,149,149,149,149,149,150,455,148,148,148,148,148,148,456,456,456,145,145,145,145,145,146,146,146,143,143,143,143,143,143,460,142,142,142,142,142,142,142,142,142,142,142,142,142,632,454,142,142,144,144,144,144,144,149,149,148,456,145,146,632,454,142,144,144,144,144,144,149,149,145,146,144,145,145,145,145,145,142,149,142,149,142,620,143,142,0,0,143,454,462,465,430,140,147,142,431,432,466,467,468,144,144,144,144,144,144,144,144,435,141,149,150,455,148,456,145,145,145,145,145,146,146,146,146,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,454,142,150,455,456,472,473,439,475,454,142,150,455,456,439,456,0,145,145,144,476,477,478,144,477,142,142,142,142,144,142,144,144,149,620,143,142,142,142,631,430,140,628,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,463,473,439,477,480,142,454,142,144,144,144,144,141,149,150,455,148,456,145,146,142,463,464,472,473,474,439,475,476,479,464,474,472,475,479,460,461,620,143,143,142,606,143,142,142,150,455,454,144,149,460,461,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,142,463,477,631,430,140,142,150,148,456,0,150,142,142,142,142,142,142,142,142,142,143,454,462,465,430,140,147,142,431,432,466,467,468,144,435,141,149,150,455,148,456,145,146,469,470,471,460,461,463,464,472,473,474,439,459,475,476,477,478,479,480,142,142,0,0,142,142,626,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,142,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,142,0,143,143,142,142,150,150,455,455,142,142,142,142,142,460,461,142,142,142,605,142,142,460,461,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,0,0,603,0,604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,606,0,0,0,607,608,609,610,611,612,613,614,615,616,617,618,619,0,0,0,603,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,623,0,0,0,0,0,0,0,0,624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,608,609,0,627,603,623,630,0,0,142,0,625,0,614,615,623,631,603,603,627,627,603,603,627,627,0,630,631,603,0,603,618,619,633,616,617,610,611,625,633,606,606,603,627,607,606,603,623,0,603,612,613,627,627,631,0,606,631,0,636,636,0,0,0,0,0,636,636,636,636,637,0,0,638,639,640,641,0,0,0,0,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,499,500,495,495,496,496,497,497,498,498,499,499,500,500,501,501,502,502,503,503,504,504,505,505,506,506,507,507,508,508,509,509,510,510,511,511,512,512,513,513,514,514,515,515,516,516,517,517,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,525,526,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,500,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,501,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,501,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,503,504,505,506,508,509,510,511,513,514,515,516,518,519,520,521,523,524,525,526,504,505,506,509,510,511,514,515,516,519,520,521,524,525,526,505,506,510,511,515,516,520,521,525,526,506,511,516,521,526,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,503,504,505,506,508,509,510,511,513,514,515,516,518,519,520,521,523,524,525,526,504,505,506,509,510,511,514,515,516,519,520,521,524,525,526,505,506,510,511,515,516,520,521,525,526,506,511,516,521,526,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,508,509,510,511,513,514,515,516,518,519,520,521,523,524,525,526,509,510,511,514,515,516,519,520,521,524,525,526,510,511,515,516,520,521,525,526,511,516,521,526,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,513,514,515,516,518,519,520,521,523,524,525,526,514,515,516,519,520,521,524,525,526,515,516,520,521,525,526,516,521,526,517,518,519,520,521,522,523,524,525,526,517,518,519,520,521,522,523,524,525,526,518,519,520,521,523,524,525,526,519,520,521,524,525,526,520,521,525,526,521,526,522,523,524,525,526,522,523,524,525,526,523,524,525,526,524,525,526,525,526,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,498,499,500,501,495,496,497,498,499,500,496,497,498,499,500,497,498,499,500,0,0,604,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,608,609,610,611,612,613,614,615,616,617,618,619,0,0,624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,625,608,609,625,614,615,631,631,618,619,616,617,610,611,625,612,613,631,631,0,0,642,643,0,0,0,0,0,0,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,491,481,491,481,491,481,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,481,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,488,489,491,492,481,482,488,489,481,482,491,481,491,481,488,489,491,492,481,482,491,481,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,488,489,491,492,481,482,0,603,0,607,0,0,0,603,0,0,0,0,0,0,627,603,630,603,603,627,627,603,603,627,627,630,603,603,603,627,607,603,603,627,627,0,0,0,644,527,527,528,528,527,528,527,528,644,527,528,644,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,644,527,527,528,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,527,528,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,621,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,629,141,150,455,629,632,632,632,632,632,632,146,455,145,632,632,145,148,456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,480,478,478,0,0,477,0,477,480,477,0,0,0,0,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,0,531,0,0,251,251,530,0,0,0,0,0,0,0,0,532,230,230,530,230,531,537,530,230,252,251,532,531,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,230,252,251,532,531,533,534,535,536,230,252,251,532,531,533,534,535,536,230,252,251,532,531,533,534,535,536,230,530,230,532,531,535,537,530,230,252,252,251,532,531,533,534,535,536,537,530,230,252,252,251,532,531,533,534,535,536,534,532,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,531,532,536,531,531,251,251,251,251,251,537,530,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,530,530,230,230,532,532,531,531,535,535,536,533,537,530,537,530,230,252,251,532,531,533,534,535,536,530,0,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,534,230,537,530,530,230,252,251,532,531,533,534,535,536,230,252,251,532,531,533,534,535,536,530,534,532,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,537,530,230,252,251,532,531,533,534,535,536,230,252,251,532,533,535,536,537,530,230,252,251,532,531,533,534,535,536,534,537,530,230,252,251,532,531,533,534,535,536,0,0,0,0,0,0,645,0,0,0,646,646,646,646,541,541,542,542,212,541,542,212,541,542,212,646,646,541,542,212,541,542,212,646,646,646,646,541,542,212,541,542,212,542,212,541,542,212,541,542,212,212,541,542,212,212,646,646,541,542,212,541,542,212,541,542,541,542,541,542,646,646,646,646,646,646,646,646,647,541,542,541,542,648,541,542,541,542,212,541,542,212,541,541,542,542,212,212,649,541,542,649,649,649,649,649,649,649,649,649,649,649,649,646,646,646,646,646,646,646,646,646,646,541,542,212,0,541,542,212,541,542,212,542,212,541,542,212,541,542,212,646,646,646,646,541,542,541,542,212,541,542,212,645,541,542,541,646,646,646,646,646,646,646,646,646,646,646,646,646,646,541,542,212,541,542,212,541,542,212,541,542,212,541,542,212,541,542,212,646,646,646,646,646,646,646,646,646,646,212,541,542,212,646,646,646,646,541,542,212,646,646,646,646,645,541,542,0,0,0,1,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,543,544,543,544,543,544,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,544,1,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,544,1,543,544,543,543,1,543,543,544,543,544,1,1,1,1,1,1,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,1,543,544,1,1,543,544,1,650,0,0,650,0,650,545,650,201,545,650,201,545,650,201,545,650,201,545,650,201,201,201,201,201,201,201,201,201,545,201,545,650,201,545,650,201,545,650,201,545,650,201,545,545,201,545,650,201,545,650,201,545,545,201,201,545,201,545,650,201,545,650,201,545,650,201,545,650,201,545,650,201,545,650,201,201,201,201,201,201,201,201,545,201,545,201,201,201,0,201,201,545,650,201,545,650,201,201,201,201,545,650,201,545,650,201,545,650,201,545,650,201,545,650,201,201],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[10],[10],[10],0,[[4,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[1],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],0,0,0,[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],0,0,0,0,[[]],[[]],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[[22,[21]],[22,[23]],[25,[24]],[26,[4]],[26,[27]],[25,[28]],[25,[29]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[[42,42,31],15],[[43,43,31],15],[[44,44,31],15],[[32,32,31],15],[[33,33,31],15],[[45,45,31],15],[[46,46,31],15],[[47,47,31],15],[[48,48,31],15],[[34,34,31],15],[[35,35,31],15],[[49,49,50],15],[[51,51,50],15],[[52,52,50],15],[[53,53,50],15],[[54,54,50],15],[[55,55,50],15],[[36,36,50],15],[[37,37,50],15],[[38,38,50],15],0,[56],[[30,30]],[57],[[44,44]],[[32,31],32],[[32,32],32],[[33,33],33],[[33,31],33],[[45,45]],[[46,46]],[[47,47]],[[48,48],48],[[34,34],34],[[34,31],34],[[35,31],35],[[35,35],35],[[52,52]],[[53,53]],[[54,54]],[[55,55],55],[[36,50],36],[[36,36],36],[[37,50],37],[[37,37],37],[[38,38],38],[[38,50],38],[[39,39],39],[[39,58],39],[[40,58],40],[[40,40],40],[[41,58],41],[[41,41],41],[[59,59],59],[[59,60],59],[[61,60],61],[[61,61],61],[[62,60],62],[[62,62],62],[[30,30]],[[44,44]],[[32,31]],[[32,32]],[[33,33]],[[33,31]],[[45,45]],[[46,46]],[[47,47]],[[34,34]],[[34,31]],[[35,35]],[[35,31]],[[52,52]],[[53,53]],[[54,54]],[[36,50]],[[36,36]],[[37,50]],[[37,37]],[[38,38]],[[38,50]],[[39,39]],[[39,58]],[[40,58]],[[40,40]],[[41,41]],[[41,58]],[[59,59]],[[59,60]],[[61,61]],[[61,60]],[[62,62]],[[62,60]],[[45,45],45],[[52,52],52],[[44,44],44],[[46,46],46],[[53,53],53],[[47,47],47],[[54,54],54],[63],[[64,63]],[65,65],[[66,31]],[[21,67]],[68,15],[69,15],[70,15],[71,15],[72,15],[[32,32],31],[[33,33],31],[[48,48],31],[[34,34],31],[[55,55],50],[[36,36],50],[[37,37],50],0,[68,15],[69,15],[70,15],[71,15],[72,15],[33,33],[34,34],[37,37],[33],[34],[37],[33,33],[34,34],[37,37],[[73,74]],[[68,74]],[[69,74]],[[70,74]],[[71,74]],[[72,74]],[[42,74]],[[43,74]],[[44,74]],[[32,74]],[[33,74]],[[45,74]],[[46,74]],[[47,74]],[[48,74]],[[34,74]],[[35,74]],[[49,74]],[[51,74]],[[52,74]],[[53,74]],[[54,74]],[[55,74]],[[36,74]],[[37,74]],[[38,74]],[[39,74]],[[40,74]],[[41,74]],[[59,74]],[[61,74]],[[62,74]],[75],[[76,75]],[[77,75]],[[77,75]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[73,2],[68,2],[[],2],[[],2],[[],2],[[],2],[69,2],[[],2],[[],2],[70,2],[[],2],[71,2],[[],2],[[],2],[[],2],[72,2],[42,2],[[],2],[[],2],[43,2],[[],2],[44,2],[[],2],[32,2],[[],2],[33,2],[[],2],[45,2],[46,2],[[],2],[47,2],[[],2],[[],2],[48,2],[[],2],[34,2],[[],2],[35,2],[49,2],[[],2],[51,2],[[],2],[[],2],[52,2],[[],2],[53,2],[54,2],[[],2],[55,2],[[],2],[36,2],[[],2],[37,2],[[],2],[[],2],[38,2],[[],2],[[],2],[39,2],[40,2],[[],2],[[],2],[[],2],[[],2],[41,2],[59,2],[[],2],[[],2],[[],2],[[],2],[61,2],[[],2],[62,2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[73,2],[[],2],[[],2],[68,2],[69,2],[[],2],[70,2],[[],2],[[],2],[71,2],[[],2],[72,2],[[],2],[42,2],[[],2],[43,2],[44,2],[[],2],[32,2],[[],2],[[],2],[33,2],[45,2],[[],2],[[],2],[46,2],[[],2],[47,2],[48,2],[[],2],[34,2],[[],2],[[],2],[35,2],[49,2],[[],2],[51,2],[[],2],[[],2],[52,2],[[],2],[53,2],[[],2],[54,2],[55,2],[[],2],[[],2],[36,2],[[],2],[37,2],[38,2],[[],2],[39,2],[[],2],[40,2],[[],2],[[],2],[41,2],[[],2],[59,2],[[],2],[61,2],[[],2],[62,2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[45,52],[44,53],[46,53],[47,54],[32,36],[39,36],[59,36],[33,37],[34,37],[40,37],[61,37],[35,38],[41,38],[62,38],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[55,48],[48,55],[32,39],[36,39],[59,39],[33,40],[34,40],[37,40],[61,40],[35,41],[38,41],[62,41],[52,45],[53,44],[54,47],[44],[32],[33],[45],[47],[34],[35],[52],[53],[54],[36],[37],[38],[39],[40],[41],[59],[61],[62],[44],[32],[33],[45],[47],[35],[39],[40],[41],[59],[61],[62],[79],[44],[32],[33],[45],[47],[48],[34],[35],[52],[53],[54],[55],[36],[37],[38],[39],[40],[41],[59],[61],[62],[44],[32],[33],[45],[47],[35],[39],[40],[41],[59],[61],[62],[73,74],[68,74],[69,74],[70,74],[71,74],[72,74],[42,74],[43,74],[44,74],[32,74],[33,74],[45,74],[46,74],[47,74],[48,74],[34,74],[35,74],[49,74],[51,74],[52,74],[53,74],[54,74],[55,74],[36,74],[37,74],[38,74],[39,74],[40,74],[41,74],[59,74],[61,74],[62,74],[73,74],[68,74],[69,74],[70,74],[71,74],[72,74],[42,74],[43,74],[44,74],[32,74],[33,74],[45,74],[46,74],[47,74],[48,74],[34,74],[35,74],[49,74],[51,74],[52,74],[53,74],[54,74],[55,74],[36,74],[37,74],[38,74],[39,74],[40,74],[41,74],[59,74],[61,74],[62,74],[30,30],[30],[32,59],[36,59],[39,59],[33,61],[34,61],[37,61],[40,61],[35,62],[38,62],[41,62],[36,32],[39,32],[59,32],[37,33],[40,33],[61,33],[37,34],[40,34],[61,34],[38,35],[41,35],[62,35],0,0,[30,31],[[],15],[[]],[[]],[[],15],[[10,15]],[[],10],[[],15],[[],15],[10],[[],80],[[],80],[15],[[],10],[[]],[[],15],[[],15],[[]],[[]],[10],[10],[[],15],[[],15],[[],15],[10,15],[[]],[[68,68],68],[[69,69],69],[[70,70],70],[[71,71],71],[[72,72],72],[[39,39]],[[39,58]],[[40,40]],[[40,58]],[[41,58]],[[41,41]],[[59,59]],[[59,60]],[[61,60]],[[61,61]],[[62,60]],[[62,62]],[[68,68]],[[69,69]],[[70,70]],[[71,71]],[[72,72]],[68,60],[69,60],[70,60],[71,60],[72,60],[[68,68],68],[[69,69],69],[[70,70],70],[[71,71],71],[[72,72],72],[[39,39]],[[39,58]],[[40,40]],[[40,58]],[[41,58]],[[41,41]],[[59,60]],[[59,59]],[[61,61]],[[61,60]],[[62,60]],[[62,62]],0,[[68,68]],[[69,69]],[[70,70]],[[71,71]],[[72,72]],[81,75],[76,75],[77,75],[82,75],[23,75],0,[[68,68],68],[[69,69],69],[[70,70],70],[[71,71],71],[[72,72],72],[[39,39]],[[39,58]],[[40,58]],[[40,40]],[[41,58]],[[41,41]],[[59,60]],[[59,59]],[[61,60]],[[61,61]],[[62,62]],[[62,60]],[[68,68]],[[69,69]],[[70,70]],[[71,71]],[[72,72]],0,[[]],[79,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],0,0,[[32,32,32],32],[[33,33,33],33],[[34,34,34],34],[[35,35,35],35],[[36,36,36],36],[[37,37,37],37],[[38,38,38],38],[[39,39,39],39],[[40,40,40],40],[[41,41,41],41],[[59,59,59],59],[[61,61,61],61],[[62,62,62],62],[[32,31,31],32],[[33,31,31],33],[[34,31,31],34],[[35,31,31],35],[[36,50,50],36],[[37,50,50],37],[[38,50,50],38],[[32,31],32],[[33,31],33],[[34,31],34],[[35,31],35],[[36,50],36],[[37,50],37],[[38,50],38],[[32,31],32],[[33,31],33],[[34,31],34],[[35,31],35],[[36,50],36],[[37,50],37],[[38,50],38],[23],[79,79],[87,87],[88,88],[89,89],[90,90],[83,83],[21,21],[91,91],[20,20],[92,92],[93,93],[94,94],[95,95],[96,96],[82,82],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[66,66],[105,105],[106,106],[107,107],[30,30],[108,108],[109,109],[110,110],[111,111],[112,112],[24,24],[29,29],[113,113],[114,114],[28,28],[75,75],[85,85],[115,115],[116,116],[23,23],[117,117],[118,118],[119,119],[57,57],[120,120],[73,73],[68,68],[69,69],[70,70],[71,71],[72,72],[42,42],[43,43],[44,44],[32,32],[33,33],[45,45],[46,46],[47,47],[48,48],[34,34],[35,35],[49,49],[51,51],[52,52],[53,53],[54,54],[55,55],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[59,59],[61,61],[62,62],[68,121],[69,121],[70,121],[42,121],[43,121],[44,121],[32,121],[33,121],[45,121],[46,121],[47,121],[34,121],[35,121],[49,121],[51,121],[52,121],[53,121],[54,121],[36,121],[37,121],[38,121],[39,121],[40,121],[41,121],[59,121],[61,121],[62,121],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[73,[[9,[74,8]]]],[68,[[9,[74,8]]]],[69,[[9,[74,8]]]],[70,[[9,[74,8]]]],[71,[[9,[74,8]]]],[72,[[9,[74,8]]]],[42,[[9,[74,8]]]],[43,[[9,[74,8]]]],[44,[[9,[74,8]]]],[32,[[9,[74,8]]]],[33,[[9,[74,8]]]],[45,[[9,[74,8]]]],[46,[[9,[74,8]]]],[47,[[9,[74,8]]]],[48,[[9,[74,8]]]],[34,[[9,[74,8]]]],[35,[[9,[74,8]]]],[49,[[9,[74,8]]]],[51,[[9,[74,8]]]],[52,[[9,[74,8]]]],[53,[[9,[74,8]]]],[54,[[9,[74,8]]]],[55,[[9,[74,8]]]],[36,[[9,[74,8]]]],[37,[[9,[74,8]]]],[38,[[9,[74,8]]]],[39,[[9,[74,8]]]],[40,[[9,[74,8]]]],[41,[[9,[74,8]]]],[59,[[9,[74,8]]]],[61,[[9,[74,8]]]],[62,[[9,[74,8]]]],[[79,79],122],[[20,20],122],[[116,116],122],[[32,32],68],[[33,33],69],[[34,34],71],[[35,35],72],[[36,36],68],[[37,37],69],[[38,38],70],[[39,39],68],[[40,40],69],[[41,41],70],[[59,59],68],[[61,61],69],[[62,62],70],[[32,32],68],[[33,33],69],[[34,34],71],[[35,35],72],[[36,36],68],[[37,37],69],[[38,38],70],[[39,39],68],[[40,40],69],[[41,41],70],[[59,59],68],[[61,61],69],[[62,62],70],[[32,32],68],[[33,33],69],[[34,34],71],[[35,35],72],[[36,36],68],[[37,37],69],[[38,38],70],[[39,39],68],[[40,40],69],[[41,41],70],[[59,59],68],[[61,61],69],[[62,62],70],[[32,32],68],[[33,33],69],[[34,34],71],[[35,35],72],[[36,36],68],[[37,37],69],[[38,38],70],[[39,39],68],[[40,40],69],[[41,41],70],[[59,59],68],[[61,61],69],[[62,62],70],[[32,32],68],[[33,33],69],[[34,34],71],[[35,35],72],[[36,36],68],[[37,37],69],[[38,38],70],[[39,39],68],[[40,40],69],[[41,41],70],[[59,59],68],[[61,61],69],[[62,62],70],[[32,32],68],[[33,33],69],[[34,34],71],[[35,35],72],[[36,36],68],[[37,37],69],[[38,38],70],[[39,39],68],[[40,40],69],[[41,41],70],[[59,59],68],[[61,61],69],[[62,62],70],[[44,10],33],[[45,10],32],[[46,10],34],[[47,10],35],[[52,10],36],[[53,10],37],[[54,10],38],[[44,10],33],[[45,10],32],[[46,10],34],[[47,10],35],[[52,10],36],[[53,10],37],[[54,10],38],0,0,0,0,[48,48],[55,55],[[81,116],15],[[76,116],15],[[77,116],15],[[75,116],15],[118,15],[23,116],[[],75],[123,44],[123,32],[123,33],[123,45],[123,47],[123,35],[123,39],[123,40],[123,41],[123,59],[123,61],[123,62],[[33,33],33],[[34,34],34],[[37,37],37],[[40,40],40],[[61,61],61],0,[20,124],[[73,11],[[18,[125]]]],[[68,11],[[18,[125]]]],[[69,11],[[18,[125]]]],[[70,11],[[18,[125]]]],[[71,11],[[18,[125]]]],[[72,11],[[18,[125]]]],[[42,11],[[18,[125]]]],[[43,11],[[18,[125]]]],[[44,11],[[18,[125]]]],[[32,11],[[18,[125]]]],[[33,11],[[18,[125]]]],[[45,11],[[18,[125]]]],[[46,11],[[18,[125]]]],[[47,11],[[18,[125]]]],[[48,11],[[18,[125]]]],[[34,11],[[18,[125]]]],[[35,11],[[18,[125]]]],[[49,11],[[18,[125]]]],[[51,11],[[18,[125]]]],[[52,11],[[18,[125]]]],[[53,11],[[18,[125]]]],[[54,11],[[18,[125]]]],[[55,11],[[18,[125]]]],[[36,11],[[18,[125]]]],[[37,11],[[18,[125]]]],[[38,11],[[18,[125]]]],[[39,11],[[18,[125]]]],[[40,11],[[18,[125]]]],[[41,11],[[18,[125]]]],[[59,11],[[18,[125]]]],[[61,11],[[18,[125]]]],[[62,11],[[18,[125]]]],0,[[]],[[],79],[[],87],[[],88],[[],89],[[],90],[[],21],[[],81],[[],91],[[],56],[[],20],[[],92],[[],93],[[],94],[[],95],[[],96],[[],98],[[],100],[[],103],[[],104],[[],66],[[],105],[[],106],[[],30],[[],108],[[],110],[[],111],[[],112],[[],24],[[],29],[[],114],[[],28],[[],75],[[],85],[[],115],[[],23],[[],117],[[],118],[[],57],[[],120],[[],73],[[],68],[[],69],[[],70],[[],71],[[],72],[[],42],[[],43],[[],44],[[],32],[[],33],[[],45],[[],46],[[],47],[[],48],[[],34],[[],35],[[],49],[[],51],[[],52],[[],53],[[],54],[[],55],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],59],[[],61],[[],62],[21,67],[21,31],[21,50],0,0,[10],[10],[87],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[83],[10],[10],[86],[10],[10],[10],[10],[10],[92],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[103],[10],[10],[10],[10],[10],[106],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[22],[10],[10],[10],[126],[10],[75],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[127],[10],[10],[10],[10],[10],[10],[10],[10],[10],[42],[43],[10],[10],[10],[10],[45],[10],[10],[10],[48],[10],[34],[10],[35],[10],[10],[49],[10],[51],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[87],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[86],[10],[10],[10],[10],[10],[92],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[103],[10],[10],[10],[10],[10],[106],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[126],[10],[10],[75],[10],[10],[10],[10],[10],[10],[10],[10],[127],[10],[10],[10],[10],[10],[10],[10],[10],[10],[42],[10],[43],[10],[10],[10],[10],[45],[10],[10],[10],[10],[48],[10],[34],[35],[10],[10],[49],[10],[51],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[],[[18,[94]]]],[[],[[18,[95]]]],[[],[[18,[96]]]],[[],[[18,[102]]]],[[],[[18,[30]]]],[[],[[18,[108]]]],[[],[[18,[116]]]],[[],[[18,[73]]]],[[],[[18,[68]]]],[[],[[18,[69]]]],[[],[[18,[70]]]],[[],[[18,[71]]]],[[],[[18,[72]]]],[[],[[18,[42]]]],[[],[[18,[43]]]],[[],[[18,[44]]]],[[],[[18,[32]]]],[[],[[18,[33]]]],[[],[[18,[45]]]],[[],[[18,[46]]]],[[],[[18,[47]]]],[[],[[18,[48]]]],[[],[[18,[34]]]],[[],[[18,[35]]]],[[],[[18,[49]]]],[[],[[18,[51]]]],[[],[[18,[52]]]],[[],[[18,[53]]]],[[],[[18,[54]]]],[[],[[18,[55]]]],[[],[[18,[36]]]],[[],[[18,[37]]]],[[],[[18,[38]]]],[[],[[18,[39]]]],[[],[[18,[40]]]],[[],[[18,[41]]]],[[],[[18,[59]]]],[[],[[18,[61]]]],[[],[[18,[62]]]],[44,31],[45,31],[46,31],[47,31],[52,50],[53,50],[54,50],[[32,32],31],[[33,33],31],[[34,34],31],[[35,35],31],[[36,36],50],[[37,37],50],[[38,38],50],[[32,32],31],[[33,33],31],[[34,34],31],[[35,35],31],[[36,36],50],[[37,37],50],[[38,38],50],[[32,31],32],[[32,32],32],[[33,31],33],[[33,33],33],[[48,31],48],[[34,31],34],[[34,34],34],[[35,31],35],[[35,35],35],[[55,50],55],[[36,36],36],[[36,50],36],[[37,37],37],[[37,50],37],[[38,50],38],[[38,38],38],[[39,58],39],[[39,39],39],[[40,58],40],[[40,40],40],[[41,58],41],[[41,41],41],[[59,59],59],[[59,60],59],[[61,60],61],[[61,61],61],[[62,62],62],[[62,60],62],[[32,31]],[[32,32]],[[33,33]],[[33,31]],[[34,34]],[[34,31]],[[35,35]],[[35,31]],[[36,36]],[[36,50]],[[37,50]],[[37,37]],[[38,50]],[[38,38]],[[39,39]],[[39,58]],[[40,58]],[[40,40]],[[41,41]],[[41,58]],[[59,59]],[[59,60]],[[61,61]],[[61,60]],[[62,60]],[[62,62]],[[36,36],52],[[37,37,37],53],[[38,38,38,38],54],[[32,32],31],[[33,33],31],[[48,48],31],[[34,34],31],[[35,35],31],[[55,55],50],[[36,36],50],[[37,37],50],[[38,38],50],[[39,39],58],[[40,40],58],[[41,41],58],[[59,59],60],[[61,61],60],[[62,62],60],[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[39,39],39],[[40,40],40],[[41,41],41],[[59,59],59],[[61,61],61],[[62,62],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,50,50,50],55],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[82],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[107],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[89,67],[[50,50],36],[[50,50,50],37],[[50,50,50,50],38],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[88,67],[89,67],[21,67],[21,31],[21,50],[88,31],[89,31],[88,50],[[79,79],15],[[90,90],15],[[20,20],15],[[93,93],15],[[95,95],15],[[96,96],15],[[108,108],15],[[116,116],15],[[73,73],15],[[68,68],15],[[69,69],15],[[70,70],15],[[71,71],15],[[72,72],15],[[42,42],15],[[43,43],15],[[44,44],15],[[32,32],15],[[33,33],15],[[45,45],15],[[46,46],15],[[47,47],15],[[48,48],15],[[34,34],15],[[35,35],15],[[49,49],15],[[51,51],15],[[52,52],15],[[53,53],15],[[54,54],15],[[55,55],15],[[36,36],15],[[37,37],15],[[38,38],15],[[39,39],15],[[40,40],15],[[41,41],15],[[59,59],15],[[61,61],15],[[62,62],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[32,31],33],[[33,31],35],[[34,31],35],[[36,50],37],[[37,50],38],[[39,58],40],[[40,58],41],[[59,60],61],[[61,60],62],0,0,[[68,132],[[17,[74]]]],[[69,132],[[17,[74]]]],[[70,132],[[17,[74]]]],[[42,132],[[17,[74]]]],[[43,132],[[17,[74]]]],[[44,132],[[17,[74]]]],[[32,132],[[17,[74]]]],[[33,132],[[17,[74]]]],[[45,132],[[17,[74]]]],[[46,132],[[17,[74]]]],[[47,132],[[17,[74]]]],[[34,132],[[17,[74]]]],[[35,132],[[17,[74]]]],[[49,132],[[17,[74]]]],[[51,132],[[17,[74]]]],[[52,132],[[17,[74]]]],[[53,132],[[17,[74]]]],[[54,132],[[17,[74]]]],[[36,132],[[17,[74]]]],[[37,132],[[17,[74]]]],[[38,132],[[17,[74]]]],[[39,132],[[17,[74]]]],[[40,132],[[17,[74]]]],[[41,132],[[17,[74]]]],[[59,132],[[17,[74]]]],[[61,132],[[17,[74]]]],[[62,132],[[17,[74]]]],[[68,10],[[17,[74]]]],[[69,10],[[17,[74]]]],[[70,10],[[17,[74]]]],[[42,10],[[17,[74]]]],[[43,10],[[17,[74]]]],[[44,10],[[17,[74]]]],[[32,10],[[17,[74]]]],[[33,10],[[17,[74]]]],[[45,10],[[17,[74]]]],[[46,10],[[17,[74]]]],[[47,10],[[17,[74]]]],[[34,10],[[17,[74]]]],[[35,10],[[17,[74]]]],[[49,10],[[17,[74]]]],[[51,10],[[17,[74]]]],[[52,10],[[17,[74]]]],[[53,10],[[17,[74]]]],[[54,10],[[17,[74]]]],[[36,10],[[17,[74]]]],[[37,10],[[17,[74]]]],[[38,10],[[17,[74]]]],[[39,10],[[17,[74]]]],[[40,10],[[17,[74]]]],[[41,10],[[17,[74]]]],[[59,10],[[17,[74]]]],[[61,10],[[17,[74]]]],[[62,10],[[17,[74]]]],[[68,10],[[17,[74]]]],[[69,10],[[17,[74]]]],[[70,10],[[17,[74]]]],[[42,10],[[17,[74]]]],[[43,10],[[17,[74]]]],[[44,10],[[17,[74]]]],[[32,10],[[17,[74]]]],[[33,10],[[17,[74]]]],[[45,10],[[17,[74]]]],[[46,10],[[17,[74]]]],[[47,10],[[17,[74]]]],[[34,10],[[17,[74]]]],[[35,10],[[17,[74]]]],[[49,10],[[17,[74]]]],[[51,10],[[17,[74]]]],[[52,10],[[17,[74]]]],[[53,10],[[17,[74]]]],[[54,10],[[17,[74]]]],[[36,10],[[17,[74]]]],[[37,10],[[17,[74]]]],[[38,10],[[17,[74]]]],[[39,10],[[17,[74]]]],[[40,10],[[17,[74]]]],[[41,10],[[17,[74]]]],[[59,10],[[17,[74]]]],[[61,10],[[17,[74]]]],[[62,10],[[17,[74]]]],[68,10],[69,10],[70,10],[42,10],[43,10],[44,10],[32,10],[33,10],[45,10],[46,10],[47,10],[34,10],[35,10],[49,10],[51,10],[52,10],[53,10],[54,10],[36,10],[37,10],[38,10],[39,10],[40,10],[41,10],[59,10],[61,10],[62,10],[[68,132],[[17,[74]]]],[[69,132],[[17,[74]]]],[[70,132],[[17,[74]]]],[[42,132],[[17,[74]]]],[[43,132],[[17,[74]]]],[[44,132],[[17,[74]]]],[[32,132],[[17,[74]]]],[[33,132],[[17,[74]]]],[[45,132],[[17,[74]]]],[[46,132],[[17,[74]]]],[[47,132],[[17,[74]]]],[[34,132],[[17,[74]]]],[[35,132],[[17,[74]]]],[[49,132],[[17,[74]]]],[[51,132],[[17,[74]]]],[[52,132],[[17,[74]]]],[[53,132],[[17,[74]]]],[[54,132],[[17,[74]]]],[[36,132],[[17,[74]]]],[[37,132],[[17,[74]]]],[[38,132],[[17,[74]]]],[[39,132],[[17,[74]]]],[[40,132],[[17,[74]]]],[[41,132],[[17,[74]]]],[[59,132],[[17,[74]]]],[[61,132],[[17,[74]]]],[[62,132],[[17,[74]]]],[83,[[17,[83]]]],[86,[[17,[86]]]],[89,15],0,0,0,0,0,0,[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[79,11],[[18,[125]]]],[[133,11],[[18,[125]]]],[[133,11],[[18,[125]]]],[[134,11],[[18,[125]]]],[[134,11],[[18,[125]]]],[[80,11],[[18,[125]]]],[[80,11],[[18,[125]]]],[[80,11],[[18,[125]]]],[[80,11],[[18,[125]]]],[[88,11],[[18,[125]]]],[[89,11],[[18,[125]]]],[[90,11],[[18,[125]]]],[[83,11],[[18,[125]]]],[[21,11],[[18,[125]]]],[[86,11],[[18,[125]]]],[[91,11],[[18,[125]]]],[[20,11],[[18,[125]]]],[[20,11],[[18,[125]]]],[[93,11],[[18,[125]]]],[[94,11],[[18,[125]]]],[[95,11],[[18,[125]]]],[[96,11],[[18,[125]]]],[[97,11],[[18,[125]]]],[[98,11],[[18,[125]]]],[[99,11],[[18,[125]]]],[[100,11],[[18,[125]]]],[[101,11],[[18,[125]]]],[[102,11],[[18,[125]]]],[[66,11],[[18,[125]]]],[[30,11],[[18,[125]]]],[[135,11],[[18,[125]]]],[[135,11],[[18,[125]]]],[[108,11],[[18,[125]]]],[[108,11],[[18,[125]]]],[[109,11],[[18,[125]]]],[[109,11],[[18,[125]]]],[[110,11],[[18,[125]]]],[[111,11],[[18,[125]]]],[[63,11],[[18,[125]]]],[[112,11],[[18,[125]]]],[[24,11],[[18,[125]]]],[[29,11],[[18,[125]]]],[[113,11],[[18,[125]]]],[[114,11],[[18,[125]]]],[[28,11],[[18,[125]]]],[[75,11],[[18,[125]]]],[[116,11],[[18,[125]]]],[[119,11],[[18,[125]]]],[[57,11],[[18,[125]]]],[[136,11],[[18,[125]]]],[[136,11],[[18,[125]]]],[[73,11],[[18,[125]]]],[[68,11],[[18,[125]]]],[[68,11],[[18,[125]]]],[[69,11],[[18,[125]]]],[[69,11],[[18,[125]]]],[[70,11],[[18,[125]]]],[[70,11],[[18,[125]]]],[[71,11],[[18,[125]]]],[[71,11],[[18,[125]]]],[[72,11],[[18,[125]]]],[[72,11],[[18,[125]]]],[[42,11],[[18,[125]]]],[[42,11],[[18,[125]]]],[[43,11],[[18,[125]]]],[[43,11],[[18,[125]]]],[[44,11],[[18,[125]]]],[[44,11],[[18,[125]]]],[[32,11],[[18,[125]]]],[[32,11],[[18,[125]]]],[[33,11],[[18,[125]]]],[[33,11],[[18,[125]]]],[[45,11],[[18,[125]]]],[[45,11],[[18,[125]]]],[[46,11],[[18,[125]]]],[[46,11],[[18,[125]]]],[[47,11],[[18,[125]]]],[[47,11],[[18,[125]]]],[[48,11],[[18,[125]]]],[[48,11],[[18,[125]]]],[[34,11],[[18,[125]]]],[[34,11],[[18,[125]]]],[[35,11],[[18,[125]]]],[[35,11],[[18,[125]]]],[[49,11],[[18,[125]]]],[[49,11],[[18,[125]]]],[[51,11],[[18,[125]]]],[[51,11],[[18,[125]]]],[[52,11],[[18,[125]]]],[[52,11],[[18,[125]]]],[[53,11],[[18,[125]]]],[[53,11],[[18,[125]]]],[[54,11],[[18,[125]]]],[[54,11],[[18,[125]]]],[[55,11],[[18,[125]]]],[[55,11],[[18,[125]]]],[[36,11],[[18,[125]]]],[[36,11],[[18,[125]]]],[[37,11],[[18,[125]]]],[[37,11],[[18,[125]]]],[[38,11],[[18,[125]]]],[[38,11],[[18,[125]]]],[[39,11],[[18,[125]]]],[[39,11],[[18,[125]]]],[[40,11],[[18,[125]]]],[[40,11],[[18,[125]]]],[[41,11],[[18,[125]]]],[[41,11],[[18,[125]]]],[[59,11],[[18,[125]]]],[[59,11],[[18,[125]]]],[[61,11],[[18,[125]]]],[[61,11],[[18,[125]]]],[[62,11],[[18,[125]]]],[[62,11],[[18,[125]]]],[[],82],0,[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],0,[137],[[],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[]],[138,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,30],[[],30],[[]],[[],30],[139,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[141,[15,140]]],68],[[]],[[[142,[15,140,140]]],68],[[]],[[[142,[15,140,140]]],69],[[[141,[15,140]]],69],[[]],[[[141,[15,140]]],70],[[[142,[15,140,140]]],70],[[]],[[]],[[]],[[]],[42,44],[[[145,[31,[144,[[143,[31]]]]]]],44],[46,44],[[]],[[[146,[31,[144,[[143,[31]]]]]]],44],[[[142,[31,140,140]]],44],[[[144,[[142,[31,140,140,[147,[31]]]]]]],32],[[[141,[31,140]]],32],[[[142,[31,140,140]]],32],[[[148,[31]]],32],[[]],[[],32],[[],32],[[[144,[[142,[31,140,140,[147,[31]]]]]]],33],[34,33],[[],33],[[[141,[31,140]]],33],[[[148,[31]]],33],[[],33],[[[142,[31,140,140]]],33],[[],33],[[]],[[]],[[[142,[31,140,140]]],45],[[[144,[[143,[31]]]]],45],[[[149,[31]]],45],[42,46],[[]],[44,46],[[]],[[[146,[31,[144,[[150,[31]]]]]]],47],[[[142,[31,140,140]]],47],[[[145,[31,[144,[[150,[31]]]]]]],47],[43,47],[[]],[[[150,[31]]],48],[[[144,[[150,[31]]]]],48],[[[149,[31]]],48],[[]],[[],34],[151,34],[[[141,[31,140]]],34],[35,34],[[[148,[31]]],34],[[[144,[[142,[31,140,140,[147,[31]]]]]]],34],[33,34],[[[142,[31,140,140]]],34],[[],34],[[],34],[[],35],[[[144,[[142,[31,140,140,[147,[31]]]]]]],35],[[],35],[152,35],[[],35],[[],35],[151,35],[[[148,[31]]],35],[[[141,[31,140]]],35],[[],35],[[],35],[[[142,[31,140,140]]],35],[[],35],[[]],[30,35],[48,35],[[],35],[[]],[[]],[[[142,[50,140,140]]],52],[[[149,[50]]],52],[[]],[[[144,[[143,[50]]]]],52],[[[146,[50,[144,[[143,[50]]]]]]],53],[[[142,[50,140,140]]],53],[[]],[49,53],[[[145,[50,[144,[[143,[50]]]]]]],53],[51,54],[[[146,[50,[144,[[150,[50]]]]]]],54],[[[145,[50,[144,[[150,[50]]]]]]],54],[[[142,[50,140,140]]],54],[[]],[[]],[[[144,[[150,[50]]]]],55],[[[149,[50]]],55],[[[150,[50]]],55],[[],36],[[[148,[50]]],36],[[[144,[[142,[50,140,140,[147,[50]]]]]]],36],[[[142,[50,140,140]]],36],[[]],[[],36],[[[141,[50,140]]],36],[[[148,[50]]],37],[[[144,[[142,[50,140,140,[147,[50]]]]]]],37],[[]],[[],37],[[],37],[[[142,[50,140,140]]],37],[[],37],[[[141,[50,140]]],37],[[[141,[50,140]]],38],[[]],[[[142,[50,140,140]]],38],[[],38],[[[148,[50]]],38],[[],38],[[],38],[[],38],[55,38],[[],38],[[[144,[[142,[50,140,140,[147,[50]]]]]]],38],[[],38],[153,39],[[]],[[],39],[[],39],[[[142,[58,140,140]]],39],[[[141,[58,140]]],39],[[],40],[[[141,[58,140]]],40],[[]],[[],40],[[[142,[58,140,140]]],40],[[],40],[[[141,[58,140]]],41],[[[142,[58,140,140]]],41],[[],41],[[],41],[[]],[[],41],[[],41],[[],41],[[],41],[[],59],[[],59],[[[142,[60,140,140]]],59],[[]],[[[141,[60,140]]],59],[[],61],[[],61],[[]],[[[141,[60,140]]],61],[[],61],[[[142,[60,140,140]]],61],[[],62],[[],62],[[[141,[60,140]]],62],[[],62],[[],62],[[],62],[[],62],[[]],[[[142,[60,140,140]]],62],[43,48],[51,55],[31,42],[31,44],[31,32],[31,45],[31,46],[50,49],[50,52],[50,53],[50,36],[[31,32],42],[[50,36],49],[[],32],[[],33],[[],48],[[],34],[[],35],[[],55],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],59],[[],61],[[],62],[[33,31],43],[[33,31],44],[[33,31],46],[[33,31],47],[[33,31],48],[[37,50],51],[[37,50],53],[[37,50],54],[[37,50],55],[[32,32,32],42],[[34,34,34,34],43],[[33,33,33],44],[[32,32],45],[[34,34,34],46],[[35,35,35,35],47],[[36,36,36],49],[[37,37,37,37],51],[[36,36],52],[[37,37,37],53],[[38,38,38,38],54],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],[[],49],[[],51],[[],52],[[],53],[[],54],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],[[],49],[[],51],[[],52],[[],53],[[],54],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],[[],49],[[],51],[[],52],[[],53],[[],54],[82,81],[82,81],[[[13,[[79,[82]]]]],85],[124,20],[124,20],[33,44],[32,45],[33,46],[35,47],[36,52],[37,53],[38,54],[[73,31,31,31],44],[[73,31,31,31],46],[[73,31,31,31],47],[[73,31,31,31],48],[[73,50,50,50],53],[[73,50,50,50],54],[[73,50,50,50],55],[45,42],[45,44],[45,46],[52,49],[52,53],[[45,32],42],[[52,36],49],[44,42],[44,43],[44,45],[44,47],[44,48],[53,49],[53,51],[53,52],[53,54],[53,55],[[44,33],43],[[53,37],51],[46,42],[46,45],[46,47],[46,48],[47,43],[47,44],[47,46],[47,48],[54,51],[54,53],[54,55],[[154,138],20],[[],44],[[],32],[[],33],[[],45],[[],47],[[],35],[[],39],[[],40],[[],41],[[],59],[[],61],[[],62],[48,43],[48,44],[48,46],[48,47],[55,51],[55,53],[55,54],[74,[[17,[68]]]],[74,[[17,[69]]]],[74,[[17,[70]]]],[74,[[17,[42]]]],[74,[[17,[43]]]],[74,[[17,[44]]]],[74,[[17,[32]]]],[74,[[17,[33]]]],[74,[[17,[45]]]],[74,[[17,[46]]]],[74,[[17,[47]]]],[74,[[17,[48]]]],[74,[[17,[34]]]],[74,[[17,[35]]]],[74,[[17,[49]]]],[74,[[17,[51]]]],[74,[[17,[52]]]],[74,[[17,[53]]]],[74,[[17,[54]]]],[74,[[17,[55]]]],[74,[[17,[36]]]],[74,[[17,[37]]]],[74,[[17,[38]]]],[74,[[17,[39]]]],[74,[[17,[40]]]],[74,[[17,[41]]]],[74,[[17,[59]]]],[74,[[17,[61]]]],[74,[[17,[62]]]],[48,28],[[33,33],48],[[37,37],55],[[32,32],48],[[36,36],55],[[33,33],48],[[37,37],55],[[48,33],43],[[48,33],47],[[55,37],51],[[55,37],54],[31,43],[31,44],[31,46],[31,47],[31,48],[50,51],[50,53],[50,54],[50,55],[31,43],[31,44],[31,46],[31,47],[31,48],[50,51],[50,53],[50,54],[50,55],[31,43],[31,44],[31,46],[31,47],[31,48],[50,51],[50,53],[50,54],[50,55],[33,28],[32,42],[33,43],[32,44],[32,46],[33,47],[36,49],[37,51],[36,53],[37,54],[[32,31],45],[[36,50],52],[[32,31,32],42],[[32,31,32],44],[[32,31,32],46],[[36,50,36],49],[[36,50,36],53],[[33,48,33],43],[[33,48,33],47],[[37,55,37],51],[[37,55,37],54],[33,48],[37,55],[[31,90],89],[[],32],[[],33],[[],48],[[],34],[[],35],[[],55],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],59],[[],61],[[],62],[132,[[18,[20]]]],[132,[[18,[20,155]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,28],[32,42],[33,43],[32,44],[32,46],[33,47],[36,49],[37,51],[36,53],[37,54],[35,48],[38,55],[120],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],[156],[120],[156],[120],[156],[120],[120],[156],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[156],[120],[156],[120],[120],[156],[120],[156],[156],[120],[156],[120],[120],[156],[120],[156],[120],[156],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[156],[120],[[31,31,31,31],48],[[50,50,50,50],55],[30,31],[116,60],[96,16],[95,17],[[157,96],16],[[158,95],17],[[159,95],17],[[160,82,116],17],[[81,116],17],[56,158],[[76,116],17],[[77,116],17],[[82,116],[[17,[16]]]],[[113,59],[[17,[116]]]],[115,85],[[117,20],[[17,[[13,[[79,[16]]]]]]]],[118,84],[93,161],[95,162],[96,163],[95,163],[[115,20],[[13,[[79,[82]]]]]],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[132,17],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[160,82]],[77],[82],[96,16],[95,17],[79],[[157,96],16],[[159,95],17],[[160,82,116],17],[[81,116],17],[56,159],[[77,116],17],[[82,116],[[17,[16]]]],[120,[[17,[84]]]],[120],[120],[120],[120],[120],[120],[73,164],[68,164],[69,164],[70,164],[71,164],[72,164],[42,164],[43,164],[44,164],[32,164],[33,164],[45,164],[46,164],[47,164],[48,164],[34,164],[35,164],[49,164],[51,164],[52,164],[53,164],[54,164],[55,164],[36,164],[37,164],[38,164],[39,164],[40,164],[41,164],[59,164],[61,164],[62,164],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],[[],165],0,[90],[20],[93],[95],[96],[108],[116],[73],[68],[69],[70],[71],[72],[39],[40],[41],[59],[61],[62],0,[[],[[18,[30,135]]]],0,[[],20],[[],20],[64,20],[119,20],0,0,0,0,[20,[[17,[20]]]],[116,60],[[32,10]],[[33,10]],[[34,10]],[[35,10]],[[36,10]],[[37,10]],[[38,10]],[[39,10]],[[40,10]],[[41,10]],[[59,10]],[[61,10]],[[62,10]],0,0,[[32,10]],[[33,10]],[[34,10]],[[35,10]],[[36,10]],[[37,10]],[[38,10]],[[39,10]],[[40,10]],[[41,10]],[[59,10]],[[61,10]],[[62,10]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[115],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[120],[120],[120],[120],[120],[[64,120]],[[63,120]],[120],[120],[120],0,[[65,120]],[[160,82,116],17],[[81,116],17],[[77,116],17],[[82,116,16],15],[[117,20,107],[[17,[107]]]],[118],[120],[65,65],[65,65],[65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[73,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[68,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[69,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[70,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[71,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[72,8]]],[[9,[2,8]]]],[[[9,[42,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[43,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[44,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[32,8]]],[[9,[2,8]]]],[[[9,[33,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[45,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[46,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[47,8]]],[[9,[2,8]]]],[[[9,[48,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[34,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[35,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[49,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[51,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[52,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[53,8]]],[[9,[2,8]]]],[[[9,[54,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[55,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[36,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[37,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[38,8]]],[[9,[2,8]]]],[[[9,[39,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[40,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[41,8]]],[[9,[2,8]]]],[[[9,[59,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[61,8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[62,8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[]],[93,161],[30,152],[28,166],[79],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[73,8]]],[[9,[74,8]]]],[[[9,[68,8]]],[[9,[74,8]]]],[[[9,[69,8]]],[[9,[74,8]]]],[[[9,[70,8]]],[[9,[74,8]]]],[[[9,[71,8]]],[[9,[74,8]]]],[[[9,[72,8]]],[[9,[74,8]]]],[[[9,[42,8]]],[[9,[74,8]]]],[[[9,[43,8]]],[[9,[74,8]]]],[[[9,[44,8]]],[[9,[74,8]]]],[[[9,[32,8]]],[[9,[74,8]]]],[[[9,[33,8]]],[[9,[74,8]]]],[[[9,[45,8]]],[[9,[74,8]]]],[[[9,[46,8]]],[[9,[74,8]]]],[[[9,[47,8]]],[[9,[74,8]]]],[[[9,[48,8]]],[[9,[74,8]]]],[[[9,[34,8]]],[[9,[74,8]]]],[[[9,[35,8]]],[[9,[74,8]]]],[[[9,[49,8]]],[[9,[74,8]]]],[[[9,[51,8]]],[[9,[74,8]]]],[[[9,[52,8]]],[[9,[74,8]]]],[[[9,[53,8]]],[[9,[74,8]]]],[[[9,[54,8]]],[[9,[74,8]]]],[[[9,[55,8]]],[[9,[74,8]]]],[[[9,[36,8]]],[[9,[74,8]]]],[[[9,[37,8]]],[[9,[74,8]]]],[[[9,[38,8]]],[[9,[74,8]]]],[[[9,[39,8]]],[[9,[74,8]]]],[[[9,[40,8]]],[[9,[74,8]]]],[[[9,[41,8]]],[[9,[74,8]]]],[[[9,[59,8]]],[[9,[74,8]]]],[[[9,[61,8]]],[[9,[74,8]]]],[[[9,[62,8]]],[[9,[74,8]]]],[81,82],[118,117],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[51,51],[52,52],[53,53],[54,54],[55,55],[[23,116],15],[42,15],[43,15],[44,15],[32,15],[33,15],[45,15],[46,15],[47,15],[48,15],[34,15],[35,15],[49,15],[51,15],[52,15],[53,15],[54,15],[55,15],[36,15],[37,15],[38,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[42,15],[43,15],[44,15],[32,15],[33,15],[45,15],[46,15],[47,15],[48,15],[34,15],[35,15],[49,15],[51,15],[52,15],[53,15],[54,15],[55,15],[36,15],[37,15],[38,15],[32,68],[33,69],[34,71],[35,72],[36,68],[37,69],[38,70],[48,15],[55,15],[32,60],[33,60],[34,60],[35,60],[36,60],[37,60],[38,60],[39,60],[40,60],[41,60],[20,15],[32,15],[33,15],[48,15],[34,15],[35,15],[55,15],[36,15],[37,15],[38,15],[21,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[160,82],167],[81,167],[76,167],[77,167],[82,167],[68,168],[69,168],[70,168],[42,168],[43,168],[44,168],[32,168],[33,168],[45,168],[46,168],[47,168],[34,168],[35,168],[49,168],[51,168],[52,168],[53,168],[54,168],[36,168],[37,168],[38,168],[39,168],[40,168],[41,168],[59,168],[61,168],[62,168],[[160,82],167],[81,167],[77,167],[82,167],[[160,82,[14,[75]]],169],[[81,[14,[75]]],169],[[77,[14,[75]]],169],[[82,[14,[75]]],170],[23,171],[[[14,[75]]]],[[160,82,[14,[75]]],172],[[81,[14,[75]]],172],[[76,[14,[75]]],172],[[76,[14,[75]]]],[[77,[14,[75]]]],[[77,[14,[75]]]],[[77,[14,[75]]],172],[[82,[14,[75]]],173],[[23,75],174],[[58,58],39],[[58,58,58],40],[[58,58,58,58],41],[89,15],0,[[23,116]],[23,175],0,0,[82,176],0,[32,31],[33,31],[48,31],[34,31],[35,31],[55,50],[36,50],[37,50],[38,50],[32,31],[33,31],[48,31],[34,31],[35,31],[55,50],[36,50],[37,50],[38,50],[32,31],[33,31],[48,31],[34,31],[35,31],[55,50],[36,50],[37,50],[38,50],[[32,32,31],32],[[33,33,31],33],[[48,48,31],48],[[34,34,31],34],[[35,35,31],35],[[55,55,50],55],[[36,36,50],36],[[37,37,50],37],[[38,38,50],38],0,[[95,177,175]],[[33,33,33],43],[[33,33,33],47],[[37,37,37],51],[[37,37,37],54],[[33,33,33],43],[[33,33,33],47],[[37,37,37],51],[[37,37,37],54],[[33,33,33],43],[[33,33,33],47],[[37,37,37],51],[[37,37,37],54],[[33,33,33],43],[[33,33,33],47],[[37,37,37],51],[[37,37,37],54],[120],[83,83],[86,86],[[32,32],45],[[33,33,33],44],[[34,34,34],46],[[35,35,35,35],47],0,0,0,0,[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[39,39],39],[[40,40],40],[[41,41],41],[[59,59],59],[[61,61],61],[[62,62],62],0,[32,31],[33,31],[34,31],[35,31],[36,50],[37,50],[38,50],[39,58],[40,58],[41,58],[59,60],[61,60],[62,60],0,[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[39,39],39],[[40,40],40],[[41,41],41],[[59,59],59],[[61,61],61],[[62,62],62],[32,31],[33,31],[34,31],[35,31],[36,50],[37,50],[38,50],[39,58],[40,58],[41,58],[59,60],[61,60],[62,60],[89,90],[30],[[30,35]],[[30,31]],[30],[[30,33]],[[42,46]],[[42,42]],[[42,44]],[[43,43]],[[43,47]],[[44,44]],[[44,33]],[[44,31]],[[44,34],34],[[44,42]],[[32,31],32],[[32,32],32],[[33,33],33],[[33,31],33],[[45,45]],[[45,31]],[[45,32]],[[46,46]],[[46,34]],[[46,33],33],[[46,31]],[[46,42]],[[47,31]],[[47,35]],[[47,43]],[[47,47]],[[48,31],48],[[48,33]],[[48,48],48],[[48,34]],[[34,31],34],[[34,34],34],[[35,35],35],[[35,31],35],[[49,53]],[[49,49]],[[51,51]],[[51,54]],[[52,50]],[[52,36]],[[52,52]],[[53,50]],[[53,37]],[[53,53]],[[53,49]],[[54,38]],[[54,54]],[[54,51]],[[54,50]],[[55,55],55],[[55,37]],[[55,50],55],[[36,36],36],[[36,50],36],[[37,50],37],[[37,37],37],[[38,50],38],[[38,38],38],[[39,58],39],[[39,39],39],[[40,58],40],[[40,40],40],[[41,41],41],[[41,58],41],[[59,60],59],[[59,59],59],[[61,61],61],[[61,60],61],[[62,60],62],[[62,62],62],[[32,32,32],32],[[33,33,33],33],[[34,34,34],34],[[35,35,35],35],[[36,36,36],36],[[37,37,37],37],[[38,38,38],38],[[30,31]],[30],[[30,35]],[30],[[30,33]],[[44,31]],[[44,44]],[[32,31]],[[32,32]],[[33,31]],[[33,33]],[[45,31]],[[45,45]],[[46,46]],[[46,31]],[[47,47]],[[47,31]],[[48,48]],[[34,34]],[[34,31]],[[35,31]],[[35,35]],[[52,52]],[[52,50]],[[53,53]],[[53,50]],[[54,50]],[[54,54]],[[55,55]],[[36,36]],[[36,50]],[[37,37]],[[37,50]],[[38,50]],[[38,38]],[[39,39]],[[39,58]],[[40,40]],[[40,58]],[[41,58]],[[41,41]],[[59,59]],[[59,60]],[[61,61]],[[61,60]],[[62,62]],[[62,60]],[[45,45],45],[[52,52],52],[[44,44],44],[[46,46],46],[[53,53],53],[[47,47],47],[[54,54],54],[[48,48],48],[[55,55],55],[[44,31],44],[[45,31],45],[[46,31],46],[[47,31],47],[[52,50],52],[[53,50],53],[[54,50],54],[[45,32],32],[[52,36],36],[[44,33],33],[[46,33],33],[[48,33],33],[[53,37],37],[[55,37],37],[[44,34],34],[[46,34],34],[[48,34],34],[[47,35],35],[[54,38],38],[[],178],[[],178],[64,178],[63,132],[119,178],0,0,[[68,10],[[17,[132]]]],[[69,10],[[17,[132]]]],[[70,10],[[17,[132]]]],[[42,10],[[17,[132]]]],[[43,10],[[17,[132]]]],[[44,10],[[17,[132]]]],[[32,10],[[17,[132]]]],[[33,10],[[17,[132]]]],[[45,10],[[17,[132]]]],[[46,10],[[17,[132]]]],[[47,10],[[17,[132]]]],[[34,10],[[17,[132]]]],[[35,10],[[17,[132]]]],[[49,10],[[17,[132]]]],[[51,10],[[17,[132]]]],[[52,10],[[17,[132]]]],[[53,10],[[17,[132]]]],[[54,10],[[17,[132]]]],[[36,10],[[17,[132]]]],[[37,10],[[17,[132]]]],[[38,10],[[17,[132]]]],[[39,10],[[17,[132]]]],[[40,10],[[17,[132]]]],[[41,10],[[17,[132]]]],[[59,10],[[17,[132]]]],[[61,10],[[17,[132]]]],[[62,10],[[17,[132]]]],[44],[32,32],[33,33],[45],[46],[47],[48,48],[34,34],[35,35],[52],[53],[54],[55,55],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[[],79],[[],88],[[67,90],89],[[],160],[179,21],[[],20],[[[17,[178]]],93],[[[17,[178]]],95],[[[17,[178]]],96],[[176,17],82],[[31,32,31,31],66],[[],107],[132,[[18,[108,109]]]],[[],64],[[[95,[112]]],29],[[59,32,[95,[112]]],113],[[60,60],116],[[],117],[[],118],[[],120],[[15,15],68],[[15,15,15],69],[[15,15,15,15],70],[[15,15,15],71],[[15,15,15,15],72],[[31,31],32],[[31,31,31],33],[[31,31,31],34],[[31,31,31,31],35],[[50,50],36],[[50,50,50],37],[[50,50,50,50],38],[[58,58],39],[[58,58,58],40],[[58,58,58,58],41],[[60,60],59],[[60,60,60],61],[[60,60,60,60],62],[180,107],[172,17],[169,17],[173,17],[170,17],[171,17],[174,17],[[],20],[32,32],[33,33],[48,48],[34,34],[35,35],[55,55],[36,36],[37,37],[38,38],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[93,181]],[68,68],[69,69],[70,70],[71,71],[72,72],[39],[40],[41],[59],[61],[62],[[31,31,31,31,31,31],47],[[50,50,50,50,50,50],54],[[31,31,31,31,31,31],47],[[50,50,50,50,50,50],54],[[31,31,31,31,31,31],47],[[50,50,50,50,50,50],54],[[79,79],[[17,[122]]]],[[20,20],[[17,[122]]]],[[116,116],[[17,[122]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],0,0,0,[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[132,[[18,[74,182]]]],[88],[89],[21],[88,15],[89,15],[89,31],[89,31],[32,32],[36,36],[39,39],[[32,32],31],[[36,36],50],[[39,39],58],[[31,31,31],47],[[50,50,50],54],[[31,31,31],47],[[50,50,50],54],[[31,31,31],47],[[50,50,50],54],[[31,31,31],47],[[50,50,50],54],[[31,31,31,31],47],[[50,50,50,50],54],[[31,31,31,31],47],[[50,50,50,50],54],[[31,31,31,31],47],[[50,50,50,50],54],[[98,[95,[97]],31]],0,0,[[32,31],32],[[33,31],33],[[34,31],34],[[35,31],35],[[36,50],36],[[37,50],37],[[38,50],38],[[],42],[[],43],[[],44],[[],44],[[],32],[[],32],[[],33],[[],33],[[],45],[[],45],[[],46],[[],46],[[],47],[[],47],[[],48],[[],48],[[],34],[[],34],[[],35],[[],35],[[],49],[[],51],[[],52],[[],52],[[],53],[[],53],[[],54],[[],54],[[],55],[[],55],[[],36],[[],36],[[],37],[[],37],[[],38],[[],38],[[],39],[[],39],[[],40],[[],40],[[],41],[[],41],[[],59],[[],59],[[],61],[[],61],[[],62],[[],62],[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[47,33],33],[[54,37],37],[183],[183],[183],[[31,31,31,31],48],0,0,0,[30,31],[20,138],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[44,123]],[[32,123]],[[33,123]],[[45,123]],[[47,123]],[[35,123]],[[39,123]],[[40,123]],[[41,123]],[[59,123]],[[61,123]],[[62,123]],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[73,184],[68,184],[69,184],[70,184],[71,184],[72,184],[42,184],[43,184],[44,184],[32,184],[33,184],[45,184],[46,184],[47,184],[48,184],[34,184],[35,184],[49,184],[51,184],[52,184],[53,184],[54,184],[55,184],[36,184],[37,184],[38,184],[39,184],[40,184],[41,184],[59,184],[61,184],[62,184],[[[9,[73,8]]],185],[[[9,[68,8]]],185],[[[9,[69,8]]],185],[[[9,[70,8]]],185],[[[9,[71,8]]],185],[[[9,[72,8]]],185],[[[9,[42,8]]],185],[[[9,[43,8]]],185],[[[9,[44,8]]],185],[[[9,[32,8]]],185],[[[9,[33,8]]],185],[[[9,[45,8]]],185],[[[9,[46,8]]],185],[[[9,[47,8]]],185],[[[9,[48,8]]],185],[[[9,[34,8]]],185],[[[9,[35,8]]],185],[[[9,[49,8]]],185],[[[9,[51,8]]],185],[[[9,[52,8]]],185],[[[9,[53,8]]],185],[[[9,[54,8]]],185],[[[9,[55,8]]],185],[[[9,[36,8]]],185],[[[9,[37,8]]],185],[[[9,[38,8]]],185],[[[9,[39,8]]],185],[[[9,[40,8]]],185],[[[9,[41,8]]],185],[[[9,[59,8]]],185],[[[9,[61,8]]],185],[[[9,[62,8]]],185],[[68,74],[[17,[15]]]],[[69,74],[[17,[15]]]],[[70,74],[[17,[15]]]],[[42,74],[[17,[15]]]],[[43,74],[[17,[15]]]],[[44,74],[[17,[15]]]],[[32,74],[[17,[15]]]],[[33,74],[[17,[15]]]],[[45,74],[[17,[15]]]],[[46,74],[[17,[15]]]],[[47,74],[[17,[15]]]],[[48,74],[[17,[15]]]],[[34,74],[[17,[15]]]],[[35,74],[[17,[15]]]],[[49,74],[[17,[15]]]],[[51,74],[[17,[15]]]],[[52,74],[[17,[15]]]],[[53,74],[[17,[15]]]],[[54,74],[[17,[15]]]],[[55,74],[[17,[15]]]],[[36,74],[[17,[15]]]],[[37,74],[[17,[15]]]],[[38,74],[[17,[15]]]],[[39,74],[[17,[15]]]],[[40,74],[[17,[15]]]],[[41,74],[[17,[15]]]],[[59,74],[[17,[15]]]],[[61,74],[[17,[15]]]],[[62,74],[[17,[15]]]],[73,186],[68,186],[69,186],[70,186],[71,186],[72,186],[42,186],[43,186],[44,186],[32,186],[33,186],[45,186],[46,186],[47,186],[48,186],[34,186],[35,186],[49,186],[51,186],[52,186],[53,186],[54,186],[55,186],[36,186],[37,186],[38,186],[39,186],[40,186],[41,186],[59,186],[61,186],[62,186],[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[32,32],32],[[33,33],33],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[32,31],32],[[32,32],32],[[33,31],33],[[33,33],33],[[34,31],34],[[34,34],34],[[35,31],35],[[35,35],35],[[36,50],36],[[36,36],36],[[37,37],37],[[37,50],37],[[38,38],38],[[38,50],38],[[39,58],39],[[39,39],39],[[40,40],40],[[40,58],40],[[41,58],41],[[41,41],41],[[59,60],59],[[59,59],59],[[61,61],61],[[61,60],61],[[62,60],62],[[62,62],62],[[32,31]],[[32,32]],[[33,33]],[[33,31]],[[34,31]],[[34,34]],[[35,35]],[[35,31]],[[36,50]],[[36,36]],[[37,50]],[[37,37]],[[38,38]],[[38,50]],[[39,39]],[[39,58]],[[40,40]],[[40,58]],[[41,41]],[[41,58]],[[59,60]],[[59,59]],[[61,60]],[[61,61]],[[62,62]],[[62,60]],[89,67],[89,31],[[160,82,116],17],[[81,116],17],[56,[[9,[187,8]]]],[[77,116],17],[[82,116,[17,[16]]],15],[[117,20],[[17,[107]]]],0,[88],[89],[120,84],[[31,31,31],30],[[16,16,16],30],[[31,31,31,31],30],[[16,16,16,16],30],[[32,32],32],[[36,36],36],[[39,39],39],0,[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[44,10],33],[[45,10],32],[[46,10],34],[[47,10],35],[[52,10],36],[[53,10],37],[[54,10],38],[120,[[18,[188]]]],[[65,120],[[18,[188]]]],[[64,120],[[18,[188]]]],[[63,120],[[18,[188]]]],0,[120,[[18,[188]]]],[120,[[18,[188]]]],0,[[68,32,32],32],[[69,33,33],33],[[71,34,34],34],[[72,35,35],35],[[68,36,36],36],[[69,37,37],37],[[70,38,38],38],[[68,39,39],39],[[69,40,40],40],[[70,41,41],41],[[68,59,59],59],[[69,61,61],61],[[70,62,62],62],[[98,99]],[[105,31]],[94,18],[95,18],[96,18],[102,18],[30,18],[108,18],[116,18],[73,18],[68,18],[69,18],[70,18],[71,18],[72,18],[42,18],[43,18],[44,18],[32,18],[33,18],[45,18],[46,18],[47,18],[48,18],[34,18],[35,18],[49,18],[51,18],[52,18],[53,18],[54,18],[55,18],[36,18],[37,18],[38,18],[39,18],[40,18],[41,18],[59,18],[61,18],[62,18],[[113,59,[17,[116]]]],[[73,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[68,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[69,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[70,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[71,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[72,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[42,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[43,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[44,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[32,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[33,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[45,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[46,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[47,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[48,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[34,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[35,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[49,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[51,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[52,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[53,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[54,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[55,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[36,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[37,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[38,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[39,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[40,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[41,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[59,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[61,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[62,[9,[74,8]]],[[18,[[9,[74,8]]]]]],[[30,31],30],[[30,31],30],[[89,67]],[[88,67]],[[89,67]],[[30,31],30],[[89,90]],[[30,31],30],[[39,189]],[[39,39]],[[39,190]],[[39,59]],[[39,58]],[[39,60]],[[39,191]],[[39,16]],[[40,190]],[[40,40]],[[40,16]],[[40,191]],[[40,189]],[[40,58]],[[40,61]],[[40,60]],[[41,41]],[[41,191]],[[41,16]],[[41,62]],[[41,60]],[[41,189]],[[41,190]],[[41,58]],[[59,191]],[[59,58]],[[59,60]],[[59,59]],[[59,16]],[[59,190]],[[59,39]],[[59,189]],[[61,61]],[[61,58]],[[61,189]],[[61,40]],[[61,60]],[[61,191]],[[61,190]],[[61,16]],[[62,60]],[[62,191]],[[62,58]],[[62,189]],[[62,190]],[[62,16]],[[62,41]],[[62,62]],[[39,39]],[[39,190]],[[39,16]],[[39,189]],[[39,191]],[[39,58]],[[39,59]],[[39,60]],[[40,190]],[[40,191]],[[40,61]],[[40,60]],[[40,58]],[[40,16]],[[40,40]],[[40,189]],[[41,191]],[[41,189]],[[41,60]],[[41,62]],[[41,58]],[[41,41]],[[41,190]],[[41,16]],[[59,60]],[[59,190]],[[59,58]],[[59,59]],[[59,191]],[[59,39]],[[59,16]],[[59,189]],[[61,189]],[[61,58]],[[61,61]],[[61,190]],[[61,16]],[[61,191]],[[61,40]],[[61,60]],[[62,41]],[[62,60]],[[62,190]],[[62,58]],[[62,189]],[[62,16]],[[62,62]],[[62,191]],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],0,0,[[48,48,31],48],[[55,55,50],55],[135,[[17,[192]]]],0,[15,68],[15,69],[15,70],[15,71],[15,72],[31,32],[31,33],[31,34],[31,35],[50,36],[50,37],[50,38],[58,39],[58,40],[58,41],[60,59],[60,61],[60,62],0,[[44,44]],[[32,32],32],[[32,31],32],[[33,31],33],[[33,33],33],[[45,45]],[[46,46]],[[47,47]],[[48,48],48],[[34,31],34],[[34,34],34],[[35,31],35],[[35,35],35],[[52,52]],[[53,53]],[[54,54]],[[55,55],55],[[36,50],36],[[36,36],36],[[37,50],37],[[37,37],37],[[38,38],38],[[38,50],38],[[39,58],39],[[39,39],39],[[40,58],40],[[40,40],40],[[41,41],41],[[41,58],41],[[59,60],59],[[59,59],59],[[61,61],61],[[61,60],61],[[62,60],62],[[62,62],62],[[44,44]],[[32,31]],[[32,32]],[[33,31]],[[33,33]],[[45,45]],[[46,46]],[[47,47]],[[34,34]],[[34,31]],[[35,31]],[[35,35]],[[52,52]],[[53,53]],[[54,54]],[[36,50]],[[36,36]],[[37,50]],[[37,37]],[[38,50]],[[38,38]],[[39,39]],[[39,58]],[[40,40]],[[40,58]],[[41,58]],[[41,41]],[[59,59]],[[59,60]],[[61,60]],[[61,61]],[[62,60]],[[62,62]],[[45,45],45],[[52,52],52],[[44,44],44],[[46,46],46],[[53,53],53],[[47,47],47],[[54,54],54],[[],44],[[],44],[[],32],[[],32],[[],33],[[],33],[[],45],[[],45],[[],46],[[],46],[[],47],[[],47],[[],48],[[],48],[[],34],[[],34],[[],35],[[],35],[[],52],[[],52],[[],53],[[],53],[[],54],[[],54],[[],55],[[],55],[[],36],[[],36],[[],37],[[],37],[[],38],[[],38],[[],39],[[],39],[[],40],[[],40],[[],41],[[],41],[[],59],[[],59],[[],61],[[],61],[[],62],[[],62],0,[[],63],[63,63],0,0,[[88,67],88],[[89,67],89],0,0,0,0,[89,60],[20,154],[32],[33],[48],[34],[35],[55],[36],[37],[38],[39],[40],[41],[59],[61],[62],[48],[55],[42],[43],[44],[45],[46],[47],[49],[51],[52],[53],[54],[42],[43],[44],[45],[46],[47],[49],[51],[52],[53],[54],[[48,73]],[[55,73]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43],[47],[51],[54],[48,33],[55,37],[20,[[18,[132,193]]]],[[],178],[[],178],[[],178],[[],178],[20,178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,32],32],[[44,32],32],[[46,32],32],[[49,36],36],[[53,36],36],[[43,33],33],[[47,33],33],[[51,37],37],[[54,37],37],[[43,34],34],[[47,34],34],[[42,32],32],[[44,32],32],[[46,32],32],[[49,36],36],[[53,36],36],[[43,33],33],[[47,33],33],[[51,37],37],[[54,37],37],[[43,34],34],[[47,34],34],0,0,0,0,0,[44,44],[45,45],[46,46],[47,47],[52,52],[53,53],[54,54],0,[33,32],[34,32],[35,33],[37,36],[38,37],[40,39],[41,40],[61,59],[62,61],[79,[[18,[83,133]]]],[79,[[18,[86,134]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[132,[[18,[108]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[56,[[17,[158]]]],[115,[[18,[85,136]]]],[118,[[17,[84]]]],[[115,20],[[18,[[13,[[79,[82]]]],136]]]],[56,[[17,[159]]]],[115,[[18,[136]]]],[118,[[18,[136]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[32,[[17,[32]]]],[33,[[17,[33]]]],[34,[[17,[34]]]],[35,[[17,[35]]]],[36,[[17,[36]]]],[37,[[17,[37]]]],[38,[[17,[38]]]],[56,[[17,[[9,[187,8]]]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[[],164],[73,132],[68,132],[69,132],[70,132],[71,132],[72,132],[42,132],[43,132],[44,132],[32,132],[33,132],[45,132],[46,132],[47,132],[48,132],[34,132],[35,132],[49,132],[51,132],[52,132],[53,132],[54,132],[55,132],[36,132],[37,132],[38,132],[39,132],[40,132],[41,132],[59,132],[61,132],[62,132],[96,95],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[88],[89],[21],[95,96],[118,117],[118,117],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[21],[[21,179]],[[60,60],59],[[60,60,60],61],[[60,60,60,60],62],[[31,31],32],[[31,31,31],33],[[31,31,31],34],[[31,31,31,31],35],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],65],[[],20],[[31,31,32,31,31],66],[42],[43],[44],[45],[46],[47],[49],[51],[52],[53],[54],[[44,194]],[[32,194]],[[33,194]],[[45,194]],[[47,194]],[[35,194]],[[39,194]],[[40,194]],[[41,194]],[[59,194]],[[61,194]],[[62,194]],[32],[33],[48],[34],[35],[55],[36],[37],[38],[39],[40],[41],[59],[61],[62],[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,32],[33,32],[34,32],[35,32],[36,36],[37,36],[38,36],[39,39],[40,39],[41,39],[59,59],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[[]],[[]],[32,32],[33,32],[34,32],[35,32],[36,36],[37,36],[38,36],[39,39],[40,39],[41,39],[59,59],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[[]],[33,33],[48,33],[34,34],[35,33],[55,37],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[[]],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,32],[34,32],[35,32],[37,36],[38,36],[40,39],[41,39],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,32],[33,32],[34,32],[35,32],[36,36],[37,36],[38,36],[39,39],[40,39],[41,39],[59,59],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[32,32],[33,32],[34,32],[35,32],[36,36],[37,36],[38,36],[39,39],[40,39],[41,39],[59,59],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[[]],[32,33],[33,33],[34,34],[35,33],[36,37],[37,37],[38,37],[39,40],[40,40],[41,40],[59,61],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[[]],[32,35],[33,35],[34,35],[35,35],[36,38],[37,38],[38,38],[39,41],[40,41],[41,41],[59,62],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,32],[34,32],[35,32],[37,36],[38,36],[40,39],[41,39],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[35,32],[38,36],[41,39],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,32],[34,32],[35,32],[37,36],[38,36],[40,39],[41,39],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,32],[34,32],[35,32],[37,36],[38,36],[40,39],[41,39],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,32],[34,32],[35,32],[37,36],[38,36],[40,39],[41,39],[61,59],[62,59],[[]],[35,33],[38,37],[41,40],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,33],[34,34],[35,33],[37,37],[38,37],[40,40],[41,40],[61,61],[62,61],[[]],[35,35],[38,38],[41,41],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],[[]],[[]],[33,35],[34,35],[35,35],[37,38],[38,38],[40,41],[41,41],[61,62],[62,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[32,32],45],[[33,33,33],44],[[34,34,34],46],[[35,35,35,35],47],0,0,[[31,31,31,31],48],0,0,[[31,31],32],[[31,31,31],33],[[31,31,31],34],[[31,31,31,31],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[36,36],52],[[37,37,37],53],[[38,38,38,38],54],[[50,50,50,50],55],[[50,50],36],[[50,50,50],37],[[50,50,50,50],38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[58,58],39],[[58,58,58],40],[[58,58,58,58],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[60,60],59],[[60,60,60],61],[[60,60,60,60],62],0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[195,195],[196,196],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[196],[10],[10],[196],0,[[]],[[]],[10],[10],[[195,11],12],[[]],[[]],[[]],[[]],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],0,[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[197,197],[198,198],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],198],[10],[10],[10],[10],0,[[]],[[]],[10],[10],[[198,11],12],[[]],[[]],[[]],[[]],[156],[120],0,[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],0,0,[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[199,199],[200,200],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[199,33],201],[[],199],[10],[10],[10],[10],[[]],[[]],[10],[10],[[199,11],12],[[200,11],12],[[]],[[]],[[]],[[]],[156],[120],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],0,[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[202,202],[203,203],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],202],[10],[10],[10],[10],[[]],[[]],[10],[10],[[]],[[]],[[]],[[]],[156],[120],[120,203],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],0,0,0,[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],[1],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[205,205],[206,206],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],0,0,0,[[],206],[10],[205],[10],[10],[206],[10],[205],[10],[206],[10],[[]],[[]],[[]],[10],[10],[10],0,[[]],[[]],[[]],[[]],[[]],[[]],[120],[156],0,[[],10],[[],10],[[],10],[1],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],0,0,0,0,[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],0,0,0,0,0,0,[[]],[[]],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],0,[[]],[[]],[[]],0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[207,207],[208,208],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],207],[[],208],[10],[10],[10],[10],[[]],[[]],[10],[10],[[207,11],12],[[]],[[]],[[]],[[]],[120],[156],[156],[120],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[1],[1],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[209,209],[210,210],[211,211],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],209],[209],[10],[10],[10],[10],[209],[10],[10],[[]],[[]],[[]],[10],[10],[10],[[209,11],12],[[210,11],12],[[211,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[156],[120],[[[22,[212]],[126,[23]],[25,[204]],[25,[206]],[214,[213]],[25,[209]],[25,[210]],[25,[28]],[25,[215]],[25,[216]],[25,[29]],[25,[94]]]],[[],10],[[],10],[[],10],[1],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[],17],[[[22,[212]],[22,[21]],[22,[23]],[26,[209]],[25,[210]],[25,[206]],[214,[213]],[25,[29]],[25,[28]],217,[26,[218]]]],[[]],[[]],[[]],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[219,219],[220,220],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[[]],[[]],[10],[10],[[219,11],12],[[220,11],12],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[221,221],[222,222],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[[]],[[]],[10],[10],[[221,11],12],[[222,11],12],[[]],[[]],[[]],[[]],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[223,223],[224,224],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[[]],[[]],[10],[10],[[223,11],12],[[224,11],12],[[]],[[]],[[]],[[]],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,[[],2],[[],2],[3],[[]],[[]],[225,225],[[]],[[],[[9,[7,8]]]],0,[[],225],[10],[10],[[]],[10],[[225,11],12],[[]],[[]],[156],[120],[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],[[16,16]],[16],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[226,226],[227,227],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],227],[10],[10],[10],[10],[[]],[[]],[10],[10],[[226,11],12],[[227,11],12],[[]],[[]],[[]],[[]],[120],[156],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,[[],2],[[],2],[3],0,[[]],[[]],[228,228],[[]],[[],[[9,[7,8]]]],[[],228],[10],[10],[[]],[10],[[228,11],12],[[]],[[]],[156],[120],[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],0,[[16,16]],[16],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],[[[22,[23]],[25,[228]],217,[25,[218]]]],[[]],0,[[],2],[[],2],[3],[[]],[[]],[229,229],[[]],[[],[[9,[7,8]]]],[[],229],[10],[10],[[]],[10],[[229,11],12],[[]],[[]],[120],[156],[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],[[16,16]],[16],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],[[[22,[23]],[25,[229]],217,[25,[230]]]],[[]],0,0,0,0,[[],2],[[],2],[3],[[]],[[]],[231,231],[[]],[[],[[9,[7,8]]]],[10],[10],[[]],[10],[[231,11],12],[[]],[[]],[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],[[16,16]],[16],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],[[]],0,0,0,0,[[],2],[[],2],[3],[[]],[[]],[232,232],[[]],[[],[[9,[7,8]]]],[[],232],[10],[10],[[]],[10],[[232,11],12],0,[[]],[[]],[156],[120],[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],[[16,16]],[16],0,[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[233,233],[234,234],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],233],[10],[10],[10],[10],[[]],[[]],[10],[10],[[233,11],12],[[234,11],12],[[]],[[]],[[]],[[]],[156],[120],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[235,235],[236,236],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],235],[[],236],[10],[10],[10],[10],[[]],[[]],[10],[10],0,[[235,11],12],[[236,11],12],[[]],[[]],[[]],[[]],[156],[120],[120],[156],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],0,[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],17],[[],17],[[]],[[]],0,0,0,[[],2],[[],2],[3],[[]],[[]],[237,237],[[]],[[],[[9,[7,8]]]],[[],237],[10],[10],[[]],[10],[[237,11],12],[[]],[[]],[120],[156],[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],[[16,16]],[16],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[238,238],[239,239],[240,240],[241,241],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],0,[[],238],[[],239],[[],240],[10],[10],[10],[10],[10],[10],[10],[10],[[],[[18,[241]]]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],0,[129,[[18,[130,131]]]],[[238,11],12],[[239,11],12],[[240,11],12],[[241,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156],[120],[120],[156],[156],[120],0,0,[[],10],[[],10],[[],10],[[],10],[1],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],0,[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],0,[241,18],0,0,0,0,[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[],242],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[242,242],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],244],[10],[244],[10],[10],[250],[10],[10],[10],[10],[10],[10],[10],[10],[244],[10],[250],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[[245,11],12],[[250,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[156],[120],[[[22,[23]],[26,[249]],[26,[243]],[25,[247]],[25,[218]],[25,[5]],[25,[251]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[120],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[31,242],0,[[[22,[23]],[26,[242]],[26,[243]],[22,[238]],[26,[252]],[25,[246]],[25,[218]],[25,[5]],[25,[29]],[25,[28]],[26,[205]],[26,[253]],127]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[242,240],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[242,31],242],[[242,254],242],0,0,0,[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[[]],[[]],[255,255],[27,27],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],255],[[],27],[10],[10],[10],[10],[[]],[[]],[10],[10],[[27,11],12],[[]],[[]],[[]],[[]],[120],[156],[120],[156],[[],10],[[],10],[1],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],0,[31,255],[67,27],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],20],[[],20],[[],17],[[],17],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[153,153],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[[],78],0,0,[153,153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[256,256],[257,257],[258,258],[253,253],[259,259],[153,153],[260,260],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[153,153],122],[[],256],[[],257],[[],258],[[],253],[[],259],[10],[256],[10],[257],[10],[10],[259],[10],[153],[10],[10],[256],[10],[10],[257],[10],[10],[10],[259],[153],[10],[10],[[153,153],31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[78,15],[128],[[153,153],15],[[],15],[[259,11],12],[[153,11],12],[[260,11],12],[[]],[[]],[[]],[[]],[[]],[39,153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156],[120],[120],[156],[120],[156],[156],[120],[156],[120],[[],154],0,[153],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[153,153],0,[[153,153],[[17,[122]]]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[153,153],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[261,262]],0,0,0,[263,263],[213,213],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],0,0,[[],263],[[],213],[[],264],[[],265],[[],266],[[],267],[[],268],[[],271],[[],273],[[],274],[[],275],[[],276],[[],277],[[],278],[[],279],[[],280],[[],281],[[],282],[[],283],[[],284],0,0,[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[280],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[280],[10],[10],[10],[10],[[],[[18,[263]]]],[[],[[18,[213]]]],[[],[[18,[264]]]],[[],[[18,[265]]]],[[],[[18,[266]]]],[[],[[18,[267]]]],[[],[[18,[268]]]],[[],[[18,[269]]]],[[],[[18,[270]]]],[[],[[18,[271]]]],[[],[[18,[272]]]],[[],[[18,[273]]]],[[],[[18,[274]]]],[[],[[18,[275]]]],[[],[[18,[277]]]],[[],[[18,[278]]]],[[],[[18,[279]]]],[[],[[18,[281]]]],[[],[[18,[282]]]],[[],[[18,[283]]]],[[],[[18,[284]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,0,0,0,0,[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],[129,[[18,[130,131]]]],0,0,0,0,0,0,0,0,0,[[263,11],12],[[213,11],12],[[264,11],12],[[265,11],12],[[266,11],12],[[267,11],12],[[268,11],12],[[269,11],12],[[270,11],12],[[271,11],12],[[272,11],12],[[273,11],12],[[274,11],12],[[275,11],12],[[276,11],12],[[277,11],12],[[278,11],12],[[279,11],12],[[280,11],12],[[281,11],12],[[282,11],12],[[283,11],12],[[284,11],12],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[262],[262],[262],[262],[262],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[267,33],15],0,0,0,0,0,0,0,0,0,[[264,177,175]],[[266,177,175]],[[268,177,175]],[[269,177,175]],[[270,177,175]],[[271,177,175]],[[272,177,175]],[[274,177,175]],[[275,177,175]],[[277,177,175]],[[278,177,175]],[[279,177,175]],[[282,177,175]],[[283,177,175]],[[284,177,175]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],0,0,[263,18],[267,18],[268,18],[269,18],[270,18],[271,18],[272,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],132],[[],132],[[],132],[[],132],[[],132],[[],285],[[],285],[[],285],[[],285],[[],285],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[3],[[]],[[]],0,[[218,28],201],0,[218,218],[[]],[[],[[9,[7,8]]]],0,[[],218],[10],[10],[[]],[10],0,[[218,11],12],0,[[]],[[]],[120],[156],0,0,0,[[],10],[1],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],0,[[],15],0,0,0,[[16,16]],[16],0,[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],20],[[],17],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[217,116],[[175,[116]]]],[[217,116,286],[[175,[116]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[],78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[287,287],[288,288],[289,289],[290,290],[215,215],[291,291],[216,216],[292,292],[293,293],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[288,288],122],0,0,0,0,0,0,[[288,28],294],0,[[],287],[[],288],[[],289],[[],290],[[],295],[[],215],[[],291],[[],216],[[],292],[[],293],[10],[287],[10],[10],[10],[10],[10],[10],[10],[10],[10],[292],[10],[10],[10],[287],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[292],[10],[[217,116]],0,[[],[[18,[293]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[78,15],[78,15],[128],0,[138,116],[[288,288],15],[[293,293],15],[[],15],[[],15],[129,[[18,[130,131]]]],[295,154],[[288,11],12],[[215,11],12],[[291,11],12],[[216,11],12],[[292,11],12],[[293,11],12],[116,138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[[290,116],[[86,[[175,[116]]]]]],[[217,116],216],[[],154],[120],[[290,296,297,298,[17,[299]]]],[[290,300,296,297,299,300]],[[217,116]],[288],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[120],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[217,25,116,31],15],[[217,25,116,31],15],0,[[288,288],[[17,[122]]]],0,0,0,[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],0,0,[293,18],0,[[287,288],301],[288,301],[[217,32],15],0,0,[[217,28,288],293],[[217,28,288,286],293],0,[[217,32],293],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[217],[[217,10,59]],[217],[217],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[295],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[302,145],303],[[304,145],303],[[305,145],303],[[306,145],303],[[307,145],303],[308],[[309,309],15],[310,311],[310,311],[[],311],[312,313],[[314,313],314],0,0,[315],[312,316],[[314,316],314],0,0,[312,317],[[314,317],314],0,0,[315],[[318,318],318],[[309,309],309],[[318,318]],[[309,309]],[[310,319,320,321,301,322]],[[310,[142,[31,140,140,[147,[31]]]],15]],[[310,[142,[31,140,140,[147,[31]]]],[141,[31,140]],15]],[[310,31,15]],0,[[323,31],323],[[323,309],323],[[],324],[[],325],[[],326],[[],327],[[],328],[[],313],[[],329],[[],330],[[],331],[[],332],[[],316],[[],317],[[],333],[[],334],0,[310,31],[[323,31],323],0,0,0,[310,31],[[323,31],323],0,0,[[[302,[335]],302]],[[318,31,336],318],[337],[338],[[339,340,[142,[31,140,140,[147,[31]]]],[141,[31,140]]]],[[318,340,[142,[31,140,140,[147,[31]]]]]],[[310,[142,[31,140,140,[147,[31]]]],15]],[[318,340,[142,[31,140,140,[147,[31]]]],[141,[31,140]]]],[[310,[142,[31,140,140,[147,[31]]]],[141,[31,140]],15]],[[318,340,31]],[[310,31,15]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[341,[[17,[342]]]],[341,[[17,[342]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[341,[[17,[343]]]],[341,[[17,[343]]]],[[],[[17,[344]]]],[[],[[17,[344]]]],[[[302,[335]]],[[17,[344]]]],[308,[[17,[344]]]],[305,[[17,[344]]]],[341,[[17,[308]]]],[341,[[17,[308]]]],[341,[[17,[306]]]],[341,[[17,[306]]]],[341,[[17,[345]]]],[341,[[17,[345]]]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[346,[[17,[347]]]],[346,[[17,[347]]]],[341,[[17,[304]]]],[341,[[17,[304]]]],[341,[[17,[307]]]],[341,[[17,[307]]]],[321,145],[318],[[],17],[[],17],[[[348,[306]]],17],[[[348,[345]]],17],[[[348,[349]]],17],[306,17],[341,[[17,[305]]]],[341,[[17,[305]]]],[346,[[17,[350]]]],[346,[[17,[350]]]],[321,145],[301,341],[346,[[17,[351]]]],[346,[[17,[351]]]],[346,[[17,[352]]]],[346,[[17,[352]]]],[341,[[17,[348]]]],[341,[[17,[348]]]],[341,[[17,[348]]]],[341,[[17,[348]]]],[341,[[17,[348]]]],[341,[[17,[348]]]],[341,[[17,[353]]]],[341,[[17,[353]]]],[341,17],[341,17],[318],[[],[[17,[354]]]],[[],[[17,[354]]]],[[[348,[349]]],[[17,[354]]]],[[[348,[345]]],[[17,[354]]]],[[[348,[306]]],[[17,[354]]]],[306,[[17,[354]]]],[341,[[17,[349]]]],[341,[[17,[349]]]],[341,[[17,[302]]]],[341,[[17,[302]]]],[[],355],[[[302,[335]]],355],[308,355],[304,355],[305,355],[[[348,[349]]],355],[[[348,[306]]],355],[[[348,[345]]],355],[306,355],[[[307,[335]]],355],[318,142],[318,142],[[356,325,357,340,358,319,321,320,301,322]],[[359,360],167],[[361,360],167],[[361,360],167],[[359,360],167],[31,301],[31,314],[362],[363,17],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],[[324,324]],[[325,325]],[[326,326]],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[316,316]],[[317,317]],[[333,333]],[[334,334]],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],[[324,324]],[[325,325]],[[326,326]],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[316,316]],[[317,317]],[[333,333]],[[334,334]],[324,16],[325,60],[326,16],[327,60],[328,60],[313,189],[329,60],[331,60],[332,16],[316,60],[317,60],[333,60],[334,60],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],[[324,324]],[[325,325]],[[326,326]],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[316,316]],[[317,317]],[[333,333]],[[334,334]],0,0,[[359,360],167],0,0,0,0,[337,[[145,[31,[144,[[143,[31]]]]]]]],[310,364],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[302,[335]],145],365],[[304,145],365],[[305,145],365],[[306,145],365],[[307,145],365],[366,347],[367,346],[368,350],[369,351],[370,352],[323,310],[314,312],[[323,15],323],0,[[],311],[[[141,[31,140]],[141,[31,140]],31],301],[[31,31],301],[[31,31],314],[[31,31],301],[[31,31],314],[[[302,[335]],371,31,15],[[17,[31]]]],[[308,371,31,15],[[17,[31]]]],[[305,371,31,15],[[17,[31]]]],[[[302,[335]],371,31,15],[[17,[372]]]],[[308,371,31,15],[[17,[372]]]],[[304,371,31,15],[[17,[372]]]],[[305,371,31,15],[[17,[372]]]],[[348,371,31,15],[[17,[372]]]],[[306,371,31,15],[[17,[372]]]],[[307,371,31,15],[[17,[372]]]],[[373,296,297,371,31,15,374],17],[[373,296,297,371,31,15,374],17],[[373,296,297,145,142,341,31,15,374],17],0,[[],31],[[[302,[335]]],31],[308,31],[304,31],[305,31],[[[348,[306]]],31],[[[348,[345]]],31],[[[348,[349]]],31],[306,31],[[[307,[335]]],31],[[323,15],323],0,0,0,[[],31],[[[302,[335]]],31],[308,31],[304,31],[305,31],[[[348,[349]]],31],[[[348,[345]]],31],[[[348,[306]]],31],[306,31],[[[307,[335]]],31],0,[[307,141],[[17,[10]]]],[307,31],[310,141],[375,31],[[376,31,296,377]],[[315,296]],[299],[376,376],[378,378],[302,302],[375,375],[315,315],[347,347],[366,366],[324,324],[379,379],[380,380],[381,381],[382,382],[346,346],[367,367],[383,383],[384,384],[361,361],[385,385],[338,338],[386,386],[387,387],[359,359],[388,388],[337,337],[350,350],[368,368],[351,351],[369,369],[352,352],[370,370],[360,360],[364,364],[325,325],[358,358],[326,326],[389,389],[340,340],[318,318],[336,336],[339,339],[357,357],[390,390],[356,356],[391,391],[311,311],[309,309],[310,310],[323,323],[392,392],[296,296],[327,327],[393,393],[298,298],[394,394],[395,395],[396,396],[319,319],[328,328],[397,397],[398,398],[322,322],[320,320],[321,321],[399,399],[313,313],[308,308],[304,304],[305,305],[348,348],[362,362],[400,400],[401,401],[402,402],[329,329],[355,355],[403,403],[404,404],[299,299],[405,405],[363,363],[406,406],[407,407],[330,330],[408,408],[331,331],[306,306],[307,307],[409,409],[410,410],[411,411],[412,412],[413,413],[414,414],[332,332],[415,415],[416,416],[301,301],[417,417],[312,312],[314,314],[297,297],[316,316],[317,317],[373,373],[333,333],[374,374],[418,418],[334,334],[419,419],[[],[[9,[341,8]]]],[[[302,[335]]],[[9,[341,8]]]],[308,[[9,[341,8]]]],[304,[[9,[341,8]]]],[305,[[9,[341,8]]]],[[[348,[345]]],[[9,[341,8]]]],[[[348,[349]]],[[9,[341,8]]]],[[[348,[306]]],[[9,[341,8]]]],[306,[[9,[341,8]]]],[[[307,[335]]],[[9,[341,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[324,324],122],[[325,325],122],[[326,326],122],[[391,391],122],[[327,327],122],[[328,328],122],[[313,313],122],[[329,329],122],[[331,331],122],[[332,332],122],[[316,316],122],[[317,317],122],[[333,333],122],[[334,334],122],[298,319],0,0,0,0,0,[298,319],0,0,0,0,0,0,0,0,0,0,[310],0,0,[[373,303,420]],[312,330],[[314,330],314],0,0,[[385,31,31,31]],[324,324],[325,325],[326,326],[327,327],[328,328],[313,313],[329,329],[331,331],[332,332],[316,316],[317,317],[333,333],[334,334],[[[175,[8]]],301],[[[175,[8]]],314],[145,303],[145,303],[[[302,[335]],145],303],[[308,145],303],[[304,145],303],[[305,145],303],[[[348,[306]],145],303],[[[348,[345]],145],303],[[[348,[349]],145],303],[[306,145],303],[[[307,[335]],145],303],[312,303],[145,365],[145,365],[[339,142,142]],[[],303],[[[302,[335]]],303],[308,303],[304,303],[305,303],[[[348,[349]]],303],[[[348,[306]]],303],[[[348,[345]]],303],[306,303],[[[307,[335]]],303],[[],365],[[[302,[335]]],365],[308,365],[304,365],[305,365],[[[348,[306]]],365],[[[348,[349]]],365],[[[348,[345]]],365],[306,365],[[[307,[335]]],365],[[145,145],303],[[145,145],303],[[312,145],303],[302,[[17,[410]]]],0,[312,31],[[314,31],314],0,[417,407],0,0,[[417,319,319],[[17,[299]]]],[[417,421],299],[[417,60,60],[[17,[299]]]],[417,167],[[145,145,142,142,422,422,31,423,15]],[347,15],[[366,15],366],[346,15],[[367,15],367],[350,15],[[368,15],368],[351,15],[[369,15],369],[352,15],[[370,15],370],0,[[417,319],167],[[417,60],167],[[324,324],15],[[361,384],15],[[325,325],15],[[326,326],15],[[296,360],15],[[327,327],15],[[328,328],15],[[313,313],15],[[329,329],15],[[331,331],15],[[332,332],15],[[297,319],15],[[316,316],15],[[317,317],15],[[333,333],15],[[334,334],15],[[302,141],15],[[308,141],15],[[304,141],15],[[305,141],15],[[307,141],15],[[],301],[[],314],[424,301],[424,314],[[],[[17,[301]]]],[[],[[17,[314]]]],[[[175,[[141,[31,140]],8]]],[[17,[301]]]],[[[175,[[141,[31,140]],8]]],[[17,[314]]]],[[393,393]],0,[[367,324],367],0,[[31,31],301],[[31,31],314],[338,142],0,[338,142],0,[350,346],[351,346],[352,346],0,0,0,0,0,0,0,[302,[[17,[308]]]],[[],425],[[],426],[[],427],[[],376],[[],378],[[],375],[[],315],[[],347],[[],366],[[],324],[[],380],[[],381],[[],346],[[],361],[[],385],[[],338],[[],386],[[],386],[[],359],[[],360],[[],360],[[],325],[[],358],[[],389],[[],340],[[],318],[[],336],[[],339],[[],357],[[],390],[[],356],[[],391],[[],311],[[],309],[[],310],[[],296],[[],394],[[],395],[[],396],[[],319],[[],319],[[],328],[[],398],[[],322],[[],321],[[],399],[[],313],[[],402],[[],329],[[],403],[[],405],[[],407],[[],330],[[],414],[[],332],[[],415],[[],422],[[],417],[[],297],[[],316],[[],317],[[],373],[[],333],[[],374],[[],334],[[],419],[[],31],[[337,142]],[[],31],[[]],[[],31],[[],31],[[]],[[],31],[[314,[145,[31,[144,[[143,[31]]]]]]],314],[312,31],[[314,31],314],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[321,145],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[301,341],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[321],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[356,325,319]],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],0,0,[[304,141,15],31],[310,190],[[323,190],323],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[341,8]]],[[18,[[9,[8]],[9,[341,8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[341]]],[[18,[13,[13,[341]]]]]],[341,17],[[[14,[341]]],[[18,[14,[14,[341]]]]]],[341,17],[[418,[141,[31,140]],[141,[31,140]]]],[[418,145,142,15]],[[418,145,142]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[[],323],[340,31],[310,191],[[391,364],191],0,[340,[[142,[31,140,140,[147,[31]]]]]],0,[[],324],[[],325],[[],326],[[],327],[[],328],[[],313],[[],329],[[],331],[[],332],[[],316],[[],317],[[],333],[[],334],[[310,15]],[[323,15],323],[[314,15],314],0,0,0,0,[[323,15,15],323],[[378,378],15],[[347,347],15],[[366,366],15],[[324,324],15],[[379,379],15],[[380,380],15],[[381,381],15],[[382,382],15],[[346,346],15],[[367,367],15],[[383,383],15],[[384,384],15],[[385,385],15],[[386,386],15],[[387,387],15],[[350,350],15],[[368,368],15],[[351,351],15],[[369,369],15],[[352,352],15],[[370,370],15],[[360,360],15],[[364,364],15],[[325,325],15],[[358,358],15],[[326,326],15],[[389,389],15],[[340,340],15],[[318,318],15],[[336,336],15],[[339,339],15],[[357,357],15],[[390,390],15],[[356,356],15],[[391,391],15],[[311,311],15],[[309,309],15],[[323,323],15],[[392,392],15],[[327,327],15],[[394,394],15],[[396,396],15],[[319,319],15],[[328,328],15],[[397,397],15],[[398,398],15],[[322,322],15],[[320,320],15],[[321,321],15],[[399,399],15],[[313,313],15],[[304,304],15],[[362,362],15],[[400,400],15],[[401,401],15],[[402,402],15],[[329,329],15],[[330,330],15],[[408,408],15],[[331,331],15],[[409,409],15],[[332,332],15],[[415,415],15],[[416,416],15],[[316,316],15],[[317,317],15],[[333,333],15],[[334,334],15],[[419,419],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[375,31],[[374,319],374],0,[[],374],[[],374],[[],374],[[374,360],374],0,[374,374],[374,374],[324],[325],[326],[327],[328],[313],[329],[331],[332],[316],[317],[333],[334],[305,[[175,[305,8]]]],[60,416],0,0,[[145,422,142,422,31,423,15]],[[145,422,142,422,31,423,15]],0,[[306,415],[[17,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[[415,141],[[17,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[[415,141],[[17,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[[306,415,141],[[17,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],0,0,0,0,[428,[[17,[329]]]],[428,15],[299,17],[[376,31,315,296,297,417],[[17,[31]]]],[[],323],[302,332],0,0,[[[302,[335]]]],[305],[[[141,[31,140]],[141,[31,140]],416,416,31,15],393],[[378,11],[[18,[125]]]],[[375,11],[[18,[125]]]],[[347,11],[[18,[125]]]],[[366,11],[[18,[125]]]],[[324,11],[[18,[125]]]],[[324,11],[[18,[125]]]],[[324,11],[[18,[125]]]],[[324,11],[[18,[125]]]],[[324,11],[[18,[125]]]],[[379,11],[[18,[125]]]],[[380,11],[[18,[125]]]],[[381,11],[[18,[125]]]],[[382,11],[[18,[125]]]],[[346,11],[[18,[125]]]],[[367,11],[[18,[125]]]],[[383,11],[[18,[125]]]],[[384,11],[[18,[125]]]],[[385,11],[[18,[125]]]],[[386,11],[[18,[125]]]],[[387,11],[[18,[125]]]],[[337,11],[[18,[125]]]],[[350,11],[[18,[125]]]],[[368,11],[[18,[125]]]],[[351,11],[[18,[125]]]],[[369,11],[[18,[125]]]],[[352,11],[[18,[125]]]],[[370,11],[[18,[125]]]],[[360,11],[[18,[125]]]],[[364,11],[[18,[125]]]],[[325,11],[[18,[125]]]],[[325,11],[[18,[125]]]],[[325,11],[[18,[125]]]],[[325,11],[[18,[125]]]],[[325,11],[[18,[125]]]],[[358,11],[[18,[125]]]],[[326,11],[[18,[125]]]],[[326,11],[[18,[125]]]],[[326,11],[[18,[125]]]],[[326,11],[[18,[125]]]],[[326,11],[[18,[125]]]],[[389,11],[[18,[125]]]],[[340,11],[[18,[125]]]],[[318,11],[[18,[125]]]],[[336,11],[[18,[125]]]],[[339,11],[[18,[125]]]],[[357,11],[[18,[125]]]],[[390,11],[[18,[125]]]],[[356,11],[[18,[125]]]],[[391,11],[[18,[125]]]],[[311,11],[[18,[125]]]],[[309,11],[[18,[125]]]],[[310,11],[[18,[125]]]],[[323,11],[[18,[125]]]],[[392,11],[[18,[125]]]],[[327,11],[[18,[125]]]],[[327,11],[[18,[125]]]],[[327,11],[[18,[125]]]],[[327,11],[[18,[125]]]],[[327,11],[[18,[125]]]],[[393,11],[[18,[125]]]],[[298,11],[[18,[125]]]],[[394,11],[[18,[125]]]],[[396,11],[[18,[125]]]],[[319,11],[[18,[125]]]],[[328,11],[[18,[125]]]],[[328,11],[[18,[125]]]],[[328,11],[[18,[125]]]],[[328,11],[[18,[125]]]],[[328,11],[[18,[125]]]],[[397,11],[[18,[125]]]],[[398,11],[[18,[125]]]],[[320,11],[[18,[125]]]],[[321,11],[[18,[125]]]],[[399,11],[[18,[125]]]],[[313,11],[[18,[125]]]],[[313,11],[[18,[125]]]],[[313,11],[[18,[125]]]],[[313,11],[[18,[125]]]],[[313,11],[[18,[125]]]],[[304,11],[[18,[125]]]],[[348,11],[[18,[125]]]],[[362,11],[[18,[125]]]],[[400,11],[[18,[125]]]],[[401,11],[[18,[125]]]],[[402,11],[[18,[125]]]],[[329,11],[[18,[125]]]],[[329,11],[[18,[125]]]],[[329,11],[[18,[125]]]],[[329,11],[[18,[125]]]],[[329,11],[[18,[125]]]],[[403,11],[[18,[125]]]],[[404,11],[[18,[125]]]],[[405,11],[[18,[125]]]],[[363,11],[[18,[125]]]],[[406,11],[[18,[125]]]],[[330,11],[[18,[125]]]],[[408,11],[[18,[125]]]],[[331,11],[[18,[125]]]],[[331,11],[[18,[125]]]],[[331,11],[[18,[125]]]],[[331,11],[[18,[125]]]],[[331,11],[[18,[125]]]],[[306,11],[[18,[125]]]],[[307,11],[[18,[125]]]],[[409,11],[[18,[125]]]],[[409,11],[[18,[125]]]],[[410,11],[[18,[125]]]],[[411,11],[[18,[125]]]],[[412,11],[[18,[125]]]],[[413,11],[[18,[125]]]],[[332,11],[[18,[125]]]],[[332,11],[[18,[125]]]],[[332,11],[[18,[125]]]],[[332,11],[[18,[125]]]],[[332,11],[[18,[125]]]],[[415,11],[[18,[125]]]],[[416,11],[[18,[125]]]],[[422,11],[[18,[125]]]],[[316,11],[[18,[125]]]],[[316,11],[[18,[125]]]],[[316,11],[[18,[125]]]],[[316,11],[[18,[125]]]],[[316,11],[[18,[125]]]],[[317,11],[[18,[125]]]],[[317,11],[[18,[125]]]],[[317,11],[[18,[125]]]],[[317,11],[[18,[125]]]],[[317,11],[[18,[125]]]],[[333,11],[[18,[125]]]],[[333,11],[[18,[125]]]],[[333,11],[[18,[125]]]],[[333,11],[[18,[125]]]],[[333,11],[[18,[125]]]],[[334,11],[[18,[125]]]],[[334,11],[[18,[125]]]],[[334,11],[[18,[125]]]],[[334,11],[[18,[125]]]],[[334,11],[[18,[125]]]],[[419,11],[[18,[125]]]],0,[[338,296,15]],[312,31],[[314,31],314],0,0,0,[312,378],[[314,378],314],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[379,324],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],358],[[]],[[]],[[]],[309,340],[326,340],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[309,322],[[]],[[],321],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[316,402],[317,402],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,331],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[415,416],[[]],[[]],[353,422],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[333,374],[330,374],[[]],[[]],[[]],[[31,31],309],[16,[[17,[324]]]],[60,[[17,[325]]]],[16,[[17,[326]]]],[60,[[17,[327]]]],[60,[[17,[328]]]],[189,[[17,[313]]]],[60,[[17,[329]]]],[60,[[17,[331]]]],[16,[[17,[332]]]],[60,[[17,[316]]]],[60,[[17,[317]]]],[60,[[17,[333]]]],[60,[[17,[334]]]],[16,324],[60,325],[16,326],[60,327],[60,328],[189,313],[60,329],[60,331],[16,332],[60,316],[60,317],[60,333],[60,334],[16,324],[60,325],[16,326],[60,327],[60,328],[189,313],[60,329],[60,331],[16,332],[60,316],[60,317],[60,333],[60,334],[[31,[141,[31,140]],[141,[31,140]],31],309],[31,309],[[31,299,31],394],[[],[[17,[306]]]],[31,309],[[[175,[[141,[31,140]],8]]],[[17,[306]]]],[[31,[142,[31,140,140,[147,[31]]]]],309],[429,[[17,[400]]]],[[],324],[[],325],[[],326],[[],327],[[],328],[[],313],[[],329],[[],331],[[],332],[[],316],[[],317],[[],333],[[],334],[[[175,[[141,[31,140]],8]]],[[17,[[302,[335]]]]]],[[60,60],384],[[60,60],386],[[60,60],360],[[60,60],319],[[],318],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,141,141,141],309],[31,309],[154,[[17,[400]]]],[156],[120],[120],[156],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[120],[156],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[120],[156],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[156],[120],[156],[120],[156],[120],[120],[156],[120],[156],[120],[156],[120],[156],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[156],[120],[338,[[142,[31,430,140,[431,[31,430,140,140,430]]]]]],[338,[[142,[31,430,140,[431,[31,430,140,140,430]]]]]],[338,[[142,[31,430,140,[432,[31,430,140,140,430]]]]]],[[361,384],[[17,[383]]]],[[359,386],17],[[296,360],[[17,[310]]]],[[297,319],[[17,[312]]]],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[359,387],[[17,[338]]]],[[359,387],[[17,[338]]]],[[361,384],[[17,[383]]]],[[359,386],17],[[296,360],[[17,[310]]]],[[297,319],[[17,[312]]]],[[359,386],17],[[361,60],17],[[359,60],17],[[296,60],17],[[297,60],17],[[361,60],17],[[296,60],17],[[297,60],17],[[310,31,[142,[31,140,140,[147,[31]]]]],31],[310,31],[[323,31],323],0,0,0,[[374,330],374],0,0,0,0,[[[144,[[142,[31,140,140,[147,[31]]]]]]],301],[[[144,[[142,[31,140,140,[147,[31]]]]]]],314],0,[[296,297,298,[17,[299]]]],[[433,296,297,298,[17,[299]]]],[[31,296,297,299,31]],[[433,31,296,297,299,31]],[[417,[17,[315]],297,296,434]],0,[324],[382],[384],[386],[387],[360],[325],[326],[390],[391],[327],[298],[396],[319],[328],[398],[313],[400],[401],[402],[329],[330],[331],[332],[415],[416],[316],[317],[333],[334],[[307,141],[[17,[31]]]],[[[142,[31,430,140,[435,[31,430,140]]]],[142,[31,140,140,[147,[31]]]]],301],[[[142,[31,430,140,[435,[31,430,140]]]],[142,[31,140,140,[147,[31]]]]],314],[307],[[],321],0,0,0,0,0,0,[[],311],[386,10],[[359,387],338],[360,10],[[296,360],310],[[296,436],310],[319,10],[[297,319],312],[[297,436],312],[[407,421],17],[[296,360],310],[[297,319],312],[302],[305],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[324,324]],[[361,360,360,[437,[346]],15],384],[[359,360,360,[437,[346]],15],[[17,[386]]]],[[325,325]],[[326,326]],[[296,[437,[310]]],360],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[297,[437,[312]]],319],[[316,316]],[[317,317]],[[333,333]],[[334,334]],[[297,[437,[312]],360,296],319],[[337,31]],[[318,31,145,141],[[145,[31,[144,[[143,[31]]]]]]]],[[339,31,318,340],318],[[358,31,339,318,340],[[145,[31,[144,[[143,[31]]]]]]]],[[407,438,438],17],[[407,438,438],17],[407,167],[[407,438],167],[407,167],[[407,438],167],0,[[358,31,141],318],0,[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],[417,407],[[417,319,319],[[17,[15]]]],[[417,60,60],[[17,[15]]]],[417,167],[[373,296,297,145,341,374],[[17,[319]]]],[[417,319],167],[[373,296,297,141,374,420]],[[373,296,297,371,31,15,374,420]],[[373,296,297,145,341,374,420]],[[417,60],167],[[324,324],15],[[325,325],15],[[326,326],15],[[327,327],15],[[328,328],15],[[313,313],15],[[329,329],15],[[331,331],15],[[332,332],15],[[316,316],15],[[317,317],15],[[333,333],15],[[334,334],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[347,346],[[]],[[]],[366,346],[[]],[[]],[[]],[[]],[[]],[[]],[367,346],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[350,346],[[]],[[]],[368,346],[[]],[351,346],[[]],[369,346],[[]],[352,346],[[]],[370,346],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[323,310],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[314,312],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[384],[386],[360],[319],[338,439],[375,31],0,0,[[],384],[[],386],[[],360],[[],319],[[],319],[341,15],[311,15],[324,15],[325,15],[326,15],[327,15],[328,15],[313,15],[329,15],[331,15],[332,15],[316,15],[317,15],[333,15],[334,15],[[302,415],15],[406,15],[310,15],[310,15],[[],15],[[],15],[304,15],[[[348,[345]]],15],[[[348,[306]]],15],[[[348,[349]]],15],[306,15],[[],15],[364,15],[310,15],[324,15],[361,15],[325,15],[326,15],[296,15],[327,15],[328,15],[313,15],[329,15],[331,15],[332,15],[297,15],[316,15],[317,15],[333,15],[334,15],[346,15],[310,15],[312,15],[416,15],[364,15],[310,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[364,15],[310,15],[310,15],[[357,31,318,[17,[339]]],15],0,[363,15],[388,15],[310,15],[[307,10],15],[397,15],[312,15],0,[310,15],[310,15],[416,15],[416,15],[318,15],[309,15],[361,167],[359,167],[296,167],[297,440],[297,167],[297,167],[361,167],[296,167],[297,167],[[337,144,142]],[337,318],[388,337],0,[[359,360,360],17],[375,31],0,0,[375,31],[361,407],[[361,360,360],167],[[],323],[[],323],[[318,340],31],[310,31],[361,10],[296,10],[297,10],0,[[346,379],[[17,[380]]]],[[367,379],367],[350,[[17,[380]]]],[368,368],[351,[[17,[380]]]],[369,369],[[352,379],[[17,[380]]]],[370,370],0,[310,31],[[323,31],323],0,0,0,[[338,10],[[17,[388]]]],[388,10],[[338,10],[[17,[388]]]],[338,167],[338,167],[310,142],[[323,[142,[31,140,140,[147,[31]]]]],323],0,0,[302,303],[308,303],[304,303],[305,303],[306,303],[307,303],[347,[[141,[31,140]]]],[[366,[141,[31,140]]],366],[346,[[141,[31,140]]]],[[367,[141,[31,140]]],367],[350,[[141,[31,140]]]],[[368,[141,[31,140]]],368],[351,[[141,[31,140]]]],[[369,[141,[31,140]]],369],[352,[[141,[31,140]]]],[[370,[141,[31,140]]],370],[347,[[141,[31,140]]]],[[366,[141,[31,140]]],366],[346,[[141,[31,140]]]],[[367,[141,[31,140]]],367],[350,[[141,[31,140]]]],[[368,[141,[31,140]]],368],[351,[[141,[31,140]]]],[[369,[141,[31,140]]],369],[352,[[141,[31,140]]]],[[370,[141,[31,140]]],370],[346,[[144,[[142,[31,140,140,[147,[31]]]]]]]],[[367,[144,[[142,[31,140,140,[147,[31]]]]]]],367],[350,[[144,[[142,[31,140,140,[147,[31]]]]]]]],[[368,[144,[[142,[31,140,140,[147,[31]]]]]]],368],[352,[[144,[[142,[31,140,140,[147,[31]]]]]]]],[[370,[144,[[142,[31,140,140,[147,[31]]]]]]],370],[346,[[144,[[142,[31,140,140,[147,[31]]]]]]]],[[367,[144,[[142,[31,140,140,[147,[31]]]]]]],367],[350,[[144,[[142,[31,140,140,[147,[31]]]]]]]],[[368,[144,[[142,[31,140,140,[147,[31]]]]]]],368],[352,[[144,[[142,[31,140,140,[147,[31]]]]]]]],[[370,[144,[[142,[31,140,140,[147,[31]]]]]]],370],[[[302,[335]]],365],[308,365],[304,365],[305,365],[306,365],[307,365],0,[347,145],[[366,[145,[31,[144,[[143,[31]]]]]]],366],[[367,[145,[31,[144,[[143,[31]]]]]]],367],0,[347,145],[[366,[145,[31,[144,[[143,[31]]]]]]],366],[[367,[145,[31,[144,[[143,[31]]]]]]],367],0,0,0,0,[[144,422]],[[306,144,422]],[142,[[141,[31,140]]]],[[348,142],[[141,[31,140]]]],[[306,142],[[141,[31,140]]]],[144,[[141,[31,140]]]],[144,[[141,[31,140]]]],[[348,144],[[141,[31,140]]]],[388,145],[388,145],[[346,324],346],[[310,15,15]],[323,323],[[310,15,15]],[323,323],[[367,324],367],[310,326],[[323,326],323],0,[301,341],0,0,[[361,360,420]],[[307,303]],[[60,420]],[[[302,[335]],60,420]],[[308,60,420]],[[305,60,420]],[420],[[344,60,420]],[[302,60,420]],[[308,60,420]],[[305,60,420]],[420],[[344,60,420]],[[302,60,420]],[[308,60,420]],[[305,60,420]],[340,31],[309,31],[310,31],[312,31],[[314,31],314],[31,309],[[[302,[335]],31],309],[310,340],[[322,341],309],[[308,31],309],[[304,31],309],[[305,31],309],[[[348,[349]],31],309],[[[348,[306]],31],309],[[[348,[345]],31],309],[[306,31],309],[[[307,[335]],31],309],[312,309],[[314,309],314],0,[312,399],0,0,0,0,0,[299],0,[[357,318],31],0,0,0,0,0,0,0,0,0,[441],[[346,379],[[17,[381]]]],[350,[[17,[381]]]],[351,[[17,[381]]]],[[369,31,31,31,31],369],[[352,379],[[17,[381]]]],0,[[367,379,31],367],[[368,31],368],[[369,31],369],[[370,31],370],[[346,379],[[17,[385]]]],[[367,379,385],367],[[368,385],368],[[369,385],369],[[370,385],370],[[367,379,31,31,31],367],[[368,31,31,31],368],[[369,31,31,31],369],[[370,31,31,31],370],[[367,379,31,31],367],[[368,31,31],368],[[369,31,31],369],[[370,31,31],370],0,[[318,31],318],[359,167],0,0,[338,10],[337,10],[328,15],[328,15],[[],425],[[[442,[298]],[442,[394]]],433],[[],426],[[419,334],427],[[],376],[[[175,[[141,[31,140]],8]],[175,[8]]],[[302,[335]]]],[[],315],[[],347],[[],366],[324,346],[324,367],[[],361],[[],338],[[],359],[[360,10,10,10,337,[145,[31,[144,[[143,[31]]]]]],[145,[31,[144,[[143,[31]]]]]]],388],[346,337],[[[144,[[142,[31,140,140,[147,[31]]]]]]],350],[[[144,[[142,[31,140,140,[147,[31]]]]]]],368],[[],351],[[],369],[[],352],[[],370],[[[142,[31,140,140,[147,[31]]]],31],318],[[[141,[31,140]],31,31],309],[364,323],[[360,360],392],[[],296],[[[141,[31,140]],[141,[31,140]],416,416,31],393],[[],395],[[319,319],396],[[31,31],399],[[[175,[8]]],308],[[[144,[[142,[31,140,140,[147,[31]]]]]]],304],[[[175,[[141,[31,140]],8]],[17,[[175,[8]]]]],305],[[],407],[[331,331],330],[[[142,[31,430,140,[435,[31,430,140]]]],[142,[31,140,140,[147,[31]]]]],[[307,[335]]]],[341,301],[[],417],[301,314],[[],297],[[],373],[[],374],[[],323],[[],323],[[],323],0,[310,145],0,[[],330],[[373,296,297,443,341,31,31,15,374],17],0,0,0,[306],[324,324],[325,325],[326,326],[327,327],[328,328],[313,313],[329,329],[331,331],[332,332],[316,316],[317,317],[333,333],[334,334],[405,10],[307,10],[410,10],[338,10],[305,10],[302,10],[337,10],0,[[306,31],306],[[],374],[[],374],[[],374],[312,[[17,[360]]]],[388,[[17,[10]]]],[[324,324],[[17,[122]]]],[[325,325],[[17,[122]]]],[[326,326],[[17,[122]]]],[[391,391],[[17,[122]]]],[[327,327],[[17,[122]]]],[[328,328],[[17,[122]]]],[[313,313],[[17,[122]]]],[[329,329],[[17,[122]]]],[[331,331],[[17,[122]]]],[[332,332],[[17,[122]]]],[[316,316],[[17,[122]]]],[[317,317],[[17,[122]]]],[[333,333],[[17,[122]]]],[[334,334],[[17,[122]]]],0,0,[306],[[[175,[[141,[31,140]],8]],[17,[[175,[8]]]]],301],[[[175,[[141,[31,140]],8]],[17,[[175,[8]]]]],314],0,[310,145],[[323,[145,[31,[144,[[143,[31]]]]]]],323],[312,145],[[314,[145,[31,[144,[[143,[31]]]]]]],314],0,0,0,[312,[[17,[145]]]],[[314,[145,[31,[144,[[143,[31]]]]]]],314],[374,374],0,[[376,31,315,296,297,417,434],377],[[310,31],[[145,[31,[144,[[143,[31]]]]]]]],0,[309,31],[[302,141,15],444],[[308,141,15],444],[[304,141,15],444],[[305,141,15],444],[[348,141,15],444],[[306,141,15],444],[[307,141,15],444],[[302,141]],[[308,141]],[[304,141]],[[305,141]],[[348,141]],[[306,141]],[[307,141]],[[302,141,15]],[[305,141,15]],[[307,141,15]],[[302,141,15,31],17],[[305,[141,[31,140]]]],[[302,141,15,31],[[17,[444]]]],[[307,141,15,31],[[17,[444]]]],[[373,296,297,141,15,374],17],[[373,296,297,141,374],17],[[296,297]],[183],[318,31],[[],445],[302,445],[[[302,[335]]],445],[308,445],[308,445],[305,445],[417,446],[373,447],0,[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[407,448],[[340,297,356,145]],[[310,297]],0,[[309,309],15],[[324,324]],[[361,384,15],[[17,[383]]]],[[359,386,15]],[[325,325]],[[326,326]],[[296,360,315,297,361,359,15],[[17,[310]]]],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[297,319,315,296,15],[[17,[312]]]],[[316,316]],[[317,317]],[[333,333]],[[334,334]],[[361,360],[[175,[384,8]]]],[[359,360]],[[359,360,15]],[298,15],[[427,296,297,361,359,417]],[419,427],[[427,296,297]],[[427,297,417]],[[427,296,361,359]],[[427,296]],[[310,15]],[[310,15]],[312,31],[[314,31],314],0,0,0,[312,378],[[314,378],314],0,0,[[310,15,15,15,15]],[[310,15,15,15]],[[323,15,15],323],[[[302,[335]]]],[305],0,0,0,0,0,0,0,[388,360],[[359,360],[[17,[449]]]],[338,388],[307,303],[338,388],[310,144],[[323,31],323],[312,144],[[314,31],314],[31,301],[31,314],[[424,31],301],[[424,31],314],[31,[[17,[301]]]],[31,[[17,[314]]]],[[[175,[[141,[31,140]],8]],31],[[17,[301]]]],[[[175,[[141,[31,140]],8]],31],[[17,[314]]]],[[31,31,31],301],[[31,31,31],314],[[[141,[31,140]],[141,[31,140]],[141,[31,140]],31],301],[[[141,[31,140]],[141,[31,140]],[141,[31,140]],31],314],[307,142],[[[302,[335]],142],[[302,[335]]]],[[304,142],[[17,[304]]]],[[305,142],305],[[306,142],[[17,[306]]]],[[307,142],307],[[305,60],353],[[[141,[31,140]],[141,[31,140]]],301],[[[141,[31,140]],[141,[31,140]]],314],[[307,10],[[17,[353]]]],[[305,60,415],415],[305,440],[307,167],[298,15],[[314,15],314],[[324,324,15]],[[325,325,15]],[[326,326,15]],[[327,327,15]],[[328,328,15]],[[313,313,15]],[[329,329,15]],[[331,331,15]],[[332,332,15]],[[316,316,15]],[[317,317,15]],[[333,333,15]],[[334,334,15]],[[312,313]],[[312,316]],[[312,317]],[[310,31,15]],[[310,309,15]],[[310,31]],[[310,31,15]],[[310,364,15]],[[312,330]],[[312,31]],[[347,15],347],[[346,15],346],[[350,15],350],[[351,15],351],[[352,15],352],[[312,31]],[[310,190]],[[375,31]],[[346,15]],[[310,15]],[[312,15]],[[310,15,15,15,15]],[[310,15,15,15]],[[[302,[335]],332],[[18,[409]]]],[[312,31]],[[312,378]],[[310,31,15]],[[375,31]],[[346,379],346],[350,350],[351,351],[352,352],[[310,31]],[[310,[142,[31,140,140,[147,[31]]]],15]],[[347,[141,[31,140]]],347],[[346,[141,[31,140]]],346],[[350,[141,[31,140]]],350],[[351,[141,[31,140]]],351],[[352,[141,[31,140]]],352],[[347,[141,[31,140]]],347],[[346,[141,[31,140]]],346],[[350,[141,[31,140]]],350],[[351,[141,[31,140]]],351],[[352,[141,[31,140]]],352],[[346,[144,[[142,[31,140,140,[147,[31]]]]]]],346],[[350,[144,[[142,[31,140,140,[147,[31]]]]]]],350],[[352,[144,[[142,[31,140,140,[147,[31]]]]]]],352],[[346,[144,[[142,[31,140,140,[147,[31]]]]]]],346],[[350,[144,[[142,[31,140,140,[147,[31]]]]]]],350],[[352,[144,[[142,[31,140,140,[147,[31]]]]]]],352],[[347,[145,[31,[144,[[143,[31]]]]]]],347],[[346,[145,[31,[144,[[143,[31]]]]]]],346],[[347,[145,[31,[144,[[143,[31]]]]]]],347],[[346,[145,[31,[144,[[143,[31]]]]]]],346],[[310,326,15]],[[309,31,15]],[[312,31]],[[312,309]],[[346,379,31,31,31,31],346],[[367,379,31,31,31,31],367],[[350,31,31,31,31],350],[[368,31,31,31,31],368],[[351,31,31,31,31],351],[[352,31,31,31,31],352],[[370,31,31,31,31],370],[[346,379,31],346],[[350,31],350],[[351,31],351],[[352,31],352],[[346,379,385],346],[[350,385],350],[[351,385],351],[[352,385],352],[[346,379,31,31,31],346],[[350,31,31,31],350],[[351,31,31,31],351],[[352,31,31,31],352],[[346,379,31,31],346],[[350,31,31],350],[[351,31,31],351],[[352,31,31],352],[[310,[145,[31,[144,[[143,[31]]]]]]]],[[310,[144,[[143,[31]]]]]],[[310,[142,[31,140,140,[147,[31]]]]]],[[297,319,[17,[360]],296]],[[310,[145,[31,[144,[[143,[31]]]]]],15]],[[312,[145,[31,[144,[[143,[31]]]]]]]],[[312,[145,[31,[144,[[143,[31]]]]]]]],[[312,31]],[[312,378]],[[310,[144,[[143,[31]]]],15]],[[312,[144,[[143,[31]]]]]],[[312,31]],[[307,[142,[31,140,140,[147,[31]]]]]],[[307,10,15]],[[312,15]],[[312,301]],[[312,330]],[[310,[142,[31,140,140,[147,[31]]]],15]],[[312,[142,[31,140,140,[147,[31]]]]]],[[312,[142,[31,140,140,[147,[31]]]]]],[312,341],0,[312,341],[[],400],[[[302,[335]]],400],[308,400],[304,400],[305,400],[[[348,[345]]],400],[[[348,[306]]],400],[[[348,[349]]],400],[306,400],[[[307,[335]]],400],[308],[312,301],[311],[310],0,[[323,15],323],0,0,0,0,0,[312,330],[[314,330],314],0,0,[307,31],[298,15],[[425,31,395,417,296,297,[17,[373]],450,434]],[[426,142,375,315,395,417,296,297,361,359,376,[17,[373]],450,434]],0,[298,15],0,[[324,324],324],[[325,325],325],[[326,326],326],[[309,309],309],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],[[324,324]],[[325,325]],[[326,326]],[[309,309]],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[316,316]],[[317,317]],[[333,333]],[[334,334]],0,[[],309],[[306,144],415],[[145,142],[[141,[31,140]]]],[[145,142],[[141,[31,140]]]],[[145,144],[[141,[31,140]]]],[[145,144],[[141,[31,140]]]],[396,396],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],0,0,0,0,[[313,364,364],15],[[330,330],15],[[333,296,312],15],[[374,296,319,312],15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[348,[345]],60],[[175,[[141,[31,140]],8]]]],[[[348,[306]],60],[[175,[[141,[31,140]],8]]]],[[[307,[335]]]],[[],178],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[324,324]],[[325,325]],[[326,326]],[[327,327]],[[328,328]],[[313,313]],[[329,329]],[[331,331]],[[332,332]],[[316,316]],[[317,317]],[[333,333]],[[334,334]],[302,[[17,[414]]]],0,0,0,[299,[[142,[31,140,140,[147,[31]]]]]],[299,31],[[309,145],309],[[422,145]],[[[302,[335]],145]],[[318,144],318],[310,142],[[323,[142,[31,140,140,[147,[31]]]]],323],[312,142],[[314,[142,[31,140,140,[147,[31]]]]],314],[[302,60],349],[[[141,[31,140]],[141,[31,140]],[141,[31,140]]],301],[[[141,[31,140]],[141,[31,140]],[141,[31,140]]],314],[[[302,[335]]],440],[[[175,[[141,[31,140]],8]],[175,[8]]],301],[[[175,[[141,[31,140]],8]],[175,[8]]],314],[[[175,[[141,[31,140]],8]],[175,[8]],332],301],[[[175,[[141,[31,140]],8]],[175,[8]],332],314],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],445],[344,445],[302,445],[308,445],[305,445],[[307,303],[[452,[451]]]],[[324,324],324],[[325,325],325],[[326,326],326],[[327,327],327],[[328,328],328],[[313,313],313],[[329,329],329],[[331,331],331],[[332,332],332],[[316,316],316],[[317,317],317],[[333,333],333],[[334,334],334],[307,31],[[375,338,388,31,10,10,142,175,17]],[[375,338,388,381,31,17,10,10,142,175,17]],[416,415],[415,60],[415,60],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[395,31,297,175]],[[373,296,297]],[[441,142,31]],[[376,315,296,31,15],15],[[373,297,15]],[[356,297,175,145]],[[373,296,297,453]],[[340,145]],[[323,138],323],[[314,138],314],0,0,0,0,0,0,[310,[[142,[31,140,140,[147,[31]]]]]],0,[310,31],0,0,[[318,141,141],[[142,[31,140,140,[147,[31]]]]]],[[310,141],[[142,[31,140,140,[147,[31]]]]]],[[337,375,338,388,10,10,142,175,17]],[60,416],0,[302],[305],0,0,0,[312,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[315,296,360,15]],[[311,15]],[[310,15]],[[330,331],330],[[[175,[[141,[31,140]],8]],[175,[8]],332],[[302,[335]]]],[[330,331],330],[[],376],[[],417],[[],373],[[309,145],[[141,[31,140]]]],0,[[309,144],31],[[],318],[[]],[[],309],[[],396],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[142,[140]]]],[[],[[144,[[142,[140]]]]]],[[]],[[]],[143],[142,142],[[454,454],15],[[142,142],15],[[[144,[143]],144],15],[[[144,[150]],144],15],[[[144,[142]],144],15],[[[144,[455]],144],15],[[141,141],15],[[149,149],15],[[150,150],15],[[455,455],15],[[148,148],15],[[456,456],15],[[145,145],15],[[146,146],15],[[[145,[457,[144,[[143,[457]]]]]],142],[[142,[457,140,140,[147,[457]]]]]],[[[145,[31,[144,[[143,[31]]]]]],142],[[142,[31,140,140,[147,[31]]]]]],[[]],[143,143],[150,150],[[]],[143,143],[150,150],[[142,142],142],[[142,142,142]],[[142,142],[[17,[142]]]],[[142,142],15],[[142,142],142],[[142,142]],[[142,142],[[17,[142]]]],[[142,142],15],[[142,142],142],[[142,142]],[[]],[[]],[143],[143],[[143,143]],[[143,143]],[143],[[143,143]],[[143,143]],[143],[[430,10],430],[430,430],[[140,140]],[[140,140]],[430,430],[[142,142]],[[142,142]],[[142,142]],[[142,142]],[[141,[142,[140]]]],[[141,142]],[[141,142]],[[141,[142,[140]]]],[[150,150]],[[150,150]],[[150,150]],[[150,150]],[[455,455]],[[455,455]],[[455,455]],[[455,455]],[143],[[143,143]],[143],[[143,143]],[[142,142]],[[142,142]],[[141,[142,[140]]]],[[141,142]],[[150,150]],[[150,150]],[[455,455]],[[455,455]],[142,142],[142],[[142,142,142]],[142,142],[142],[[142,142]],[[],15],[430],[[140,140]],[430],[[140,140],[[147,[458]]]],[430,[[435,[458,430]]]],[430,[[435,[458,430]]]],[142],[142],[[],15],[[142,142]],[[[144,[143]]]],[[[144,[150]]]],[149],[149],[[[144,[143]],144]],[[[144,[150]],144]],[[149,149]],[[149,149]],[[],15],[[[144,[150]],142],[[144,[150]]]],[[142,142],142],[[142,142]],[[459,10,10]],[145],[146],[145],[146],[[145,141]],[[146,141]],[142,142],[146,146],[142],[146],[[142,142],142],[[142,142]],[[145,148]],[[146,148]],[142],[141],[142,142],[[142,142]],[142],[[[142,[140]]]],[[[142,[140]]]],[[]],[143],[143],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[142,[140,140,147]]]],[[[142,[140,140,147]]]],[[[141,[140]]]],[[[141,[140]]]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[460,142],[461,142],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[455],[142],[147],[142],[435],[[]],[147],[432],[[[435,[430]]]],[[[435,[430]]]],[144],[460,454],[461,454],[142],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[144],[455],[147],[142],[435],[[]],[147],[431],[432],[[[435,[430]]]],[[[435,[430]]]],[435,175],[435,175],[150,142],[150,142],[142,[[142,[431]]]],[142,[[142,[432]]]],[[]],[143,143],[150,150],[[]],[143,143],[150,150],[461],[[[435,[458,430]]],[[435,[430]]]],[[[147,[458]]],147],[[[435,[458,430]]],[[435,[430]]]],[[[142,[458]]],142],[[]],[143,143],[150,150],[[]],[[]],[143,143],[150,150],[[[142,[140]],142]],[462,142],[[[144,[150]]],[[17,[[144,[[142,[140,140,147]]]]]]]],[149,[[17,[[144,[[142,[140,140,147]]]]]]]],[[[144,[150]]],17],[[[144,[143]]],17],[149,17],[[[142,[140]],142]],[[],[[142,[140]]]],[[],[[144,[[142,[140]]]]]],0,[[],10],[462],[142,463],[[],154],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[460],[142],[142],[142,142],[142,142],[[[144,[150]]],[[144,[150]]]],[[[144,[[142,[140]]]]],[[144,[[142,[140]]]]]],[[[144,[455]]],[[144,[455]]]],[[[144,[143]]],[[144,[143]]]],[141,141],[149,149],[150,150],[455,455],[148,148],[456,456],[[[145,[149]]],[[145,[149]]]],[[[145,[[144,[143]]]]],[[145,[[144,[143]]]]]],[[[145,[149]]],[[145,[149]]]],[[[145,[[144,[150]]]]],[[145,[[144,[150]]]]]],[[[146,[[144,[150]]]]],[[146,[[144,[150]]]]]],[[[146,[149]]],[[146,[149]]]],[[[146,[[144,[143]]]]],[[146,[[144,[143]]]]]],[[[146,[149]]],[[146,[149]]]],[[]],[143,143],[[142,142,142]],[[]],[143,143],[[141,141],[[141,[140]]]],[142,15],[142,15],[142,15],[142,15],[142,[[17,[464]]]],[[]],[[]],[143,143],[454,454],[465,465],[430,430],[140,140],[147,147],[142,142],[431,431],[466,466],[467,467],[468,468],[144,144],[435,435],[141,141],[149,149],[150,150],[455,455],[148,148],[456,456],[145,145],[146,146],[469,469],[470,470],[471,471],[460,460],[461,461],[463,463],[464,464],[472,472],[473,473],[474,474],[439,439],[459,459],[475,475],[476,476],[477,477],[478,478],[479,479],[480,480],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[454,454],[147],[142,142],[431],[432],[[[435,[430]]]],[[[435,[430]]]],[150,150],[142,142],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[142,142,142]],[142,472],[[142,10],[[142,[140,[431,[140]]]]]],[142,481],[142,482],[142,[[142,[140]]]],[[142,10],[[142,[140,[432,[140]]]]]],[[142,10,10],[[142,[430,140,[431,[430,140]]]]]],[[142,10,10],[[142,[430,140,[432,[430,140]]]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[[142,10,10],[[142,[430,[431,[430]]]]]],[[142,10],[[142,[431]]]],[[142,10],[[142,[432]]]],[[142,10,10],[[142,[[431,[430]]]]]],[[142,10,10],[[142,[[432,[430]]]]]],[[142,10,10],[[142,[430,[432,[430]]]]]],[142,[[142,[431]]]],[142,[[142,[432]]]],[142],[142],[[142,10,10,10],[[142,[430,[431,[430,430]]]]]],[[142,10,10,10],[[142,[430,[432,[430,430]]]]]],[[[144,[143]]],143],[142,[[142,[143,140]]]],[476,[[142,[143,140]]]],[[142,142],142],[[142,142]],[[142,142]],[[142,142],142],[[142,142]],[[142,142]],[[142,[142,[140]],286],[[142,[140]]]],[[142,286],[[142,[140]]]],[[142,286],[[142,[140]]]],[143,143],[[]],[143,143],[142,142],[[[144,[455]]],[[144,[455]]]],[[[144,[143]]],[[144,[143]]]],[[[144,[150]]],[[144,[150]]]],[150,150],[455,455],[142],[[[144,[143]]]],[[[144,[150]]]],[[[144,[455]]]],[150],[455],[142],[142,142],[[142,142]],[[]],[[]],[[]],[[]],[[[142,[140]],[142,[140]]],[[142,[140]]]],[[[142,[140]],[142,[140]]],[[142,[140]]]],[[[142,[140]],[142,[140]]],[[142,[140]]]],0,0,[[142,142]],[142],[[[142,[140,140,147]],[142,[140,140,147]]],[[142,[140,140,147]]]],[[[142,[140,140,147]],[142,[140,140,147]]],[[142,[140,140,147]]]],[[[142,[140,140,147]]],[[142,[140,140,147]]]],[[[142,[140,140,147]]],[[142,[140,140,147]]]],[[]],[[]],[143,143],[150,150],[[[144,[143]]]],[[]],[[]],[143,143],[150,150],[[]],[[142,142],142],[[[142,[140,140]]],[[142,[140,140]]]],[463,142],0,[480,142],0,[[],143],[[],454],[[],147],[[],142],[[],[[144,[150]]]],[[],[[144,[455]]]],[[],[[144,[143]]]],[[],141],[[],149],[[],150],[[],455],[[],148],[[],145],[[],146],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[10],[10],[10],[10],[10],[10],[10],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[10],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[10],[10],[10],[10],[10],[10],[144],[10],[[[141,[140]]]],[[[141,[140]]]],[10],[[[141,[140]]]],[[[141,[140]]]],[[[141,[140]]]],[[[141,[140]]]],[10],[150],[10],[10],[10],[148],[148],[148],[148],[148],[148],[456],[10],[456],[456],[456],[456],[456],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[10],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[[[142,[140,140]]]],[10],[10],[10],[10],[10],[10],[10],[[[141,[140]]]],[[[141,[140]]]],[[[141,[140]]]],[[[141,[140]]]],[10],[[[141,[140]]]],[[[141,[140]]]],[10],[10],[150],[10],[148],[148],[148],[148],[148],[148],[10],[456],[456],[456],[456],[10],[456],[456],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[142],[464],[472],[473],[439],[459],[142,[[142,[140]]]],[463,[[142,[140]]]],[479,[[142,[140]]]],[[[144,[143]],144]],[[[144,[150]],144]],[[],10],[[],10],[[141,141]],[[141,141]],[[]],[[]],[143],[[143,143]],[[143,143]],[[143,143]],[143],[[143,143]],[143],[143],[[454,148]],[[454,[144,[150]]]],[[454,454]],[[454,454]],[[454,149]],[[454,149]],[[454,144]],[[454,148]],[[454,[144,[150]]]],[[454,454]],[[454,148]],[[454,454]],[[454,149]],[[454,144]],[[454,148]],[[454,149]],[430,430],[[140,140]],[[140,140]],[430,430],[[142,149]],[[142,149]],[[142,149]],[[142,149]],[142],[142],[[144,146]],[[144,148]],[[[144,[150]],454]],[[[144,[150]],[145,[[144,[150]]]]]],[[[144,[150]],149]],[[144,149]],[[[144,[150]],[144,[150]]]],[[144,144]],[[[144,[143]],[144,[143]]]],[[144,[144,[150]]]],[[[144,[455]],[144,[455]]]],[[144,[145,[[144,[150]]]]]],[[[144,[455]],[144,[150]]]],[[144,145]],[[[144,[143]],144]],[[144,[144,[150]]]],[[[144,[150]],146]],[[144,454]],[[144,144]],[[[144,[150]],149]],[[144,[144,[143]]]],[[[144,[143]],149]],[[[144,[143]],149]],[[[144,[150]],145]],[[144,149]],[[[144,[455]],148]],[[144,145]],[[144,454]],[[[144,[455]],[145,[[144,[150]]]]]],[[[144,[150]],144]],[[144,[144,[455]]]],[[[144,[150]],144]],[[144,148]],[[[144,[455]],144]],[[[144,[150]],454]],[[[144,[150]],[144,[455]]]],[[144,144]],[[[144,[150]],[146,[[144,[150]]]]]],[[144,[144,[455]]]],[[[144,[455]],145]],[[144,149]],[[[144,[455]],144]],[[144,144]],[[144,144]],[[144,149]],[[144,[146,[[144,[150]]]]]],[[144,[145,[[144,[150]]]]]],[[[144,[455]],148]],[141],[141],[[149,149]],[[149,[146,[149]]]],[[149,454]],[[149,[144,[143]]]],[[149,[145,[149]]]],[[149,[144,[143]]]],[[149,[144,[150]]]],[[149,[145,[149]]]],[[149,144]],[[149,149]],[[149,[146,[149]]]],[[149,144]],[[149,144]],[[149,454]],[[149,454]],[[149,144]],[[149,149]],[[149,145]],[[149,146]],[[149,[144,[150]]]],[[149,454]],[[149,149]],[[149,146]],[[149,145]],[150],[150],[[455,144]],[455],[[455,144]],[455],[[455,[144,[455]]]],[[455,[144,[455]]]],[[148,148]],[[148,454]],[[148,454]],[[148,148]],[[148,[144,[455]]]],[[148,144]],[[148,144]],[[148,454]],[[148,[144,[455]]]],[[148,148]],[[148,148]],[[148,454]],[[[145,[149]],149]],[[145,146]],[[145,149]],[[[145,[[144,[143]]]],144]],[[145,[144,[143]]]],[[145,145]],[[145,[144,[455]]]],[[145,145]],[[[145,[[144,[150]]]],144]],[[145,146]],[[145,[144,[150]]]],[[145,149]],[[[145,[[144,[143]]]],[144,[143]]]],[[145,145]],[[[145,[149]],149]],[[145,144]],[[145,144]],[[145,146]],[[[145,[[144,[150]]]],144]],[[145,146]],[[[145,[[144,[150]]]],[144,[455]]]],[[[145,[[144,[150]]]],[144,[150]]]],[[145,145]],[[145,144]],[[[146,[[144,[150]]]],[144,[150]]]],[[146,146]],[[146,[144,[150]]]],[[146,146]],[[146,146]],[[146,145]],[[146,144]],[[146,144]],[[146,145]],[[[146,[[144,[150]]]],144]],[[146,149]],[[146,[144,[143]]]],[[[146,[[144,[143]]]],144]],[[[146,[[144,[143]]]],[144,[143]]]],[[[146,[149]],149]],[[146,145]],[[146,145]],[[146,146]],[[[146,[149]],149]],[[146,149]],[143],[[143,143]],[[143,143]],[143],[[454,454]],[[454,148]],[[454,148]],[[454,[144,[150]]]],[[454,149]],[[454,454]],[[454,144]],[[454,144]],[[454,[144,[143]]]],[[454,149]],[[[142,[140,140,147]],149]],[142],[[[142,[140,140,147]],149]],[[[144,[455]],148]],[[[144,[143]],[144,[143]]]],[[[144,[455]],145]],[[[144,[150]],144]],[[[144,[143]],149]],[[[144,[455]],[145,[[144,[150]]]]]],[[[144,[150]],149]],[[[144,[143]],149]],[[[144,[143]],144]],[[[144,[455]],144]],[[[144,[455]],148]],[[[144,[150]],[144,[150]]]],[[[144,[455]],144]],[[[144,[150]],149]],[[[144,[455]],[144,[455]]]],[[[144,[455]],[144,[150]]]],[141],[[149,144]],[[149,149]],[[149,[144,[143]]]],[[149,149]],[150],[[455,[144,[455]]]],[455],[[455,144]],[[148,148]],[[148,148]],[[[145,[[144,[143]]]],[144,[143]]]],[[[145,[[144,[143]]]],144]],[[145,145]],[[[145,[[144,[150]]]],144]],[[[145,[149]],149]],[[[145,[149]],149]],[[[145,[[144,[150]]]],[144,[150]]]],[[145,145]],[[146,146]],[[[146,[[144,[143]]]],[144,[143]]]],[[146,145]],[[[146,[[144,[150]]]],144]],[[[146,[[144,[143]]]],144]],[[[146,[149]],149]],[[146,145]],[[146,146]],[[[146,[149]],149]],[[[146,[[144,[150]]]],[144,[150]]]],0,[[142,142]],[[150,150]],[[142,142]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[[[144,[455]]],455],0,[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[[]],[142,[[17,[[142,[140]]]]]],[476,[[17,[[142,[140]]]]]],0,0,[[]],[[]],[[],10],[[143,143],15],[[454,454],15],[[430,430],15],[[140,140],15],[[147,147],15],[[142,142],15],[[142,142],15],[[[144,[455]],144],15],[[[144,[142]],144],15],[[[144,[150]],144],15],[[[144,[143]],144],15],[[435,435],15],[[141,141],15],[[149,149],15],[[150,150],15],[[455,455],15],[[148,148],15],[[456,456],15],[[145,145],15],[[146,146],15],[[469,469],15],[[470,470],15],[[471,471],15],[[460,460],15],[[461,461],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[144,[150]]]],[149],[[]],[143,143],[142,142],[[[144,[150]]],150],[150,150],[[]],[143,143],[150,150],[[]],[143,143],[[[142,[430]]]],[[[142,[430,140]]]],[[[142,[430]]]],[[[435,[430,140]]]],[[[435,[430]]]],[[[435,[430]]]],[[[435,[430]]]],[10],[[143,10]],[[454,10]],[[142,10]],[[[144,[143]],10]],[[[144,[150]],10]],[[[141,[140]],10]],[[149,10]],[[150,10]],[[148,10]],[[456,10]],[[145,10]],[[146,10]],[10],[[143,10]],[[454,10]],[[142,10]],[[[144,[150]],10]],[[[144,[143]],10]],[[[141,[140]],10]],[[149,10]],[[150,10]],[[148,10]],[[456,10]],[[145,10]],[[146,10]],[[141,141,142],[[142,[140,140,147]]]],[[142,142],[[144,[150]]]],[[142,142],149],[[141,141,142],[[145,[149]]]],[[141,141,142],[[145,[[144,[150]]]]]],[[141,141,142],[[146,[149]]]],[[141,141,142],[[146,[[144,[150]]]]]],[142],[[142,10]],[142],[[142,10]],[142],[[142,10]],[[142,10]],[142],[[142,286]],[142],[[142,10],[[142,[140,[431,[140]]]]]],[[142,10],[[142,[140,[432,[140]]]]]],[[142,10,10],[[142,[140,[431,[140,430]]]]]],[[142,10,10],[[142,[140,[432,[140,430]]]]]],[142,[[142,[140,140]]]],[[142,10],[[142,[140,[431,[140]]]]]],[[142,10],[[142,[140,[432,[140]]]]]],[[142,10,10],[[142,[140,[431,[140,430]]]]]],[[142,10,10],[[142,[140,[432,[140,430]]]]]],[[142,10,10],[[142,[140,140,[431,[140,140]]]]]],[[142,10,10],[[142,[140,140,[432,[140,140]]]]]],[142,[[142,[140,140,[431,[140,140,430,430]]]]]],[142,[[142,[140,140,[432,[140,140,430,430]]]]]],[[142,10,10],[[142,[140,140,[431,[140,140]]]]]],[[142,10,10],[[142,[140,140,[432,[140,140]]]]]],[142,[[142,[140,140,[431,[140,140,430,430]]]]]],[142,[[142,[140,140,[432,[140,140,430,430]]]]]],[[]],[143,143],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[143,11],[[18,[125]]]],[[454,11],[[18,[125]]]],[[465,11],[[18,[125]]]],[[430,11],[[18,[125]]]],[[140,11],[[18,[125]]]],[[147,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[142,11],[[18,[125]]]],[[431,11],[[18,[125]]]],[[432,11],[[18,[125]]]],[[466,11],[[18,[125]]]],[[467,11],[[18,[125]]]],[[468,11],[[18,[125]]]],[[[144,[150]],11],[[18,[125]]]],[[144,11],[[18,[125]]]],[[[144,[455]],11],[[18,[125]]]],[[[144,[143]],11],[[18,[125]]]],[[435,11],[[18,[125]]]],[[141,11],[[18,[125]]]],[[141,11],[[18,[125]]]],[[149,11],[[18,[125]]]],[[149,11],[[18,[125]]]],[[150,11],[[18,[125]]]],[[150,11],[[18,[125]]]],[[455,11],[[18,[125]]]],[[148,11],[[18,[125]]]],[[148,11],[[18,[125]]]],[[456,11],[[18,[125]]]],[[456,11],[[18,[125]]]],[[145,11],[[18,[125]]]],[[145,11],[[18,[125]]]],[[146,11],[[18,[125]]]],[[146,11],[[18,[125]]]],[[469,11],[[18,[125]]]],[[470,11],[[18,[125]]]],[[471,11],[[18,[125]]]],[[460,11],[[18,[125]]]],[[461,11],[[18,[125]]]],[[463,11],[[18,[125]]]],[[464,11],[[18,[125]]]],[[472,11],[[18,[125]]]],[[473,11],[[18,[125]]]],[[474,11],[[18,[125]]]],[[439,11],[[18,[125]]]],[[459,11],[[18,[125]]]],[[475,11],[[18,[125]]]],[[476,11],[[18,[125]]]],[[477,11],[[18,[125]]]],[[478,11],[[18,[125]]]],[[479,11],[[18,[125]]]],[[480,11],[[18,[125]]]],[[142,420]],[[142,483,420]],[461],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[[],[[17,[143]]]],[[],143],[[],143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[142,[58,140,140,[147,[58]]]]]],[149,[[142,[140,140,147]]]],[142,[[142,[431]]]],[35,[[142,[31,140,140,[147,[31]]]]]],[[],142],[[[175,[8]]],[[142,[430,140,[435,[430,140]]]]]],[[[142,[430,[432,[430]]]]],[[142,[430,[435,[430]]]]]],[148,142],[456,142],[[[144,[143]]],[[142,[140,140,147]]]],[149,[[142,[140,140,147]]]],[68,[[142,[15,140,140,[147,[15]]]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[[142,[432]]],[[142,[431]]]],[[],[[142,[430,140,[431,[430,140,140,430]]]]]],[142,[[142,[431]]]],[[[144,[150]]],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[454,142],[149,[[142,[140,140,147]]]],[[]],[41,[[142,[58,140,140,[147,[58]]]]]],[37,[[142,[50,140,140,[147,[50]]]]]],[38,[[142,[50,140,140,[147,[50]]]]]],[44,[[142,[31,140,140,[147,[31]]]]]],[54,[[142,[50,140,140,[147,[50]]]]]],[61,[[142,[60,140,140,[147,[60]]]]]],[[[142,[140,140,[432,[140,140]]]]],[[142,[140,140,147]]]],[[],142],[142,[[142,[432]]]],[[],142],[[[144,[143]]],[[142,[140,140,147]]]],[[[144,[150]]],[[142,[140,140,147]]]],[53,[[142,[50,140,140,[147,[50]]]]]],[[[175,[8]]],[[142,[140,430,[435,[140,430]]]]]],[32,[[142,[31,140,140,[147,[31]]]]]],[45,[[142,[31,140,140,[147,[31]]]]]],[33,[[142,[31,140,140,[147,[31]]]]]],[[],142],[149,[[142,[140,140,147]]]],[[[144,[455]]],[[142,[140,140,147]]]],[69,[[142,[15,140,140,[147,[15]]]]]],[[[142,[430,[432,[430]]]]],[[142,[430,[435,[430]]]]]],[36,[[142,[50,140,140,[147,[50]]]]]],[[[142,[430,[431,[430]]]]],[[142,[430,[435,[430]]]]]],[[],[[142,[430,140,[432,[430,140,140,430]]]]]],[47,[[142,[31,140,140,[147,[31]]]]]],[145,142],[62,[[142,[60,140,140,[147,[60]]]]]],[40,[[142,[58,140,140,[147,[58]]]]]],[[[142,[140,140,[431,[140,140]]]]],[[142,[140,140,147]]]],[141,[[142,[140]]]],[460,[[142,[140,140,147]]]],[34,[[142,[31,140,140,[147,[31]]]]]],[[[142,[430,[431,[430]]]]],[[142,[430,[435,[430]]]]]],[70,[[142,[15,140,140,[147,[15]]]]]],[461,[[142,[140,140,147]]]],[52,[[142,[50,140,140,[147,[50]]]]]],[59,[[142,[60,140,140,[147,[60]]]]]],[146,142],[[]],[[]],[[]],[[]],[[]],[55,[[144,[[150,[50]]]]]],[[],[[144,[143]]]],[149,[[144,[150]]]],[[]],[[],[[144,[143]]]],[[],[[144,[143]]]],[52,[[144,[[143,[50]]]]]],[[],[[144,[150]]]],[[[145,[[144,[150]]]]],[[144,[455]]]],[[],[[144,[150]]]],[[],[[144,[143]]]],[[],[[144,[142]]]],[[],[[144,[142]]]],[45,[[144,[[143,[31]]]]]],[48,[[144,[[150,[31]]]]]],[[],[[144,[142]]]],[149,[[144,[143]]]],[[],[[144,[142]]]],[[],[[144,[150]]]],[[],[[144,[150]]]],[[]],[[]],[41,[[141,[58,140]]]],[33,[[141,[31,140]]]],[61,[[141,[60,140]]]],[[],[[141,[140]]]],[38,[[141,[50,140]]]],[[],[[141,[140]]]],[35,[[141,[31,140]]]],[69,[[141,[15,140]]]],[34,[[141,[31,140]]]],[68,[[141,[15,140]]]],[39,[[141,[58,140]]]],[70,[[141,[15,140]]]],[36,[[141,[50,140]]]],[[],[[141,[140]]]],[59,[[141,[60,140]]]],[32,[[141,[31,140]]]],[[],[[141,[140]]]],[[[142,[140]]],141],[37,[[141,[50,140]]]],[[],[[141,[140]]]],[40,[[141,[58,140]]]],[62,[[141,[60,140]]]],[48,[[149,[31]]]],[[],149],[55,[[149,[50]]]],[[],149],[[[144,[143]]],149],[45,[[149,[31]]]],[[],149],[52,[[149,[50]]]],[[],149],[[]],[[[144,[150]]],149],[48,[[150,[31]]]],[[]],[[],150],[[[142,[140,140,147]]],150],[[],150],[[],150],[[],150],[[],150],[55,[[150,[50]]]],[[]],[32,[[148,[31]]]],[34,[[148,[31]]]],[[],148],[[],148],[[[141,[140]]],148],[33,[[148,[31]]]],[37,[[148,[50]]]],[38,[[148,[50]]]],[36,[[148,[50]]]],[[]],[[],148],[[[142,[140,140]]],148],[[],148],[[],148],[35,[[148,[31]]]],[[],456],[[],456],[[],456],[[]],[[[141,[140]]],456],[[[142,[140,140]]],456],[[],456],[[],456],[[],145],[[],[[145,[50,[144,[[150,[50]]]]]]]],[[],145],[33,[[145,[31,[144,[[150,[31]]]]]]]],[[],145],[[],[[145,[50,[144,[[143,[50]]]]]]]],[32,[[145,[31,[144,[[143,[31]]]]]]]],[55,[[145,[50,[144,[[150,[50]]]]]]]],[48,[[145,[31,[144,[[150,[31]]]]]]]],[[[141,[140]]],145],[[[142,[140,140,147]]],145],[[],145],[148,145],[[[144,[455]]],[[145,[[144,[150]]]]]],[[],145],[[],[[145,[31,[144,[[143,[31]]]]]]]],[[],[[145,[31,[144,[[150,[31]]]]]]]],[37,[[145,[50,[144,[[150,[50]]]]]]]],[[]],[36,[[145,[50,[144,[[143,[50]]]]]]]],[[],146],[[],146],[[]],[[],146],[[],146],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[144,[143]]]],[147,[[142,[140,140,147]]]],[144,[[142,[140,140,147]]]],[144,[[144,[150]]]],[144,149],[[],[[144,[150]]]],[[],[[144,[143]]]],[[],149],[[],149],[[],[[142,[430]]]],[[],142],[[10,10],[[142,[430,430]]]],[[],[[142,[430]]]],[[],142],[[],142],[143,[[144,[143]]]],[143],[[[142,[140]]],141],[[],[[144,[143]]]],[[],142],[[],142],[142,142],[10,[[142,[430]]]],[[],142],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[[],142],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[[],142],[10,[[142,[430]]]],[[],142],[[],[[142,[140,140,147]]]],[[],[[144,[150]]]],[[],149],[31,[[17,[143]]]],[50,[[17,[143]]]],[10,[[142,[430]]]],[10,[[142,[430]]]],[[],142],[[10,10],[[142,[430,430]]]],[[],142],[[],460],[[[142,[140]]],[[17,[[142,[140]]]]]],[[[142,[140]]],[[17,[141]]]],[484,[[17,[143]]]],[191,[[17,[143]]]],[58,[[17,[143]]]],[429,[[17,[143]]]],[190,[[17,[143]]]],[[[142,[140,140,147]]],150],[451,[[17,[143]]]],[145,[[144,[455]]]],[145,146],[10,[[142,[430]]]],[[],142],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[[],142],[142,[[144,[150]]]],[142,[[144,[143]]]],[142,149],[142,149],[[142,10,[144,[150]]],[[144,[150]]]],[[142,10,[144,[143]]],[[144,[143]]]],[[142,10,149],149],[[142,10,149],149],[142,454],[[[142,[140,140,147]]],149],[[[142,[140,140,147]]],460],[[[142,[140,140,147]]],461],[10,[[142,[430]]]],[[],142],[10,[[142,[430]]]],[[10,10],[[142,[430,430]]]],[[],142],[[148,[144,[150]]],[[144,[455]]]],[[[142,[140,140]]],150],[148,145],[148,146],[[[144,[[142,[140,140]]]]],150],[150,[[144,[150]]]],[[],431],[[],432],[[]],[[],143],[[],150],[150,455],[[150,150],455],[[],144],[[[144,[150]]],[[144,[455]]]],[149,[[144,[150]]]],[149,[[144,[143]]]],[10,[[142,[430]]]],[[],142],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[[],142],[[],142],[[],[[142,[430]]]],[[],[[142,[430]]]],[[10,10],[[142,[430,430]]]],[[],142],[[],142],[[[142,[140,140,147]]],[[142,[140,140,147]]]],[[[142,[140,140]]],[[144,[143]]]],[[[142,[140,140]]],[[144,[150]]]],[[[142,[140,140]]],149],[[[142,[140,140]]],149],[[[142,[140,140]]],[[144,[150]]]],[[],146],[[]],[[],[[143,[457]]]],[[],[[143,[485]]]],[[]],[[],[[143,[457]]]],[[],[[143,[457]]]],[[],[[143,[457]]]],[[],[[143,[457]]]],[[],[[143,[457]]]],[[],[[143,[486]]]],[[],[[143,[457]]]],[[],[[143,[487]]]],[[],[[142,[[431,[140]]]]]],[[],[[142,[[432,[140]]]]]],[[10,10],[[142,[430,430,[431,[430,430,140,430]]]]]],[10,[[142,[430,[432,[430,140,430]]]]]],[10,[[142,[430,[431,[430,140,430]]]]]],[10,[[142,[430,[431,[430,140]]]]]],[[10,10],[[142,[430,430,[432,[430,430,140,430]]]]]],[10,[[142,[430,[432,[430,140]]]]]],[[],141],[[],[[142,[[432,[140]]]]]],[[],[[142,[[431,[140]]]]]],[10,[[142,[[431,[140]]]]]],[10,[[142,[[432,[140]]]]]],[[10,10],[[142,[430,[432,[430,140]]]]]],[[10,10,10],[[142,[430,430,[431,[430,430,140,430]]]]]],[[10,10,10],[[142,[430,430,[432,[430,430,140,430]]]]]],[[10,10],[[142,[430,[431,[430,140,430]]]]]],[[10,10],[[142,[430,[432,[430,140,430]]]]]],[[10,10],[[142,[430,[431,[430,140]]]]]],[10,[[142,[[431,[140]]]]]],[10,[[142,[[432,[140]]]]]],[[10,10],[[142,[[431,[430,430]]]]]],[[10,10,10],[[142,[430,[431,[430,430,430]]]]]],[[10,10,10],[[142,[430,[431,[430,430,430]]]]]],[[10,10,10,10],[[142,[430,430,[431,[430,430,430,430]]]]]],[[],[[142,[431]]]],[[],[[142,[432]]]],[10,[[142,[431]]]],[10,[[142,[432]]]],[[10,10,10],[[142,[430,[432,[430,430,430]]]]]],[[10,10,10,10],[[142,[430,430,[432,[430,430,430,430]]]]]],[[10,10],[[142,[[432,[430,430]]]]]],[[10,10,10],[[142,[430,[432,[430,430,430]]]]]],[[10,10,10,10,10],[[142,[430,430,[431,[430,430,430,430]]]]]],[[10,10,10,10],[[142,[430,[432,[430,430,430]]]]]],[[10,10,10],[[142,[[432,[430,430]]]]]],[[10,10,10],[[142,[[431,[430,430]]]]]],[[10,10,10,10],[[142,[430,[431,[430,430,430]]]]]],[[10,10,10,10],[[142,[430,[432,[430,430,430]]]]]],[[10,10,10,10],[[142,[430,[431,[430,430,430]]]]]],[[10,10,10,10,10],[[142,[430,430,[432,[430,430,430,430]]]]]],[132,[[18,[143]]]],[[132,60],[[18,[143]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[454,454],[142,454],[142,142],[142,[[144,[455]]]],[145,[[144,[455]]]],[142,[[144,[143]]]],[146,[[144,[455]]]],[144,[[144,[143]]]],[146,[[144,[150]]]],[454,[[144,[143]]]],[149,[[144,[143]]]],[145,[[144,[143]]]],[146,[[144,[143]]]],[144,[[144,[455]]]],[145,[[144,[150]]]],[454,[[144,[150]]]],[142,[[144,[150]]]],[149,[[144,[150]]]],[144,[[144,[150]]]],[454,[[144,[455]]]],[144,[[144,[150]]]],[141,141],[142,141],[149,149],[144,149],[146,149],[144,149],[454,149],[144,149],[145,149],[142,149],[150,150],[455,455],[145,148],[146,148],[144,148],[454,148],[142,148],[148,148],[142,456],[456,456],[454,456],[144,[[145,[[144,[150]]]]]],[145,145],[146,145],[142,145],[454,145],[454,146],[146,146],[142,146],[138,[[17,[143]]]],[189,[[17,[143]]]],[60,[[17,[143]]]],[154,[[17,[143]]]],[16,[[17,[143]]]],[10],[10,[[17,[143]]]],[10,430],[10,140],[[[175,[8]]],[[142,[430]]]],[[[175,[8]]],142],[[[175,[8]]],[[142,[430]]]],[[10,10,[175,[8]]],[[142,[430,430]]]],[[[175,[8]]],142],[[[435,[430,430]]],[[142,[430,430,[435,[430,430]]]]]],[[[435,[140,430]]],[[142,[140,430,[435,[140,430]]]]]],[[[435,[430,140]]],[[142,[430,140,[435,[430,140]]]]]],[[[142,[140,140,147]]],150],[[[142,[140,140,147]]],148],[120],[156],[156],[120],[156],[120],[156],[120],[120],[156],[156],[120],[120],[156],[120],[156],[156],[120],[156],[120],[156],[120],[156],[120],[142,473],[[142,142],15],[[141,141],15],[[142,142,142]],[[142,142,142]],[[142,142,142]],[[[142,[140]],142,142]],[[[142,[140]],142,142]],[[[142,[140]],142,142]],[142,[[142,[431]]]],[142,[[142,[432]]]],[142,[[142,[[431,[430,430]]]]]],[142,[[142,[[432,[430,430]]]]]],[142,[[142,[431]]]],[142,[[142,[432]]]],[142,[[142,[[431,[430,430]]]]]],[142,[[142,[[432,[430,430]]]]]],0,[[142,142,142]],[[142,142,142]],[[142,142,142]],[142,17],[[[142,[430,430,[435,[430,430]]]],10,10]],[[10,10]],[10],[10],[[10,10]],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[142,17],[[10,10]],[142],[[141,10]],[10],[10],[[10,10]],[142],[[141,10]],[[142,142],15],[[141,141],15],[474,142],[150,150],[[],15],[[],15],[143],[454],[140],[147],[142],[144],[141],[149],[150],[148],[456],[145],[146],[469],[470],[471],[[[142,[140]],142,142]],[[142,142,142]],[142,142],[142,474],[[]],[[143,143]],[[],143],[[[142,[140]]],10],[142],[[[142,[140]]],10],[[[142,[140]]],10],[142],[[]],[[],454],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[[],142],[10,[[142,[430]]]],[[],[[144,[455]]]],[[],[[144,[150]]]],[[],[[144,[143]]]],[[],[[144,[143]]]],[[],[[144,[150]]]],[[],149],[[],149],[[],150],[[],455],[[],148],[[],456],[[],145],[[],146],[[],459],[10,[[459,[430]]]],[[],142],[[],459],[[483,483]],[[483,483]],[[483,483]],0,[150,[[142,[140,140,147]]]],[[]],[143],[[[142,[140]]],10],[[[142,[140]]],10],[454],[142],[142],[[142,10]],[[141,10]],[149],[[150,10]],[[455,10]],[[[454,[469]]]],[142],[[142,10]],[142],[[141,10]],[[150,10]],[[455,10]],[[142,142],142],[[142,142],142],[[141,141],141],[[142,142]],[[142,142]],[[141,141]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[150,150],150],[[142,10],142],[[464,10,[142,[140]]],464],[[142,10,10],[[142,[430]]]],[[142,10],[[142,[458]]]],[[142,10],142],[[142,10],142],[[142,10],142],[[142,10,10],[[142,[430]]]],[[142,10],[[142,[458]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[454,142],[144],[149,[[142,[140,140,147]]]],[460,[[142,[140,140,147]]]],[461,[[142,[140,140,147]]]],[142],[142],[[]],[147],[142,142],[431],[432],[[[435,[430]]]],[[[435,[430]]]],[150,150],[142,142],[431],[432],[432],[143],[143,143],[143],[[145,145],145],[[459,142]],[[459,142]],[[]],[454,454],[[[144,[150]]],[[144,[150]]]],[[[144,[150]]],[[144,[150]]]],[[[144,[143]]],[[144,[143]]]],[[[144,[455]]],[[144,[455]]]],[[[144,[143]]],[[144,[143]]]],[149,149],[149,149],[148,148],[145,145],[146,146],[460,[[142,[140,140,147]]]],[461,[[142,[140,140,147]]]],[464,142],[[]],[454],[[[144,[455]]]],[[[144,[150]]]],[[[144,[143]]]],[[[144,[143]]]],[[[144,[150]]]],[149],[149],[148],[145],[146],[141,[[141,[140]]]],[[454,141],[[141,[140]]]],[[[144,[150]],141],[[141,[140]]]],[[[144,[455]],141],[[141,[140]]]],[[[144,[150]],141],[[141,[140]]]],[[[144,[143]],141],[[141,[140]]]],[[[144,[143]],141],[[141,[140]]]],[[149,141],[[141,[140]]]],[[149,141],[[141,[140]]]],[[148,141],[[141,[140]]]],[[145,141],[[141,[140]]]],[[146,141],[[141,[140]]]],[144,[[144,[[142,[140,140,147]]]]]],[[[144,[150]],144],[[144,[[142,[140,140,147]]]]]],[[[144,[455]],144],[[144,[[142,[140,140,147]]]]]],[[[144,[143]],144],[[144,[[142,[140,140,147]]]]]],[[149,144],[[144,[[142,[140,140,147]]]]]],[[149,144],[[144,[[142,[140,140,147]]]]]],[[145,144],[[144,[[142,[140,140,147]]]]]],[142,[[142,[140,140]]]],[[454,142],[[142,[140,140,147]]]],[[[144,[150]],142],[[142,[140,140,147]]]],[[[144,[143]],142],[[142,[140,140,147]]]],[[[144,[455]],142],[[142,[140,140,147]]]],[[[144,[150]],142],[[142,[140,140,147]]]],[[[144,[143]],142],[[142,[140,140,147]]]],[[149,142],[[142,[140,140,147]]]],[[149,142],[[142,[140,140,147]]]],[[145,142],[[142,[140,140,147]]]],[[146,142],[[142,[140,140,147]]]],[456,456],[[],15],[[],15],[147,15],[431,15],[432,15],[[[435,[430]]],15],[[[435,[430]]],15],[[],15],[142,15],[435,15],[141,15],[459,15],[[],15],[143,15],[143,15],[142,15],[[],15],[143,15],[[],15],[454,15],[142,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[142,15],[[],15],[[],15],[[],15],[[],15],[[],15],[142,15],[146,15],[454,15],[144,15],[146,15],[145,15],[145,15],[149,15],[142,15],[454,15],[149,15],[[],15],[454,15],[145,15],[142,15],[144,15],[146,15],[144,15],[144,15],[[],15],[142,15],[141,15],[[],15],[149,15],[144,15],[[],15],[142,15],[146,15],[144,15],[144,15],[454,15],[145,15],[[],15],[150,15],[[],15],[455,15],[144,15],[145,15],[146,15],[454,15],[148,15],[142,15],[[],15],[456,15],[142,15],[[],15],[454,15],[146,15],[142,15],[144,15],[454,15],[[],15],[145,15],[454,15],[142,15],[[],15],[146,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[143,15],[142,15],[472,15],[473,15],[439,15],[475,15],[143,15],[143,15],[143,15],[142,15],[150,15],[[],15],[[],15],[142,15],[142,15],[463,15],[143,15],[142,15],[150,15],[455,15],0,[[[144,[455]],144],[[144,[455]]]],[142,488],[141,[[488,[140]]]],[142,489],[141,[[489,[140]]]],[10,[[142,[140]]]],[10,[[144,[[142,[140]]]]]],[[142,142],142],[464,142],[473,142],[439,142],[143],[464,142],[439,142],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[142,142],15],[[141,141],15],[460],[[150,150],[[17,[150]]]],[[[142,[430,140,[435,[430,140]]]]],10],[142,10],[435,10],[141,10],[459,10],[[[142,[140]],142],[[142,[140]]]],[[[144,[455]],144],455],[[[144,[150]],144],150],[[150,150],150],[[455,455],455],[[[145,[149]],145],[[145,[149]]]],[[[145,[[144,[150]]]],145],[[145,[[144,[150]]]]]],[[[145,[[144,[143]]]],145],[[145,[[144,[143]]]]]],[[[145,[149]],145],[[145,[149]]]],0,[[10,10],10],[[]],[143,143],[[[144,[150]]],150],[150,150],[[]],[[]],[143,143],[[]],[464],[[]],[143,143],[[]],[143,143],[[]],[[]],[143,143],[[]],[[141,141,142],[[142,[140,140,147]]]],[[142,142],[[144,[150]]]],[[142,142],149],[[141,141,142],[[145,[[144,[150]]]]]],[[141,141,142],[[145,[149]]]],[[141,141,142],[[146,[[144,[150]]]]]],[[141,141,142],[[146,[149]]]],[[141,141,142],[[142,[140,140,147]]]],[[142,142],[[144,[150]]]],[[142,142],149],[[141,141,142],[[145,[149]]]],[[141,141,142],[[145,[[144,[150]]]]]],[[141,141,142],[[146,[[144,[150]]]]]],[[141,141,142],[[146,[149]]]],[142,142],[[142,58]],[[142,142],15],[[141,141],15],[142,439],[142],[150],[142],[150],[142,142],[141,141],[[142,420],[[142,[140]]]],[286],[142,142],[454,142],[149,142],0,[[[454,[469]]],142],[149,142],[454,142],[149,142],[[]],[[]],[[]],[[]],[430,430],[[140,140]],[[140,140]],[430,430],[142],[[],17],[[],142],[[]],[[],141],[[]],[142],[490,[[144,[150]]]],[[142,142]],[[142,142]],[[466,142,142]],[[467,142,142]],[[468,142,142]],[[]],[[]],[[]],[[]],[430,430],[430,430],[[140,140]],[[140,140]],[142],[[],17],[[],142],[[]],[[]],[[],141],[[]],[143],[[]],[143],[[]],[[]],[[143,143]],[[143,143]],[[143,143]],[143],[143],[143],[[143,143]],[143],[[454,149]],[[454,148]],[[454,454]],[[454,144]],[[454,148]],[[454,149]],[[454,[144,[143]]]],[[454,[142,[140,140,147]]]],[[454,[141,[140]]]],[[454,145]],[[454,148]],[[454,145]],[[454,[141,[140]]]],[[454,[144,[143]]]],[[454,142]],[[454,149]],[[454,[144,[150]]]],[[454,142]],[[454,149]],[[454,148]],[[454,146]],[[454,454]],[[454,144]],[[454,454]],[[454,146]],[[454,454]],[[454,145]],[[454,145]],[[454,[144,[150]]]],[[454,141]],[[454,[142,[140,140,147]]]],[[454,141]],[[454,144]],[[454,144]],[[454,146]],[[454,146]],[430,430],[[140,140]],[[140,140]],[430,430],[[142,149]],[[142,149]],[[142,149]],[[142,142]],[[142,142]],[142],[142],[[142,142]],[[[142,[140,140]],141]],[[[142,[140,140]],[141,[140]]]],[[142,141]],[[142,[141,[140]]]],[[142,142]],[[142,149]],[[144,148]],[[[144,[143]],149]],[[[144,[455]],145]],[[144,141]],[[144,[144,[150]]]],[[144,[145,[[144,[150]]]]]],[[144,149]],[[144,[146,[[144,[143]]]]]],[[[144,[455]],141]],[[144,[144,[[142,[140,140]]]]]],[[[144,[143]],[144,[143]]],[[144,[143]]]],[[144,145]],[[[144,[150]],148]],[[144,148]],[[144,454]],[[144,[145,[[144,[150]]]]]],[[[144,[150]],[144,[[142,[140,140]]]]]],[[144,141]],[[[144,[455]],[144,[[142,[140,140]]]]]],[[[144,[150]],145]],[[144,[144,[150]]]],[[144,149]],[[144,149]],[[144,454]],[[[144,[455]],[142,[140,140]]]],[[[144,[143]],146]],[[144,142]],[[[144,[143]],[144,[[142,[140,140]]]]]],[[[144,[143]],141]],[[144,144]],[[144,[144,[[142,[140,140]]]]]],[[144,454]],[[[144,[150]],454]],[[[144,[455]],455]],[[144,[146,[[144,[150]]]]]],[[144,[141,[140]]]],[[[144,[150]],144]],[[[144,[455]],455]],[[144,454]],[[[144,[143]],454]],[[[144,[143]],142]],[[144,148]],[[[144,[143]],148]],[[[144,[150]],149]],[[[144,[150]],[142,[140,140]]]],[[144,[141,[140]]]],[[[144,[143]],[142,[140,140]]]],[[144,144]],[[144,455]],[[144,146]],[[144,455]],[[[144,[455]],148]],[[144,145]],[[144,142]],[[[144,[455]],144]],[[144,[144,[455]]]],[[[144,[143]],149]],[[[144,[455]],142]],[[144,[145,[[144,[143]]]]]],[[144,144]],[[144,148]],[[144,[141,[140]]]],[[[144,[150]],[145,[[144,[150]]]]]],[[144,142]],[[[144,[143]],144]],[[144,144]],[[144,141]],[[[144,[143]],[145,[[144,[143]]]]]],[[[144,[143]],[146,[[144,[143]]]]]],[[[144,[143]],148]],[[144,144]],[[144,144]],[[144,[142,[140,140]]]],[[[144,[150]],144]],[[[144,[150]],141]],[[144,[142,[140,140]]]],[[144,[144,[[142,[140,140]]]]]],[[144,148]],[[[144,[455]],[144,[150]]]],[[[144,[150]],[144,[455]]]],[[[144,[455]],144]],[[[144,[150]],[144,[150]]]],[[144,146]],[[[144,[143]],144]],[[[144,[455]],[141,[140]]]],[[[144,[455]],148]],[[[144,[150]],144]],[[[144,[455]],[145,[[144,[150]]]]]],[[[144,[455]],144]],[[[144,[150]],142]],[[[144,[150]],[146,[[144,[150]]]]]],[[144,144]],[[144,149]],[[[144,[150]],146]],[[[144,[150]],[141,[140]]]],[[[144,[143]],454]],[[144,144]],[[[144,[143]],[141,[140]]]],[[[144,[150]],149]],[[[144,[150]],454]],[[144,[142,[140,140]]]],[[144,[144,[455]]]],[[144,145]],[[[144,[150]],148]],[[144,[144,[143]]]],[[[144,[455]],[144,[455]]]],[[144,148]],[[[144,[143]],145]],[141],[141],[[149,[145,[149]]]],[[149,142]],[[149,144]],[[149,146]],[[149,149]],[[149,149]],[[149,[145,[149]]]],[[149,454]],[[149,[144,[143]]]],[[149,149]],[[149,[146,[149]]]],[[149,[144,[[142,[140,140]]]]]],[[149,142]],[[149,144]],[[149,148]],[[149,142]],[[149,141]],[[149,454]],[[149,[144,[150]]]],[[149,144]],[[149,[144,[[142,[140,140]]]]]],[[149,144]],[[149,[144,[143]]]],[[149,145]],[[149,148]],[[149,144]],[[149,149]],[[149,144]],[[149,454]],[[149,[141,[140]]]],[[149,[144,[150]]]],[[149,142]],[[149,146]],[[149,145]],[[149,[141,[140]]]],[[149,454]],[[149,141]],[[149,148]],[[149,148]],[[149,[146,[149]]]],[150],[[150,150]],[[150,150]],[150],[[150,150]],[[150,150]],[[455,455]],[[455,[144,[455]]]],[455],[[455,144]],[[455,455]],[[455,[144,[455]]]],[[455,455]],[[455,144]],[[455,455]],[455],[[148,141]],[[148,149]],[[148,141]],[[148,144]],[[148,[144,[143]]]],[[148,146]],[[148,454]],[[148,145]],[[148,[144,[150]]]],[[148,148]],[[148,[144,[455]]]],[[148,149]],[[148,454]],[[148,144]],[[148,144]],[[148,[144,[150]]]],[[148,146]],[[148,454]],[[148,144]],[[148,148]],[[148,145]],[[148,145]],[[148,148]],[[148,[141,[140]]]],[[148,[144,[455]]]],[[148,145]],[[148,144]],[[148,144]],[[148,149]],[[148,146]],[[148,[144,[143]]]],[[148,[141,[140]]]],[[148,146]],[[148,454]],[[148,148]],[[148,149]],[456],[[456,456]],[[456,456]],[[456,[142,[140,140,147]]]],[[456,141]],[[456,[141,[140]]]],[[456,[141,[140]]]],[[456,142]],[456],[[456,142]],[[456,456]],[[456,[142,[140,140,147]]]],[[456,456]],[[456,141]],[[145,148]],[[145,[144,[[142,[140,140,147]]]]]],[[145,146]],[[[145,[149]],149]],[[145,[144,[150]]]],[[145,[141,[140]]]],[[[145,[[144,[143]]]],[144,[143]]]],[[[145,[[144,[150]]]],144]],[[145,[144,[455]]]],[[145,144]],[[145,[142,[140,140,147]]]],[[145,148]],[[145,148]],[[145,148]],[[145,145]],[[[145,[[144,[143]]]],144]],[[145,144]],[[145,142]],[[145,145]],[[145,141]],[[145,[141,[140]]]],[[145,149]],[[145,146]],[[145,[144,[143]]]],[[145,144]],[[145,454]],[[145,141]],[[145,144]],[[145,[142,[140,140,147]]]],[[145,146]],[[[145,[[144,[150]]]],[144,[150]]]],[[[145,[149]],149]],[[145,144]],[[[145,[[144,[150]]]],[144,[455]]]],[[145,146]],[[145,[144,[[142,[140,140,147]]]]]],[[145,145]],[[[145,[[144,[150]]]],144]],[[145,145]],[[145,454]],[[145,454]],[[145,142]],[[145,454]],[[145,149]],[[146,[141,[140]]]],[[146,141]],[[146,454]],[[146,148]],[[[146,[[144,[143]]]],[144,[143]]]],[[146,145]],[[146,146]],[[146,[144,[150]]]],[[146,142]],[[146,[141,[140]]]],[[[146,[149]],149]],[[146,146]],[[146,142]],[[146,454]],[[146,145]],[[146,146]],[[[146,[149]],149]],[[[146,[[144,[150]]]],[144,[150]]]],[[146,[142,[140,140,147]]]],[[146,149]],[[146,141]],[[[146,[[144,[143]]]],144]],[[146,[144,[143]]]],[[146,146]],[[146,148]],[[146,145]],[[146,144]],[[146,149]],[[146,454]],[[146,144]],[[146,454]],[[[146,[[144,[150]]]],144]],[[146,148]],[[146,148]],[[146,[142,[140,140,147]]]],[[146,145]],[[]],[[143,143,143],143],[[143,143,143],143],[[143,143,143],143],[[143,143,143]],[[143,143,143]],[[143,143]],[143],[[143,143]],[143],[[454,[144,[150]]]],[[454,148]],[[454,145]],[[454,144]],[[454,144]],[[454,145]],[[454,[144,[143]]]],[[454,146]],[[454,149]],[[454,148]],[[454,146]],[[454,454]],[[454,454]],[[454,149]],[[[142,[140,140,147]],149]],[[142,142]],[[142,142]],[142],[[[142,[140,140,147]],149]],[[[144,[455]],148]],[[[144,[455]],[144,[455]]]],[[[144,[455]],148]],[[[144,[143]],[144,[143]]]],[[[144,[150]],144]],[[[144,[143]],149]],[[[144,[150]],149]],[[[144,[150]],149]],[[[144,[455]],[145,[[144,[150]]]]]],[[[144,[455]],144]],[[[144,[455]],[144,[150]]]],[[[144,[150]],[144,[150]]]],[[[144,[455]],144]],[[[144,[455]],145]],[[[144,[143]],149]],[[[144,[143]],144]],[141],[[149,149]],[[149,[144,[143]]]],[[149,144]],[[149,149]],[[150,150]],[[150,150]],[150],[[455,455]],[[455,[144,[455]]]],[[455,455]],[[455,144]],[455],[[148,148]],[[148,148]],[456],[[456,456]],[[456,456]],[[[145,[[144,[150]]]],[144,[150]]]],[[[145,[149]],149]],[[145,148]],[[145,145]],[[[145,[149]],149]],[[[145,[[144,[143]]]],[144,[143]]]],[[145,145]],[[[145,[[144,[143]]]],144]],[[[145,[[144,[150]]]],144]],[[145,148]],[[146,146]],[[146,148]],[[[146,[[144,[143]]]],144]],[[[146,[149]],149]],[[[146,[149]],149]],[[[146,[[144,[143]]]],[144,[143]]]],[[146,146]],[[146,148]],[[[146,[[144,[150]]]],[144,[150]]]],[[[146,[[144,[150]]]],144]],[[146,145]],[[146,145]],[[142,142,142]],[[]],[[],140],[142,10],[[[142,[430,430,[435,[430,430]]]]],10],[143],[143],[142],[142],[144],[[[144,[455]]]],[[[144,[142]]]],[141],[141],[150],[150],[455],[455],[142],[[],143],[[[144,[[142,[140]]]]],462],[10,430],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[[142,[140,140]]],[[144,[150]]]],[[],[[144,[143]]]],[[[175,[8]]],435],[[],[[141,[140]]]],[[],[[141,[140]]]],[[],[[141,[140]]]],[[],[[141,[140]]]],[[],[[141,[140]]]],[[],[[141,[140]]]],[[],149],[[[142,[140,140]]],149],[[],150],[[],148],[[],148],[[],148],[[],148],[[],148],[[],148],[[],456],[[],456],[[],456],[[],456],[[],456],[[],456],[[[142,[140,140,147]]],[[145,[[144,[143]]]]]],[[[142,[140,140,147]]],[[145,[149]]]],[[[142,[140,140,147]],[142,[140,140,147]]],[[145,[149]]]],[[[142,[140,140,147]],[142,[140,140,147]]],[[145,[[144,[150]]]]]],[[[142,[140,140,147]]],[[146,[149]]]],[[[142,[140,140,147]],[142,[140,140,147]]],[[146,[149]]]],[[[142,[140,140,147]],[142,[140,140,147]]],[[146,[[144,[150]]]]]],[[[142,[140,140,147]]],[[146,[[144,[143]]]]]],[[],460],[[],461],[142,463],[142,[[17,[464]]]],[142,472],[142,473],[142,474],[142,439],[142,475],[142,476],[[142,15,15],477],[142,478],[142,479],[142,[[17,[480]]]],[[]],[[[144,[[142,[140,140]]]],141],[[462,[140]]]],[[[142,[140,140]]],[[144,[150]]]],[142,142],[[142,141],[[142,[140,140,147]]]],[[142,141],[[142,[140,140,147]]]],[[],144],[[141,141,142],[[142,[140,140,147]]]],[[141,141,142],[[145,[[144,[150]]]]]],[[141,141,142],[[145,[149]]]],[[142,142],[[144,[150]]]],[[142,142],149],[[141,141,142],[[146,[149]]]],[[141,141,142],[[146,[[144,[150]]]]]],[[],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[[142,[140,140,147]]],[[142,[140,140,147]]]],[[],[[142,[140,140,147]]]],[[[142,[140,140,147]],[141,[140]]],[[142,[140,140,147]]]],[[],142],[142,142],[[],431],[[],432],[[],144],[142,464],[[142,15,15],477],[[],431],[[],432],[142,[[17,[464]]]],[[142,142],474],[[[144,[150]],144],[[144,[150]]]],[[[144,[455]],144],[[144,[455]]]],[[],15],[142],[[]],[143],[142],[142],[[466,142]],[[467,142]],[[468,142]],[150],[150],[455],[[]],[143],[143],[[]],[143],[142],[142],[150],[150],[455],[142,142],[150,150],[455,455],[142],[150],[455],[[[142,[430,430,[435,[430,430]]]]],10],[142,10],[463,[[142,[140]]]],[479,[[142,[140]]]],[[]],[[]],[[],143],[[],454],[[]],[[]],[[],142],[[],[[144,[150]]]],[[],[[144,[143]]]],[[]],[[],[[144,[455]]]],[[],149],[[]],[[],150],[[]],[[]],[[],455],[[],148],[[]],[[]],[[],456],[[],145],[[]],[[],146],[[]],[[],15],[[],141],[[[142,[140,140,147]]]],[[[142,[140,140,147]]]],[[]],[[[142,[140,140,147]]],[[142,[140,140,147]]]],[[[142,[140,140,147]]],[[142,[140,140,147]]]],[[],10],[[150,150],150],[472,459],[473,459],[439,459],[142,464],[[],17],[[],[[17,[122]]]],[[142,142],[[17,[122]]]],[[141,141],[[17,[122]]]],[[],15],[[],15],[[],15],[[],15],[[],17],[[],17],[[],17],[[459,142]],[[459,142]],[[142,142]],[[]],0,[142],[150],[[143,138]],[[143,190]],[[143,189]],[[143,154]],[[143,191]],[[143,138]],[[143,60]],[[143,16]],[[143,10]],[[143,451]],[[143,189]],[[143,60]],[[143,58]],[[143,484]],[[143,154]],[[143,191]],[[143,16]],[[143,484]],[[143,190]],[[143,10]],[[143,429]],[[143,58]],[[143,451]],[[143,429]],[[142,60],142],[[142,60]],[[]],[[143,143],143],[[]],[143,143],[[[144,[143]]],[[144,[143]]]],[[[144,[150]]],[[144,[150]]]],[149,149],[149,149],[150,150],[58],[[143,58],143],[[143,58],143],[[143,60],143],[[142,142],142],[[142,142]],[142,142],[146,146],[142],[146],[[142,142],142],[[142,142]],[[],143],[[],143],[142],[[],142],[[],142],[[150,150],[[17,[150]]]],[[460,141],[[141,[140]]]],[[461,141],[[141,[140]]]],[[460,142],[[142,[140,140,147]]]],[[461,142],[[142,[140,140,147]]]],[142,[[18,[142,132]]]],[456,456],[477,[[18,[142,132]]]],[[]],[147],[431],[432],[[[435,[430]]]],[[[435,[430]]]],[[]],[147],[432],[[[435,[430]]]],[[[435,[430]]]],[150,150],[[[142,[140]]],[[142,[140]]]],[472,142],[473,459],[474,142],[475,142],[479,142],[[472,142]],[[475,142]],[142,475],[[142,142,142]],[[142,142,142]],[[142,142,142,142]],[[142,142,142,142]],[[[144,[150]]],150],[472,142],[475,142],[142,10],[477,10],[[464,142]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],0,[[]],[143],0,[[140,140],[[147,[458]]]],[[430,147],[[435,[458,430]]]],[[430,[435,[430]]],[[435,[458,430]]]],[[430,147],[[435,[458,430]]]],[[430,[435,[430]]],[[435,[458,430]]]],[[430,[435,[430]]],[[435,[458,430]]]],[[430,[435,[430]]],[[435,[458,430]]]],[[]],[143,143],[477,[[18,[142,132]]]],[478,142],[479,142],[[462,142]],[[462,142,142]],[[462,142,142]],[[462,142]],[[150,150],[[17,[150]]]],[[454,454],15],[[142,142],15],[[142,142],15],[[[144,[142]],144],15],[[[144,[455]],144],15],[[[144,[150]],144],15],[[[144,[143]],144],15],[[141,141],15],[[149,149],15],[[150,150],15],[[455,455],15],[[148,148],15],[[456,456],15],[[145,145],15],[[146,146],15],[[143,143]],[[143,143]],[[143,143]],[[143,143]],[143],[143],[143],[143],[[143,143]],[[143,143]],[143],[143],[[142,10],142],[[464,10],464],[[142,10,10],[[142,[430]]]],[142,[[142,[430]]]],[[142,10],142],[[142,10],142],[[142,10],142],[[142,10],142],[[142,10,10],[[142,[430]]]],[142,[[142,[430]]]],[[142,10],142],[144],[149],[149],[144],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[10,[[142,[430]]]],[[],142],[[],142],[10],[[143,10]],[[454,10]],[[142,10]],[[[144,[143]],10]],[[[144,[150]],10]],[[[141,[140]],10]],[[149,10]],[[150,10]],[[148,10]],[[456,10]],[[145,10]],[[146,10]],[10],[[143,10]],[[454,10]],[[142,10]],[[[144,[143]],10]],[[[144,[150]],10]],[[[141,[140]],10]],[[149,10]],[[150,10]],[[148,10]],[[456,10]],[[145,10]],[[146,10]],[[]],[[147,140,140]],[142,142],[[[431,[140]]]],[[[432,[140]]]],[[[435,[430]],430]],[[[435,[430]],430]],[[[435,[430]],430]],[[[435,[430]],430]],[[142,10,10],[[142,[430,430]]]],[[435,10],[[175,[458,8]]]],[142,142],[[142,10],[[142,[430]]]],[[[142,[430]],10]],[[[142,[430,430]],10,10]],[[142,10],[[142,[430]]]],[[[142,[430]],10]],[460],[[150,150],[[17,[150]]]],[[[144,[455]]],[[144,[150]]]],[[],[[145,[149]]]],[[[142,[140,140,147]]],[[145,[[144,[150]]]]]],[[],[[145,[[144,[143]]]]]],[[[142,[140,140,147]]],[[145,[149]]]],0,[[142,142],[[144,[143]]]],[[142,142],[[17,[[144,[150]]]]]],[[142,142],149],[[142,142],[[17,[149]]]],[[144,144],[[17,[[144,[150]]]]]],[[144,144],[[144,[143]]]],[[[144,[150]],144],[[144,[150]]]],[[[144,[143]],144],[[144,[143]]]],[[149,149],149],[[149,149],149],[[[141,[140]]],145],[[[141,[140]]],146],[[]],[143,143],[[142,10],[[142,[140,[431,[140]]]]]],[142,491],[142,492],[142,[[142,[140]]]],[142,[[142,[140]]]],[[142,10],[[142,[140,[432,[140]]]]]],[[142,10,10],[[142,[140,430,[431,[140,430]]]]]],[[142,10,10],[[142,[140,430,[432,[140,430]]]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[142,[[142,[140]]]],[[142,10,10],[[142,[430,[431,[430]]]]]],[[142,10],[[142,[431]]]],[[142,10],[[142,[432]]]],[[142,10,10],[[142,[[431,[430]]]]]],[[142,10,10],[[142,[[432,[430]]]]]],[[142,10,10],[[142,[430,[432,[430]]]]]],[142,[[142,[431]]]],[142,[[142,[432]]]],[142],[142],[[142,10,10,10],[[142,[430,[431,[430,430]]]]]],[[142,10,10,10],[[142,[430,[432,[430,430]]]]]],[150],[[]],[143,143],[143,143],[142,142],[[]],[143],[142],[142],[150],[455],[[[144,[143]]],[[142,[140,140,147]]]],[[[144,[150]]],[[142,[140,140,147]]]],[149,[[142,[140,140,147]]]],[149,[[142,[140,140,147]]]],[[142,142],[[144,[143]]]],[[142,142],[[17,[[144,[150]]]]]],[[142,142],149],[[142,142],[[17,[149]]]],[[144,144],[[17,[[144,[150]]]]]],[[144,144],[[144,[143]]]],[146],[142,476],[[[144,[455]],144],[[144,[455]]]],[[]],[[143,143],143],[[454,454],454],[[142,142],142],[[[144,[150]],[144,[150]]],[[144,[150]]]],[[[144,[143]],[144,[143]]],[[144,[143]]]],[[[141,[140]],[141,[140]]],[[141,[140]]]],[[149,149],149],[[150,150],150],[[148,148],148],[[456,456],456],[[145,145],145],[[146,146],146],[142,[[142,[430]]]],[142,[[142,[430]]]],[[[142,[430,430,[435,[430,430]]]],10,10]],[461],[460],[460],[454,454],[[142,10,142]],[[142,142]],[461],[460],[460],[142],[143],[[142,167]],[460],[[142,10,142]],[146],[460],[143],[460],[461],[460],[461],[460],[461],[[]],[147],[142],[431],[432],[[[435,[430]]]],[[[435,[430]]]],[142],[[]],[[]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[487]]]],[[[143,[457]]]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[487]]],[[143,[487]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[487]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[142,142],[[]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[]],[[]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[143,[486]]],[[143,[486]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[143,[457]]]],[[]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[487]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[[143,[457]]]],[[[143,[487]]]],[[[143,[457]]]],[[]],[[[143,[457]],[143,[457]]]],[[[143,[457]],[143,[457]]]],[[[143,[457]],[143,[457]]]],[[[143,[485]],[143,[485]]]],[[[143,[457]],[143,[457]]]],[[[143,[486]],[143,[486]]]],[[[143,[487]],[143,[487]]]],[[[143,[457]],[143,[457]]]],[[[143,[457]],[143,[457]]]],[[]],[[[143,[457]],[143,[457]]]],[[]],[[[143,[485]]]],[[[143,[457]]]],[[]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[487]]]],[[]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[[143,[457]],457],[[143,[457]]]],[[[143,[457]],457],[[143,[457]]]],[[[143,[457]],457],[[143,[457]]]],[[[143,[457]],457],[[143,[457]]]],[[[143,[486]],486],[[143,[486]]]],[[]],[[[143,[457]],457],[[143,[457]]]],[[[143,[457]],457],[[143,[457]]]],[[[143,[485]],485],[[143,[485]]]],[[[143,[457]],457],[[143,[457]]]],[[[143,[487]],487],[[143,[487]]]],[[]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[487]]]],[[[143,[457]]]],[[]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[487]]]],[[[143,[457]]]],[[]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[487]],[143,[487]],[143,[487]]],[[143,[487]]]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[485]],[143,[485]],[143,[485]]],[[143,[485]]]],[[]],[[[143,[457]],[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[486]],[143,[486]],[143,[486]]],[[143,[486]]]],[[]],[[]],[[]],[[]],[[[143,[487]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[486]]]],[[]],[[[143,[457]]]],[[]],[[]],[[]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[486]],[143,[486]]],[[143,[486]]]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[487]],[143,[487]]],[[143,[487]]]],[[[143,[485]],[143,[485]]],[[143,[485]]]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[[143,[457]],[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[58],[[[143,[486]],58],[[143,[486]]]],[[[143,[485]],58],[[143,[485]]]],[[[143,[457]],58],[[143,[457]]]],[[[143,[457]],58],[[143,[457]]]],[[[143,[457]],58],[[143,[457]]]],[[[143,[487]],58],[[143,[487]]]],[[[143,[457]],58],[[143,[457]]]],[[[143,[457]],58],[[143,[457]]]],[[[143,[457]],58],[[143,[457]]]],[[[143,[457]],58],[[143,[457]]]],[58],[[]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[487]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[486]]],[[143,[486]]]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[457]]]],[[]],[[[143,[487]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[]],[[]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[[143,[487]]]],[[[143,[457]]]],[[[143,[457]]]],[[[143,[486]]]],[[[143,[457]]]],[[[143,[485]]]],[[[143,[457]]]],[[[143,[457]]]],[[]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[]],[[]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[486]]],[[143,[486]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[457]]],[[143,[457]]]],[150,[[493,[150]]]],[142,[[493,[142]]]],[142,493],[[]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[485]]],[[143,[485]]]],[[[143,[486]]],[[143,[486]]]],[[]],[[[143,[457]]],[[143,[457]]]],[[[143,[487]]],[[143,[487]]]],[[[143,[457]]],[[143,[457]]]],[[[143,[457]]],[[143,[457]]]],[[]],[143,143],[150,150],[[[144,[143]]]],[[]],[143],[[]],[142,[[142,[140]]]],0,[142,[[142,[140]]]],[[]],[143,143],[150,150],[[]],[143],[[]],[[]],[[[142,[140]],142],[[142,[140]]]],[[[144,[150]],144],[[144,[150]]]],[[[144,[[142,[140]]]],144],[[144,[[142,[140]]]]]],[[[144,[143]],144],[[144,[143]]]],[[149,149],149],[[149,149],149],[142,[[142,[430,430,[431,[430,430]]]]]],[142,[[142,[430,430,[432,[430,430]]]]]],[142,[[142,[431]]]],[142,[[142,[432]]]],[142,[[142,[430,430,[431,[430,430,430,430]]]]]],[142,[[142,[430,430,[432,[430,430,430,430]]]]]],[[464,142],142],[[472,142],[[17,[142]]]],[[473,142],[[17,[142]]]],[[439,142],[[17,[142]]]],[[475,142],[[17,[142]]]],[[477,142],[[18,[142,132]]]],[[142,142],[[17,[142]]]],[[142,142],15],[[142,142],142],[[142,142]],[[142,142],15],[[142,142]],[[464,142]],[[472,142],15],[[473,142],15],[[439,142],15],[[475,142],15],[[142,142],[[17,[142]]]],[[142,142],15],[[142,142],142],[[142,142]],[477],[[]],[[],143],[[],454],[[],142],[[],[[144,[143]]]],[[],[[144,[150]]]],[[],[[141,[140]]]],[[],149],[[],150],[[],148],[[],456],[[],145],[[],146],[[]],[143,143],[150,150],[150,150],[141,10],[[]],[147],[142],[431],[432],[[[435,[430]]]],[[[435,[430]]]],[[]],[[]],[143],[[143,143]],[143],[[143,143]],[143],[[143,143]],[[143,143]],[143],[[430,10],430],[430,430],[430,430],[[140,140]],[[140,140]],[[142,142]],[[142,142]],[[142,142]],[[142,142]],[[141,[142,[140]]]],[[141,141]],[[141,141]],[[141,141]],[[141,[142,[140]]]],[[141,142]],[[141,142]],[[141,141]],[[150,150]],[[150,150]],[[150,150]],[[150,150]],[[455,455]],[[455,455]],[[455,455]],[[455,455]],[143],[[143,143]],[[143,143]],[143],[[142,142]],[[142,142]],[[141,[142,[140]]]],[[141,142]],[[150,150]],[[150,150]],[[455,455]],[[455,455]],[[142,142,142]],[[],143],[[],143],[[],[[142,[430]]]],[142],[[],142],[[],[[142,[430]]]],[[],142],[[142,142],142],[[142,142],142],[[141,141],141],[[142,15,15],477],[[142,15,15],477],[142],[[142,10,10]],[[142,10,10]],[[]],[142],[[141,10,10]],[[10,10]],[[[142,[140]],142,142]],[[142,142,142]],[142,478],[142,[[142,[140]]]],[142,142],[142,479],[[]],[143,143],[150,150],[[]],[143,143],[150,150],[[[144,[150]]]],[149],[[]],[143,[[17,[31]]]],[143,[[17,[50]]]],[454,142],[[[142,[140]]],[[142,[140]]]],[142,142],[[[144,[143]]],[[142,[140,140,147]]]],[[[144,[455]]],[[142,[140,140,147]]]],[[[144,[150]]],[[142,[140,140,147]]]],[141,[[142,[140]]]],[149,142],[148,142],[456,142],[145,142],[146,142],[460,[[142,[140,140,147]]]],[461,[[142,[140,140,147]]]],[143,[[17,[484]]]],[143,[[17,[191]]]],[143,[[17,[58]]]],[143,[[17,[429]]]],[143,[[17,[190]]]],[143,[[17,[451]]]],[[[144,[455]]],[[145,[[144,[150]]]]]],[145,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[477,17],[460,[[454,[470]]]],[461,[[454,[470]]]],[[[144,[143]]],149],[[[144,[150]]],149],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[454,142],[454,454],[142,142],[[[144,[455]]],454],[[[144,[143]]],[[144,[143]]]],[[[144,[143]]],146],[[[144,[455]]],[[142,[140,140,147]]]],[[[144,[143]]],454],[[[144,[150]]],145],[[[144,[150]]],[[144,[455]]]],[[[144,[455]]],[[144,[455]]]],[[[144,[150]]],149],[[[144,[150]]],454],[[[144,[143]]],[[142,[140,140,147]]]],[[[144,[455]]],[[146,[[144,[150]]]]]],[[[144,[455]]],[[145,[[144,[150]]]]]],[[[144,[143]]],145],[[[144,[150]]],[[144,[150]]]],[[[144,[150]]],[[142,[140,140,147]]]],[[[144,[143]]],149],[[[144,[150]]],146],[141,141],[141,[[142,[140]]]],[149,[[144,[143]]]],[149,142],[149,149],[149,145],[149,454],[149,[[144,[455]]]],[149,146],[149,[[144,[150]]]],[150,150],[455,455],[148,148],[148,142],[148,454],[148,[[144,[455]]]],[148,146],[148,145],[456,456],[456,454],[456,142],[[[145,[[144,[150]]]]],[[144,[455]]]],[145,454],[145,142],[145,145],[145,146],[146,146],[146,454],[146,142],[143,[[17,[138]]]],[143,[[17,[189]]]],[143,[[17,[60]]]],[143,[[17,[154]]]],[143,[[17,[16]]]],[143,[[17,[10]]]],[460],[[142,142]],[[142,142]],[[142,142],142],[[142,142,142]],[[142,142],[[17,[142]]]],[[142,142],15],[[142,142],142],[[142,142]],[[142,142],[[17,[142]]]],[[142,142],15],[[142,142],142],[[142,142]],[142],[141,[[141,[140]]]],[[454,141],[[141,[140]]]],[[[142,[140,140]],141],[[141,[140]]]],[[[142,[140,140]],141],[[141,[140]]]],[[[144,[143]],141],[[141,[140]]]],[[[144,[143]],141],[[141,[140]]]],[[[144,[150]],141],[[141,[140]]]],[[[144,[150]],141],[[141,[140]]]],[[[144,[455]],141],[[141,[140]]]],[[149,141],[[141,[140]]]],[[149,141],[[141,[140]]]],[[148,141],[[141,[140]]]],[[456,141],[[141,[140]]]],[[145,141],[[141,[140]]]],[[146,141],[[141,[140]]]],[142,[[142,[140,140,147]]]],[[454,142],[[142,[140,140,147]]]],[[142,142],[[142,[140]]]],[[[144,[143]],142],[[142,[140,140,147]]]],[[[144,[455]],142],[[142,[140,140,147]]]],[[[144,[143]],142],[[142,[140,140,147]]]],[[[144,[150]],142],[[142,[140,140,147]]]],[[[144,[150]],142],[[142,[140,140,147]]]],[[149,142],[[142,[140,140,147]]]],[[149,142],[[142,[140,140,147]]]],[[145,142],[[142,[140,140,147]]]],[[146,142],[[142,[140,140,147]]]],[[[144,[455]]],148],[[],[[145,[[144,[150]]]]]],[[],[[145,[149]]]],[[],[[145,[149]]]],[[],[[145,[[144,[143]]]]]],0,[142,142],[149,149],[142],[149],[[142,142]],[[]],[143,143],[142,[[17,[142]]]],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[35,[[18,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[38,[[18,[[144,[[142,[50,140,140,[147,[50]]]]]]]]]],[36,[[18,[[144,[[142,[50,140,140,[147,[50]]]]]]]]]],[32,[[18,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[33,[[18,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[37,[[18,[[144,[[142,[50,140,140,[147,[50]]]]]]]]]],[34,[[18,[[144,[[142,[31,140,140,[147,[31]]]]]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[44,[[18,[[145,[31,[144,[[143,[31]]]]]]]]]],[[],18],[53,[[18,[[145,[50,[144,[[143,[50]]]]]]]]]],[54,[[18,[[145,[50,[144,[[150,[50]]]]]]]]]],[47,[[18,[[145,[31,[144,[[150,[31]]]]]]]]]],[53,[[18,[[146,[50,[144,[[143,[50]]]]]]]]]],[[],18],[44,[[18,[[146,[31,[144,[[143,[31]]]]]]]]]],[54,[[18,[[146,[50,[144,[[150,[50]]]]]]]]]],[47,[[18,[[146,[31,[144,[[150,[31]]]]]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[454,[[17,[454]]]],[142,[[17,[142]]]],[150,[[17,[150]]]],[455,[[17,[455]]]],[456,[[17,[456]]]],[472,[[17,[142]]]],[473,[[17,[142]]]],[439,[[17,[142]]]],[475,[[17,[142]]]],[454,15],[142,15],[150],[455,15],[456,15],[[439,142],15],[[456,141],[[17,[[141,[140]]]]]],[[142,142],15],[[[145,[[144,[150]]]],145],[[17,[[145,[[144,[150]]]]]]]],[[[145,[149]],145],[[17,[[145,[149]]]]]],[[],[[17,[144]]]],[[142,10],[[17,[476]]]],[[142,15,15,10],[[17,[477]]]],[[142,10],[[17,[478]]]],[[],17],[[142,15,15,10],[[17,[477]]]],[142,[[17,[142]]]],[142,17],[[142,10],17],[[142,10],[[17,[476]]]],[[[144,[455]],144],[[17,[[144,[455]]]]]],[142],[[[144,[[142,[140]]]],144],[[17,[[144,[[142,[140]]]]]]]],[[[144,[150]],144],[[17,[[144,[150]]]]]],[[149,149],[[17,[149]]]],[[],17],[143,[[17,[143]]]],[[142,15,15,10],[[17,[477]]]],[[142,15,15,10],[[17,[477]]]],[[142,10],[[17,[478]]]],[[],[[17,[10]]]],[[],[[17,[10]]]],[[],[[17,[10]]]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[463,142],[473,142],[439,142],0,0,[142,[[17,[480]]]],[[454,454,60],15],[[142,142,60],15],[[[144,[150]],144,60],15],[[[144,[143]],144,60],15],[[[144,[142]],144,60],15],[[[144,[455]],144,60],15],[[141,141,60],15],[[149,149,60],15],[[150,150,60],15],[[455,455,60],15],[[148,148,60],15],[[456,456,60],15],[[145,145,60],15],[[146,146,60],15],[[],[[142,[458]]]],[463],[464,142],[472],[473],[474],[439],[475],[476],[479],[464,142],[474,142],[472,142],[475,142],[479],[[460,141],[[141,[140]]]],[[461,141],[[141,[140]]]],[[]],[143,143],[143,143],[142,142],[[]],[143],[142],[142],[150],[455],[454,142],[144],[149,[[142,[140,140,147]]]],[460,[[142,[140,140,147]]]],[461,[[142,[140,140,147]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[142,142],[463,142],0,[[],10],[430,10],[140,10],[142],[150,[[142,[140,140,[431,[140,140]]]]]],0,0,0,[150,[[142,[140,140,[432,[140,140]]]]]],[[142,10]],[[[142,[140]],10]],[[[142,[140]],10]],[142,[[142,[430,430,[431,[430,430]]]]]],[142,[[142,[430,430,[432,[430,430]]]]]],[142,[[142,[431]]]],[142,[[142,[432]]]],[142,[[142,[430,430,[431,[430,430,430,430]]]]]],[142,[[142,[430,430,[432,[430,430,430,430]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[142,[140]]]],[[],[[144,[[142,[140]]]]]],[[]],[[]],[[],[[142,[140]]]],[[],[[144,[[142,[140]]]]]],[[],15],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[],[[142,[140]]]],[[],[[144,[[142,[140]]]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[],[[142,[140]]]],[[],[[144,[[142,[140]]]]]],[[]],[[],143],[[]],[[]],[[],142],[[]],[[],150],[[]],[[],455],[[],142],[[10,10],[[142,[430,430]]]],[10,[[142,[430]]]],[10,[[142,[430]]]],[[],142],[460],[461],[[142,142,420]],[[142,142,420]],[[142,142],142],[286],[[142,142,142,420]],[[142,142,142],142],[460],[461],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],[[[142,[140]]],[[142,[140,140,147]]]],[[[141,[140]]],[[141,[140]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[],10],[[]],0,0,0,0,[[],10],0,[[]],[[]],[[],10],[10],[[10,10]],[10],[10],[[10,10]],[[10,10]],[10],[10],[[10,10]],0,[[]],[[],15],[[],15],0,[[10,10],10],[[]],[[]],[[142,142]],[[]],[[]],[[]],[[]],[[]],[142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[10,10]],[[],[[17,[10]]]],0,[[]],[[],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[3],[[]],[[]],[494,494],[[]],[[],[[9,[7,8]]]],[10],[10],[[]],[10],[[494,11],[[18,[125]]]],[[]],[[]],[[],10],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[[],15],[[16,16]],[16],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[495,495],[496,496],[497,497],[498,498],[499,499],[500,500],[501,501],[502,502],[503,503],[504,504],[505,505],[506,506],[507,507],[508,508],[509,509],[510,510],[511,511],[512,512],[513,513],[514,514],[515,515],[516,516],[517,517],[518,518],[519,519],[520,520],[521,521],[522,522],[523,523],[524,524],[525,525],[526,526],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[78,15],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[128],[[495,495],15],[[496,496],15],[[497,497],15],[[498,498],15],[[499,499],15],[[500,500],15],[[501,501],15],[[502,502],15],[[503,503],15],[[504,504],15],[[505,505],15],[[506,506],15],[[507,507],15],[[508,508],15],[[509,509],15],[[510,510],15],[[511,511],15],[[512,512],15],[[513,513],15],[[514,514],15],[[515,515],15],[[516,516],15],[[517,517],15],[[518,518],15],[[519,519],15],[[520,520],15],[[521,521],15],[[522,522],15],[[523,523],15],[[524,524],15],[[525,525],15],[[526,526],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[495,11],[[18,[125]]]],[[496,11],[[18,[125]]]],[[497,11],[[18,[125]]]],[[498,11],[[18,[125]]]],[[499,11],[[18,[125]]]],[[500,11],[[18,[125]]]],[[501,11],[[18,[125]]]],[[502,11],[[18,[125]]]],[[503,11],[[18,[125]]]],[[504,11],[[18,[125]]]],[[505,11],[[18,[125]]]],[[506,11],[[18,[125]]]],[[507,11],[[18,[125]]]],[[508,11],[[18,[125]]]],[[509,11],[[18,[125]]]],[[510,11],[[18,[125]]]],[[511,11],[[18,[125]]]],[[512,11],[[18,[125]]]],[[513,11],[[18,[125]]]],[[514,11],[[18,[125]]]],[[515,11],[[18,[125]]]],[[516,11],[[18,[125]]]],[[517,11],[[18,[125]]]],[[518,11],[[18,[125]]]],[[519,11],[[18,[125]]]],[[520,11],[[18,[125]]]],[[521,11],[[18,[125]]]],[[522,11],[[18,[125]]]],[[523,11],[[18,[125]]]],[[524,11],[[18,[125]]]],[[525,11],[[18,[125]]]],[[526,11],[[18,[125]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[495],[496],[497],[498],[499],[500],[501],[502],[503],[504],[505],[506],[507],[508],[509],[510],[511],[512],[513],[514],[515],[516],[517],[518],[519],[520],[521],[522],[523],[524],[525],[526],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],10],[[]],[[]],[10],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[17,[10]]]],[[],10],0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[491,491],[481,481],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[488,10],[489,10],[491,10],[492,10],[481,10],[482,10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[[488,11],[[18,[125]]]],[[489,11],[[18,[125]]]],[[491,11],[[18,[125]]]],[[492,11],[[18,[125]]]],[[481,11],[[18,[125]]]],[[482,11],[[18,[125]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[488,10],[489,10],[491,10],[492,10],[481,10],[482,10],[[],488],[[],489],[488,17],[489,17],[491,17],[492,17],[481,17],[482,17],[488,17],[489,17],[481,17],[482,17],[[16,16]],[[16,16]],[16],[16],[488],[489],[491],[492],[481],[482],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[10,10]],[10],[10],[[10,10]],[[10,10]],[10],[10],[[10,10]],[[]],[[],15],[[10,10],10],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10]],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[[]],[[]],[458],[[]],[[]],[458],[[]],[[]],[[]],[[]],[527,527],[528,528],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[[]],[[]],[10],[10],[78,15],[78,15],[[527,527],15],[[528,528],15],[[],15],[[],15],[[527,11],[[18,[125]]]],[[528,11],[[18,[125]]]],[[]],[[]],[[]],[[]],[[]],[[],10],[[]],[[],10],[458],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[16,16]],[[16,16]],[16],[16],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],17],[[],17],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[142,15],0,0,0,[[],15],[[]],[[]],[[]],[141,[[141,[140]]]],[144,[[144,[[142,[140,140,147]]]]]],[142,[[142,[140,140]]]],0,0,0,[141,[[141,[140]]]],[142,[[142,[140,140,147]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[142,142],15],0,0,0,[[]],[142,[[142,[140]]]],[[142,142]],0,[[],2],[[],2],[3],[[]],[[]],[529],[142,17],[142,17],[529,529],[[]],[[],[[9,[7,8]]]],[10],[10],[[]],[10],[[529,11],[[18,[125]]]],[[]],[[]],[[],529],[[],10],[[]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[529,529],[[],15],[[]],[[],529],[[16,16]],[16],[[529,142]],[[529,142]],[529],[[]],[[],17],[[]],[[],18],[[],18],[[],17],[[],19],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,254]],[[1,254]],[[530,63]],0,[531,108],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[230,230],[252,252],[251,251],[532,532],[531,531],[533,533],[534,534],[535,535],[536,536],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],0,[[],530],[[],230],[[],532],[[],531],[[],535],[10],[10],[10],[252],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[252],[10],[10],[10],[10],[10],[10],[10],[10],[116,63],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[78,15],0,0,[[531,531],15],[[],15],0,0,0,0,0,[[537,11],12],[[530,11],12],[[534,11],12],[[535,11],12],[[536,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[156],[156],[120],[156],[120],[120],[156],[120],[156],[120,536],0,[537,20],[530,20],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[530,120]],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[116,[17,[32]]],63],0,[537,178],[530,178],[[],530],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[530,120],538],[[116,[17,[116]]],63],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[116,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],539],[[],539],[[],539],[[],539],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[50,15],[50,15],[[[540,[539]]],539],[[[540,[539]]],539],[541,541],[542,542],[212,212],[[]],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[[],541],[[],542],[[],212],[10],[10],[212],[10],[10],[10],[10],[212],[16,539],[16,539],[[]],[[]],[[]],[10],[10],[10],[78,15],[78,15],[[541,541],15],[[542,542],15],[[],15],[[],15],[[],31],[[],31],[[],31],[[],31],[[],50],[[],50],[[],50],[[],50],[[]],[541],[542],[[541,11],[[18,[125]]]],[[542,11],[[18,[125]]]],[[]],[541,541],[542,542],[[]],[[]],[[]],[[]],[[]],[[]],[120],[156],[156],[120],[120],[156],[[]],[541],[542],[[],484],[[],191],[[],58],[[],429],[[],190],[[],451],[[],138],[[],189],[[],60],[[],154],[[],16],[[],10],[[[540,[484]]],484],[[[540,[484]]],484],[[[540,[191]]],191],[[[540,[191]]],191],[[[540,[58]]],58],[[[540,[58]]],58],[[[540,[429]]],429],[[[540,[429]]],429],[[[540,[190]]],190],[[[540,[190]]],190],[[],10],[[],10],[[],10],[1],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[[540,[451]]],451],[[[540,[451]]],451],[[],539],[[],539],[[],541],[[],542],[[16,16]],[[16,16]],[[16,16]],[16],[16],[16],[[]],[541],[542],[154],[[],17],[[],17],[[],17],[[],17],[10,[[175,[8]]]],[10,[[175,[8]]]],[10,[[175,[8]]]],[10,[[175,[8]]]],[10,[[175,[8]]]],[10,[[175,[8]]]],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[[540,[138]]],138],[[[540,[138]]],138],[[[540,[189]]],189],[[[540,[189]]],189],[[[540,[60]]],60],[[[540,[60]]],60],[[[540,[154]]],154],[[[540,[154]]],154],[[[540,[16]]],16],[[[540,[16]]],16],[[],20],[[],17],[[],17],[[],17],[[],539],[[],539],[[[540,[10]]],10],[[[540,[10]]],10],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[]],[[],541],[[],542],0,0,0,[[1,156]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[543,543],[544,544],[[]],[[]],[[],[[9,[7,8]]]],[[],[[9,[7,8]]]],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[10],[10],[10],[1,267],[[543,11],12],[[544,11],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],0,[[],15],[[],15],[[],15],0,0,[543,1],0,[[16,16]],[[16,16]],[16],[16],[1],[[1,120]],0,[[1,[13,[281]]]],[1,120],0,0,[[]],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],17],[[],17],[[],17],[[1,483]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[201,31],[201,32],[201,32],[201,32],[201,201],[[]],[[],[[9,[7,8]]]],[[201,32],15],[[],545],[[],201],[10],[10],[10],[10],[10],[10],[[]],[[]],[[]],[10],[10],[10],0,0,[[201,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[120],[156],[156],[120],0,[201,31],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[14,[[14,[2]]]],[[],15],[[],15],[[],15],[[],15],[201,31],[201,32],0,[201,32],0,[[31,31,31,31],201],[545,31],[[201,201],15],0,[[16,16]],[16],[201,31],[[31,31,31],31],[201,32],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[201,31],[201,32],[201,32],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],17],[[],17],[[],17],[[]],[[]],[[]],[201,31]],"p":[[3,"CoreSession"],[8,"Any"],[3,"RenderAssets"],[3,"Attachment"],[3,"PlayerBodyAttachment"],[3,"HadPlayerBodyAttachmentMarker"],[8,"TypeData"],[3,"Global"],[3,"Box"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Arc"],[3,"Rc"],[15,"bool"],[15,"u8"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Ulid"],[3,"Time"],[3,"Res"],[3,"Entities"],[3,"Sprite"],[6,"CompMut"],[6,"Comp"],[3,"Invincibility"],[3,"Transform"],[3,"AtlasSprite"],[4,"Color"],[15,"f32"],[3,"Vec2"],[3,"Vec3"],[3,"Vec3A"],[3,"Vec4"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Affine2"],[3,"Affine3A"],[3,"Mat3"],[3,"Mat2"],[3,"Mat3A"],[3,"Mat4"],[3,"Quat"],[3,"DAffine2"],[15,"f64"],[3,"DAffine3"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DQuat"],[3,"AssetProviders"],[3,"CommandQueue"],[15,"i32"],[3,"UVec2"],[15,"u32"],[3,"UVec3"],[3,"UVec4"],[3,"System"],[3,"SimpleSystemStage"],[3,"SystemStages"],[3,"CameraShake"],[3,"Duration"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[3,"BVec3A"],[3,"BVec4A"],[4,"EulerRot"],[8,"Reflect"],[3,"BitSetVec"],[3,"AtomicComponentStoreRef"],[3,"AtomicComponentStoreRefMut"],[8,"DynEq"],[3,"AtomicRefCell"],[3,"BitFmt"],[3,"ComponentStore"],[3,"UntypedComponentStore"],[3,"AtomicRef"],[3,"AtomicResource"],[3,"AtomicComponentStore"],[3,"AtomicRefMut"],[3,"BevyWorld"],[3,"Stopwatch"],[3,"Timer"],[4,"TimerMode"],[3,"Window"],[3,"AssetProvidersResource"],[3,"AssetPath"],[3,"AnimatedSprite"],[3,"Handle"],[3,"UntypedHandle"],[3,"AudioSource"],[3,"AudioEvents"],[4,"AudioEvent"],[3,"Camera"],[3,"Viewport"],[3,"AnimationBankSprite"],[3,"ClearColor"],[3,"ShakeNoise"],[3,"CameraTraumaEvents"],[3,"FrameTime"],[3,"UntypedResource"],[3,"Key"],[4,"KeyError"],[3,"Path2d"],[3,"Image"],[3,"Atlas"],[3,"TileLayer"],[3,"Tile"],[3,"ComponentStores"],[3,"Entity"],[3,"UntypedResources"],[3,"Resources"],[4,"CoreStage"],[3,"World"],[3,"DynamicStruct"],[4,"Ordering"],[3,"Reader"],[3,"SystemTime"],[3,"Error"],[3,"ResMut"],[3,"Commands"],[8,"Hasher"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"str"],[3,"BorrowError"],[3,"BorrowMutError"],[4,"HexColorError"],[4,"EcsError"],[15,"never"],[15,"u128"],[4,"FromHexError"],[3,"Const"],[3,"OPoint"],[3,"Matrix"],[3,"Complex"],[3,"Unit"],[3,"Isometry"],[3,"Similarity"],[3,"ArrayStorage"],[3,"Translation"],[3,"Rotation"],[3,"Quaternion"],[3,"__m128"],[4,"Color"],[3,"NavNode"],[15,"u64"],[4,"DecodeError"],[3,"World"],[8,"AssetProvider"],[3,"AssetProviderRef"],[3,"AssetProviderMut"],[3,"TypedComponentOps"],[3,"AssetPath"],[3,"Handle"],[3,"HandleUntyped"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"Transform"],[8,"Iterator"],[3,"FieldIter"],[3,"ComponentBitsetIteratorMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"EntitiesIterWith"],[3,"ComponentBitsetIterator"],[3,"UntypedComponentBitsetIterator"],[3,"EntityIterator"],[3,"Vec"],[3,"Layout"],[3,"LoadContext"],[3,"String"],[3,"Instant"],[3,"UntypedResourceInfo"],[3,"Path"],[4,"ReflectPathError"],[3,"Demand"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectRef"],[8,"UntypedAssetProvider"],[3,"Error"],[15,"u16"],[15,"i8"],[15,"i16"],[8,"Error"],[4,"EncodeError"],[3,"Writer"],[3,"Bullet"],[3,"BulletHandle"],[3,"ParallaxBackgroundSprite"],[3,"CameraState"],[3,"DamageRegion"],[3,"DamageRegionOwner"],[3,"Rect"],[3,"DebugSettings"],[3,"RapierDebugContext"],[3,"MapElementHydrated"],[3,"DehydrateOutOfBounds"],[3,"ElementHandle"],[4,"CrabState"],[3,"CrabCritter"],[3,"FishSchool"],[3,"Fish"],[4,"FishState"],[3,"GlobalRng"],[3,"ElementMeta"],[3,"BevyAssets"],[3,"Actor"],[3,"Collider"],[3,"CollisionWorld"],[3,"KinematicBody"],[3,"IdleGrenade"],[3,"LitGrenade"],[3,"IdleKickBomb"],[3,"LitKickBomb"],[3,"IdleMine"],[3,"ThrownMine"],[3,"Musket"],[3,"PlayerSpawner"],[3,"CurrentSpawner"],[3,"Slippery"],[3,"SlipperySeaweed"],[3,"PlayerState"],[4,"Snail"],[3,"Sproinger"],[3,"WearingStompBoots"],[3,"StompBoots"],[3,"Sword"],[4,"SwordState"],[3,"Urchin"],[3,"PlayerInputs"],[3,"PlayerInput"],[3,"PlayerControl"],[4,"EditorInput"],[3,"ItemThrow"],[3,"Item"],[3,"Inventory"],[3,"Inv"],[3,"ItemDropped"],[3,"ItemGrabbed"],[3,"ItemUsed"],[3,"ItemGrab"],[3,"PlayerInventories"],[3,"PlayerLayers"],[3,"PlayerIdx"],[3,"SpawnedMapLayerMeta"],[8,"IntoSystem"],[3,"Lifetime"],[3,"LoadedMap"],[3,"MapSpawned"],[3,"SpawnedMapMeta"],[3,"NavGraph"],[3,"NavGraphEdge"],[3,"JumpyCoreAssetsPlugin"],[3,"App"],[3,"ColorMeta"],[3,"ElementEditorMeta"],[3,"BulletMeta"],[4,"BuiltinElementKind"],[3,"MapMeta"],[3,"BackgroundMeta"],[3,"ParallaxLayerMeta"],[3,"MapLayerMeta"],[3,"ElementSpawn"],[3,"MapTileMeta"],[3,"PlayerMeta"],[3,"PlayerLayersMeta"],[3,"PlayerBodyLayerMeta"],[3,"BodyAnimationsMeta"],[3,"PlayerLayerMeta"],[3,"PlayerStatsMeta"],[3,"PlayerSoundsMeta"],[3,"CoreMetaArc"],[3,"CoreMeta"],[3,"CameraMeta"],[3,"PhysicsMeta"],[3,"CoreConfigMeta"],[3,"Uuid"],[8,"Fn"],[3,"ColliderShapeCache"],[4,"ColliderShape"],[3,"RapierContext"],[3,"CollisionCache"],[3,"Solid"],[3,"TileRapierHandle"],[4,"TileCollisionKind"],[6,"Aabb"],[3,"EntityHasher"],[3,"RigidBodySet"],[3,"ColliderSet"],[4,"CollisionEvent"],[3,"ContactPair"],[6,"Real"],[3,"SharedShape"],[3,"GenericTriMesh"],[3,"Aabb"],[3,"HalfSpace"],[3,"Polyline"],[3,"ConvexPolygon"],[3,"GenericHeightField"],[3,"Compound"],[3,"MassProperties"],[3,"RigidBody"],[3,"RigidBodyActivation"],[3,"Collider"],[3,"ActiveCollisionTypes"],[3,"ColliderBuilder"],[3,"IslandManager"],[3,"ActiveEvents"],[3,"ActiveHooks"],[3,"RigidBodyVelocity"],[3,"ColliderHandle"],[3,"ColliderParent"],[3,"ColliderPosition"],[4,"ColliderMassProps"],[3,"RigidBodyBuilder"],[3,"JointAxesMask"],[3,"RigidBodyChanges"],[3,"LockedAxes"],[3,"CollisionEventFlags"],[3,"ColliderChanges"],[3,"SolverFlags"],[3,"InteractionGroups"],[3,"Group"],[3,"TriMeshFlags"],[3,"QueryFilterFlags"],[3,"DebugRenderMode"],[3,"DefaultStorage"],[3,"RigidBodyDamping"],[3,"MultibodyJoint"],[3,"Multibody"],[3,"RigidBodyForces"],[3,"RigidBodyMassProps"],[8,"Shape"],[3,"Ball"],[3,"Capsule"],[8,"SimdCompositeShape"],[3,"Cuboid"],[3,"GenericJoint"],[3,"FixedJoint"],[3,"RoundShape"],[3,"Triangle"],[3,"PrismaticJoint"],[3,"RevoluteJoint"],[3,"RopeJoint"],[3,"Segment"],[8,"SupportMap"],[4,"TypedShape"],[3,"RigidBodyColliders"],[3,"RigidBodyCcd"],[3,"RigidBodyPosition"],[3,"MultibodyJointSet"],[3,"RigidBodyHandle"],[3,"ImpulseJointSet"],[4,"SegmentPointLocation"],[4,"TrianglePointLocation"],[4,"RigidBodyType"],[3,"BoundingSphere"],[3,"FixedJointBuilder"],[3,"GenericJointBuilder"],[3,"PrismaticJointBuilder"],[3,"RevoluteJointBuilder"],[3,"RopeJointBuilder"],[3,"Ray"],[3,"RayIntersection"],[3,"QueryPipeline"],[3,"QueryFilter"],[3,"IntegrationParameters"],[3,"CCDSolver"],[4,"PredictedImpacts"],[4,"CoefficientCombineRule"],[4,"JointAxis"],[3,"JointLimits"],[3,"JointMotor"],[4,"JointEnabled"],[3,"ImpulseJoint"],[3,"ImpulseJointHandle"],[4,"MotorModel"],[3,"MultibodyJointHandle"],[3,"MultibodyIndex"],[3,"MultibodyLink"],[4,"RigidBodyAdditionalMassProps"],[3,"RigidBodyIds"],[3,"RigidBodyDominance"],[3,"BodyPair"],[3,"TrackedContact"],[3,"ContactForceEvent"],[3,"BroadPhase"],[3,"ColliderPair"],[4,"ColliderType"],[3,"ColliderBroadPhaseData"],[3,"ColliderMaterial"],[4,"ShapeType"],[4,"ColliderEnabled"],[3,"ColliderFlags"],[3,"ContactData"],[3,"IntersectionPair"],[3,"ContactManifoldData"],[3,"SolverContact"],[3,"InteractionGraph"],[4,"TriangleOrientation"],[4,"TopologyError"],[3,"TriMeshConnectedComponents"],[3,"TopoVertex"],[3,"TopoFace"],[3,"TopoHalfEdge"],[3,"TriMeshTopology"],[4,"FeatureId"],[3,"PackedFeatureId"],[3,"NarrowPhase"],[4,"DebugRenderObject"],[3,"DebugRenderStyle"],[8,"FnMut"],[3,"EdgeIndex"],[3,"PolygonalFeature"],[3,"ContactManifold"],[3,"VHACDParameters"],[3,"CollisionPipeline"],[3,"PhysicsPipeline"],[3,"DebugRenderPipeline"],[3,"PairFilterContext"],[15,"i64"],[3,"Dyn"],[3,"ViewStorage"],[3,"ViewStorageMut"],[3,"ChannelEventCollector"],[8,"EventHandler"],[3,"VecStorage"],[3,"Index"],[8,"Into"],[3,"NodeIndex"],[3,"LU"],[8,"ExactSizeIterator"],[3,"ContactModificationContext"],[3,"Sender"],[3,"NonlinearRigidMotion"],[3,"PointProjection"],[3,"GenericQbvh"],[8,"PersistentQueryDispatcher"],[8,"QueryDispatcher"],[3,"Graph"],[3,"MultibodyJointLink"],[8,"PhysicsHooks"],[15,"isize"],[3,"Range"],[4,"QueryPipelineMode"],[3,"Transform"],[3,"DualQuaternion"],[3,"Scale"],[3,"AutoSimd"],[19,"MaybeUninit"],[3,"PermutationSequence"],[3,"Orthographic3"],[3,"Perspective3"],[3,"Reflection"],[3,"Bidiagonal"],[3,"Cholesky"],[3,"DefaultAllocator"],[3,"EuclideanNorm"],[3,"LpNorm"],[3,"UniformNorm"],[4,"TGeneral"],[4,"TProjective"],[4,"TAffine"],[3,"ColPivQR"],[3,"FullPivLU"],[3,"Hessenberg"],[3,"QR"],[3,"Schur"],[3,"SVD"],[3,"SymmetricEigen"],[3,"SymmetricTridiagonal"],[3,"UDU"],[3,"ColumnIter"],[3,"ColumnIterMut"],[8,"FnOnce"],[15,"i128"],[3,"WideF32x4"],[3,"WideF32x8"],[3,"WideF64x4"],[3,"MatrixIter"],[3,"MatrixIterMut"],[8,"IntoIterator"],[3,"RowIter"],[3,"RowIterMut"],[3,"SimdOption"],[3,"ShapeConstraint"],[3,"X"],[3,"XY"],[3,"XYZ"],[3,"XYZW"],[3,"XYZWA"],[3,"XYZWAB"],[3,"IJKW"],[3,"M2x2"],[3,"M2x3"],[3,"M2x4"],[3,"M2x5"],[3,"M2x6"],[3,"M3x2"],[3,"M3x3"],[3,"M3x4"],[3,"M3x5"],[3,"M3x6"],[3,"M4x2"],[3,"M4x3"],[3,"M4x4"],[3,"M4x5"],[3,"M4x6"],[3,"M5x2"],[3,"M5x3"],[3,"M5x4"],[3,"M5x5"],[3,"M5x6"],[3,"M6x2"],[3,"M6x3"],[3,"M6x4"],[3,"M6x5"],[3,"M6x6"],[3,"Init"],[3,"Uninit"],[3,"GivensRotation"],[3,"PlayerStateStageImpl"],[4,"Emote"],[3,"EmoteRegion"],[3,"PlayerKilled"],[3,"PlayerCommand"],[3,"AiPlayer"],[3,"PathfindingDebugLines"],[3,"PlayerStateStage"],[6,"SystemResult"],[15,"char"],[8,"RangeBounds"],[3,"Rng"],[3,"AtomicRng"],[3,"CoreSessionInfo"],[3,"GameSessionPlayerInfo"],[3,"Ease"],[8,"QueryItem"],[8,"SystemParam"],[8,"TypeUlid"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"SystemStage"],[8,"BitSet"],[8,"FromWorld"],[8,"StageLabel"],[8,"IntoBevy"],[8,"RawFns"],[8,"UnwrapMany"],[13,"PlaySound"],[13,"Rgba"],[13,"Walking"],[13,"Fleeing"],[13,"Moving"],[13,"Moving"],[13,"Swinging"],[13,"Cooldown"],[13,"SetTile"],[13,"MoveLayer"],[13,"MoveEntity"],[13,"DeleteEntity"],[13,"SpawnElement"],[13,"SetTilemap"],[13,"CreateLayer"],[13,"RenameLayer"],[13,"DeleteLayer"],[13,"RenameMap"],[13,"Grenade"],[13,"Sword"],[13,"KickBomb"],[13,"Musket"],[13,"Mine"],[13,"AnimatedDecoration"],[13,"Crab"],[13,"Snail"],[13,"Sproinger"],[13,"Crate"],[13,"SlipperySeaweed"],[13,"Slippery"],[13,"FishSchool"],[13,"Urchin"],[13,"StompBoots"],[13,"Circle"],[13,"Rectangle"],[3,"RapierUserData"],[4,"BroadPhasePairEvent"],[8,"TriMeshStorage"],[8,"HeightFieldStorage"],[8,"TypedSimdCompositeShape"],[8,"DebugRenderBackend"],[8,"PolygonalFeatureMap"],[13,"SweepTestWithPredictedPosition"],[13,"BadAdjascentTrianglesOrientation"],[8,"RawStorage"],[8,"ToConst"],[8,"SimdValue"],[8,"Normed"],[8,"ReshapableStorage"],[8,"DimAdd"],[8,"DimNameAdd"],[8,"DimMul"],[8,"DimNameMul"],[8,"DimSub"],[8,"DimNameSub"],[8,"DimDiv"],[8,"DimNameDiv"],[8,"DimMin"],[8,"DimNameMin"],[8,"DimMax"],[8,"DimNameMax"],[8,"ComplexField"],[8,"TCategoryMul"],[8,"SimdComplexField"],[8,"DimRange"],[8,"ToTypenum"],[8,"DimName"],[8,"SimdBool"],[8,"RawStorageMut"],[8,"RealField"],[8,"TCategory"],[8,"Storage"],[8,"Dim"],[8,"AbstractRotation"],[8,"Norm"],[8,"SimdRealField"],[8,"SimdPartialOrd"],[8,"Allocator"],[8,"Reallocator"],[8,"DimEq"],[8,"SameDimension"],[8,"SameNumberOfRows"],[8,"SameNumberOfColumns"],[8,"MatrixIndex"],[8,"MatrixIndexMut"],[8,"InitStatus"],[8,"SeededCore"],[8,"TurboRand"],[8,"TurboCore"],[8,"ForkableCore"],[8,"GenCore"],[4,"EaseFunction"]],"a":{"cross":[5641,5642,5643],"determinant":[5641,5642,5643],"magnitude":[5151,5152,5153,5154,5155,5156,5157,5158,5159],"magnitude2":[5169,5170,5171,5172,5173,5174,5175,5176,5177],"mix":[5178,5179,5180,5181,5182,5183,5184,5185,5186],"repeating":[6246],"scale":[3574,3575,3576,3577,3578,3579,3580],"wedge":[5641,5642,5643]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
